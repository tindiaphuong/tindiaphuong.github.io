{"version":3,"sources":["serviceWorker.js","constants/ActionTypes.js","util/ApiUtil.js","actions/TrendingFeedsAction.js","reducers/trendingFeedsReducer.js","actions/HeadlinesFeedsAction.js","reducers/headlinesFeedsReducer.js","actions/MapsAction.js","reducers/mapsReducer.js","util/AuthUtil.js","actions/AuthAction.js","reducers/authReducer.js","actions/SiteWrapperAction.js","reducers/siteWrapperReducer.js","reducers/rootReducers.js","components/ViewDetailRedirect.js","components/base/site/AliLogo.js","components/base/site/AliHeader.js","components/base/site/InnerSiteWrapper.react.js","components/SiteWrapper.react.js","util/ImageUtil.js","util/CommonUtil.js","components/Placeholder/EmptyPageContent.js","pages/TrendingFeedsPage.js","components/HeadlineFeed/SubHeadlineFeed.js","components/HeadlineFeed/HeadlineFeed.js","pages/HeadlinesFeedsPage.js","pages/management/OverviewPage.js","constants/Location.js","pages/MapPage.js","constants/Map_style.js","pages/NotFound.js","pages/management/AnalyticsPage.js","pages/management/setup/SetUpPage.js","pages/management/DashboardPage.js","pages/management/SettingPage.js","pages/management/ManagementPage.js","pages/HeaderFooterWrapperPage.js","util/withTouchedErrors.react.js","components/Form/LoginFormStrings.js","components/Form/LoginForm.js","pages/LoginPage.js","components/Form/RegisterFormStrings.js","components/Form/RegisterForm.js","pages/RegisterPage.js","App.react.js","index.js"],"names":["Boolean","window","location","hostname","match","SHOW_NEWS_DETAIL","baseUrl","process","apiUrl","get","url","a","result","axios","response","data","statusCode","status","isSuccess","message","endPoint","apiGet","REQUEST_NEWS_RELOAD","RECEIVE_NEWS_RELOAD","REQUEST_NEWS_LOAD_MORE","RECEIVE_NEWS_LOAD_MORE","receiveNewsListReload","list","type","fetchNewsList","page","dispatch","then","receiveNewsListLoadMore","result2","initalState","isFetching","hasMore","REQUEST_DATA_MAPS","RECEIVE_DATA_MAPS","requestDataMaps","receiveDataMaps","getDataMaps","baseGet","req","isLoading","jwtDecode","token","decoded","jwt_decode","error","RECEIVE_LOGIN","RECEIVE_REGISTER","REQUEST_LOGIN","REQUEST_REGISTER","REQUEST_SAVED_USER","RECEIVE_SAVED_USER","REQUEST_LOGOUT","RECEIVE_LOGOUT","requestLogin","requestRegister","receiveLogin","userObj","payload","receiveRegister","requestLogout","receiveLogout","localStorage","getItem","user","initialState","authData","name","email","username","undefined","RECEIVE_BRAND_INFO","RECEIVE_SITE_VISIBILITY","getBrandInfo","receiveBrandInfo","showFooter","showHeader","brandLogo","branding","subBranding","rootReducer","combineReducers","trendingFeedsReducer","state","action","console","log","length","Object","assign","headlinesFeedsReducer","mapsReducer","authReducer","siteWrapperReducer","ViewDetailRedirect","id","this","props","params","post","_asyncRequest","setState","catch","err","React","AliLogo","className","href","src","alt","title","LoaderDots","size","style","fontSize","description","AliHeader","children","align","imageURL","notificationsTrayFromProps","notificationsTray","accountDropdownFromProps","accountDropdown","navItems","onMenuToggleClick","Notification","Tray","AccountDropdown","onClick","displayName","InnerSiteWrapper","collapseMobileMenu","handleCollapseMobileMenu","s","headerProps","navProps","footerProps","routerContextComponentType","headerPropsWithToggleClick","header","navPropsWithCollapse","collapse","nav","Site","Nav","footer","Footer","Main","navBarItems","value","to","icon","LinkComponent","withRouter","NavLink","useExact","subItems","SiteWrapper","notificationsObjects","currentUser","actionLogout","removeItem","reduce","v","unread","copyright","avatarURL","options","active","role","isDivider","itemsObjects","RouterContextProvider","SiteWrapperContainer","connect","sourceLogo","image","sourceLogos","findSourceLogo","logos","find","element","momentFromNow","dateTime","moment","locale","fromNow","EmptyPageContent","buttonText","backgroundColor","backgroundClip","border","borderRadius","boxShadow","onButtonClick","TrendingFeedsPage","loadMoreData","endOfPage","body","newsList","mainNews","moreNews","i","item","push","Col","width","imgSrc","thumbnail","imgAlt","summary","profileHref","source","postHref","authorName","avatarImgSrc","date","publicationDate","iconName","lg","md","Row","xl","aside","calendar","class","Content","cards","deck","Header","dataLength","next","loader","emptyBody","TrendingFeedsContainer","SubHeadlineFeed","imageUrl","sourceName","sourceImageUrl","sourceUrl","sourceBaseUrl","subs","ListItem","Body","target","rel","HeadlineFeed","classes","cn","Heading","List","Sub","HeadlinesFeedsPage","feeds","items","slice","headline","shift","map","index","height","overflow","HeadlinesFeedsContainer","OverviewPage","exact","path","component","AnalyticsPage","HomePage","PureComponent","libraries","mapContainerStyle","center","lat","Location","lng","titleStyle","position","zIndex","styles","disableDefaultUI","SearchPlace","usePlacesAutocomplete","requestOptions","radius","ready","suggestions","setValue","clearSuggesetions","GetIcon","marker","numOfArticles","diameter","scaledSize","google","maps","Size","origin","Point","anchor","MapsContainer","useLoadScript","googleMapsApiKey","isLoaded","loadError","useState","selected","setSelected","useEffect","markers","onMapClick","useCallback","e","setMarkers","latLng","time","Date","mapRef","useRef","onMapLoad","current","Fragment","zoom","onLoad","toISOString","onCloseClick","Error404Page","subtitle","details","sm","layout","movement","total","label","Title","columns","groups","colors","data1","names","axis","y","padding","bottom","show","tick","outer","x","left","right","legend","inset","step","tooltip","format","point","striped","responsive","ColHeader","colSpan","link","Link","data2","top","data3","data4","content","progressColor","progressWidth","color","highlightRowOnHover","hasOutline","verticalAlign","alignContent","muted","Small","Bar","payment","trigger","Trigger","toggle","Item","ItemDivider","prefix","RootComponent","auto","chart","transition","duration","pattern","headerItems","bodyItems","key","isDropdownToggle","AnalyticsContainer","SetUpPage","method","novalidate","aria-disabled","aria-selected","aria-controls","tabindex","aria-labelledby","aria-hidden","for","placeholder","required","aria-required","aria-invalid","display","disabled","aria-label","SetUpContainer","DashboardPage","DashboardContainer","SettingPage","fullKeywords","defaultKeywords","addedKeywords","keywords","locations","reload","fullKeywordsRes","locationsRes","initial_keywords","related_keywords","added_keywords","forEach","kw","disableable","removeable","includes","Card","Group","InputGroup","Input","InputGroupPrepend","InputGroupText","Select","SelectGroup","pills","canSelectMultiple","SelectGroupItem","checked","SettingContainer","ManagementPage","ManagementContainer","require","Route","Switch","HashRouter","HeaderFooterWrapperPage","NotFound","HeaderFooterWrapperContainer","touchedErrors","touched","errors","fields","acc","cur","withTouchedErrors","Component","strings","emailLabel","emailPlaceholder","passwordLabel","passwordPlaceholder","LoginPageWithTouchedErrors","onSubmit","onChange","onBlur","values","defaultStrings","password","LoginPage","success","initialValues","validate","test","setSubmitting","setErrors","res","setItem","split","render","handleChange","handleBlur","handleSubmit","isSubmitting","LoginContainer","usernameLabel","usernamePlaceholder","nameLabel","namePlaceholder","termsLabel","RegisterPageWithTouchedErrors","terms","RegisterPage","formData","RegisterContainer","authReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","rootElement","document","getElementById","Error","ReactDOM","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.10f1d89f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const SHOW_NEWS_DETAIL = \"SHOW_NEWS_DETAIL\"\n","import axios from 'axios';\n\nconst baseUrl = process.env.REACT_APP_BASE_URL; //  https://abc.xyz/\nconst apiUrl = process.env.REACT_APP_API_URL; // https://abc.xyz/api/v2/\n\nexport async function get(url) {\n    const result = {};\n\n    try {\n        const response = await axios.get(url);\n        result.data = response.data;\n        result.statusCode = response.status || 500;\n        result.isSuccess = true;\n    } catch (err) {\n        result.statusCode = (err.response && err.response.status) || 500;\n        result.message = err.message || \"\";\n        result.isSuccess = false;\n    };\n    return result;\n}\n\n/**\n * Get data, add default base url\n * @param {} endPoint \n */\nexport async function baseGet(endPoint) {\n    const url = baseUrl + endPoint;\n    return await get(url);\n}\n\n/**\n * get data, added default api url\n * @param {*} endPoint \n */\nexport async function apiGet(endPoint) {\n    const url = apiUrl + endPoint;\n    return await get(url);\n}","import { dispatch } from \"react-redux\";\n\nimport * as types from '../constants/ActionTypes';\n\nimport { apiGet } from \"../util/ApiUtil\";\n\nexport const REQUEST_NEWS_RELOAD = \"REQUEST_NEWS_RELOAD_TRENDING\";\nexport const RECEIVE_NEWS_RELOAD = \"RECEIVE_NEWS_RELOAD_TRENDING\";\n\nexport const REQUEST_NEWS_LOAD_MORE = \"REQUEST_NEWS_LOAD_MORE_TRENDING\";\nexport const RECEIVE_NEWS_LOAD_MORE = \"RECEIVE_NEWS_LOAD_MORE_TRENDING\";\n\n\nfunction requestNewsListReload() {\n    return {\n        type: REQUEST_NEWS_RELOAD\n    }\n}\n\nfunction requestNewsListLoadMore() {\n    return {\n        type: REQUEST_NEWS_LOAD_MORE\n    }\n}\n\nfunction receiveNewsListReload(list = [], statusCode, message) {\n    return {\n        type: RECEIVE_NEWS_RELOAD,\n        list,\n        statusCode,\n        message\n    }\n}\n\nfunction receiveNewsListLoadMore(page = 1, list = [], statusCode, message) {\n    return {\n        type: RECEIVE_NEWS_LOAD_MORE,\n        page,\n        list,\n        statusCode,\n        message\n    }\n}\n\nexport function loadNewsDetail(id) {\n    return {\n        type: types.SHOW_NEWS_DETAIL,\n        id\n    }\n}\n\nexport function fetchNewsList(page) {\n    if (!page || page === 0) {\n        // this is reload\n        return dispatch => {\n            // mark as refreshing\n            dispatch(requestNewsListReload())\n            return apiGet(\"/news\")\n                .then(result => {\n                    if (result.isSuccess) {\n\n                        dispatch(receiveNewsListReload(result.data, result.statusCode, result.message))\n                    } else {\n                        // try 1 more time\n                        apiGet(\"/news\").then(result2 => dispatch(receiveNewsListReload(result.data, result.statusCode, result.message)));\n                    }\n                });\n        }\n    } else {\n        // this is load more\n        return dispatch => {\n            dispatch(requestNewsListLoadMore())\n            return apiGet(\"/news?page=\" + (page + 1)).then(result => dispatch(receiveNewsListLoadMore(page + 1, result.data, result.statusCode, result.message)));\n        }\n    }\n}\n\n","import { SHOW_NEWS_DETAIL } from '../constants/ActionTypes';\nimport { RECEIVE_NEWS_LOAD_MORE, RECEIVE_NEWS_RELOAD, REQUEST_NEWS_LOAD_MORE, REQUEST_NEWS_RELOAD } from \"../actions/TrendingFeedsAction\";\n\nconst initalState = {\n    list: [],\n    page: 1,\n    isFetching: false,\n    hasMore: true,\n    statusCode: 0,\n    message: \"\"\n}\n\nexport default function trendingFeedsReducer(state = initalState, action) {\n    console.log(action.type)\n\n    switch (action.type) {\n        case RECEIVE_NEWS_RELOAD:\n            return {\n                ...state,\n                isFetching: false,\n                page: 1,\n                hasMore: action.list && action.list.length > 0,\n                list: [...action.list],\n                statusCode: action.statusCode,\n                message: action.message\n            }\n\n        case RECEIVE_NEWS_LOAD_MORE:\n            console.log(\"state: \");\n            console.log(state);\n            console.log(\"list: \");\n            console.log(action.list);\n            return {\n                ...state,\n                isFetching: false,\n                page: state.page + 1,\n                hasMore: action.list && action.list.length > 0,\n                list: [...state.list, ...action.list],\n                statusCode: action.statusCode,\n                message: action.message\n            }\n\n        case REQUEST_NEWS_LOAD_MORE:\n        case REQUEST_NEWS_RELOAD:\n            return Object.assign({}, state, {\n                isFetching: true\n            })\n\n        case SHOW_NEWS_DETAIL:\n        default:\n            return state;\n\n    }\n}","import { dispatch } from \"react-redux\";\n\nimport * as types from '../constants/ActionTypes';\n\nimport { apiGet } from \"../util/ApiUtil\";\n\n\nexport const REQUEST_NEWS_RELOAD = \"REQUEST_NEWS_RELOAD_HEADLINES\";\nexport const RECEIVE_NEWS_RELOAD = \"RECEIVE_NEWS_RELOAD_HEADLINES\";\n\nexport const REQUEST_NEWS_LOAD_MORE = \"REQUEST_NEWS_LOAD_MORE_HEADLINES\";\nexport const RECEIVE_NEWS_LOAD_MORE = \"RECEIVE_NEWS_LOAD_MORE_HEADLINES\";\n\n\nfunction requestNewsListReload() {\n    return {\n        type: REQUEST_NEWS_RELOAD\n    }\n}\n\nfunction requestNewsListLoadMore() {\n    return {\n        type: REQUEST_NEWS_LOAD_MORE\n    }\n}\n\nfunction receiveNewsListReload(list = [], statusCode, message) {\n    return {\n        type: RECEIVE_NEWS_RELOAD,\n        list,\n        statusCode,\n        message\n    }\n}\n\nfunction receiveNewsListLoadMore(page = 1, list = [], statusCode, message) {\n    return {\n        type: RECEIVE_NEWS_LOAD_MORE,\n        page,\n        list,\n        statusCode,\n        message\n    }\n}\n\nexport function loadNewsDetail(id) {\n    return {\n        type: types.SHOW_NEWS_DETAIL,\n        id\n    }\n}\n\nexport function fetchNewsList(page) {\n    if (!page || page == 0) {\n        return dispatch => {\n            // mark as refreshing\n            dispatch(requestNewsListReload())\n\n            return apiGet(\"/news/feed/similarity\")\n                .then(result => {\n                    if (result.isSuccess) {\n                        dispatch(receiveNewsListReload(result.data, result.statusCode, result.message));\n                    } else {\n                        // try 1 more time\n                        apiGet(\"/news/feed/similarity\").then(result2 => dispatch(receiveNewsListReload(result2.data, result2.statusCode, result2.message)));\n                    }\n                })\n            };\n        } else {\n            return dispatch => {\n                // mark as refreshing\n                dispatch(requestNewsListLoadMore())\n                return apiGet(\"/news/feed/similarity?page=\" + (page + 1)).then(result => dispatch(receiveNewsListLoadMore(page + 1, result.data, result.statusCode, result.message)));\n            }\n        }\n    }\n\n","import { SHOW_NEWS_DETAIL } from '../constants/ActionTypes';\nimport { RECEIVE_NEWS_LOAD_MORE, RECEIVE_NEWS_RELOAD, REQUEST_NEWS_LOAD_MORE, REQUEST_NEWS_RELOAD } from \"../actions/HeadlinesFeedsAction\";\n\nconst initalState = {\n    list: [],\n    page: 1,\n    isFetching: false,\n    hasMore: true,\n    statusCode: 0,\n    message: \"\"\n}\n\nexport default function headlinesFeedsReducer(state = initalState, action) {\n    console.log(action.type)\n\n    switch (action.type) {\n            case RECEIVE_NEWS_RELOAD:\n                return {\n                    ...state,\n                    isFetching: false,\n                    page: 1,\n                    hasMore: action.list && action.list.length > 0,\n                    list: [...action.list],\n                    statusCode: action.statusCode,\n                    message: action.message\n                }\n                \n            case RECEIVE_NEWS_LOAD_MORE:\n                console.log(\"state: \");\n                console.log(state);\n                console.log(\"list: \");\n                console.log(action.list);\n                return {\n                    ...state,\n                    isFetching: false,\n                    page: state.page + 1,\n                    hasMore: action.list && action.list.length > 0,\n                    list: [...state.list, ...action.list],\n                    statusCode: action.statusCode,\n                    message: action.message\n                }\n\n            case REQUEST_NEWS_LOAD_MORE:\n            case REQUEST_NEWS_RELOAD:\n                return Object.assign({}, state, {\n                    isFetching: true\n                })\n                \n        case SHOW_NEWS_DETAIL:\n        default:\n            return state;\n                \n    }\n}","import { baseGet } from \"../util/ApiUtil\";\n\n\nexport const REQUEST_DATA_MAPS = \"REQUEST_DATA_MAPS\";\nexport const RECEIVE_DATA_MAPS = \"RECEIVE_DATA_MAPS\";\nexport const SET_DATA_MARKERS = \"SET_DATA_MARKERS\";\n\nfunction requestDataMaps() {\n    return {\n        type: REQUEST_DATA_MAPS\n    }\n}\n\nfunction receiveDataMaps(data = []) {\n    return {\n        type: RECEIVE_DATA_MAPS,\n        data\n    }\n}\n\n\n\nexport function getDataMaps() {\n    return dispatch => {\n        dispatch(requestDataMaps())\n        return baseGet(\"/api/statistics/map\").then(req => dispatch(receiveDataMaps(req.data)));\n    }\n}\n\nexport function setMarkers(markers) {\n    return dispatch => {\n        dispatch(requestDataMaps());\n        return dispatch(receiveDataMaps(markers));\n    }\n}\n\n","import { RECEIVE_DATA_MAPS, REQUEST_DATA_MAPS } from \"../actions/MapsAction\";\n\nconst initalState = {\n    data: [],\n    isLoading: false\n}\n\nexport default function DataMapsReducer(state = initalState, action) {\n    console.log(action.type)\n\n    switch (action.type) {\n        case RECEIVE_DATA_MAPS:\n            return {\n                ...state,\n                data: action.data,\n                isLoading: false\n\n            }\n\n        case REQUEST_DATA_MAPS:\n            return { ...state, isLoading: false }\n\n        default:\n            return state;\n\n    }\n}","import jwt_decode from 'jwt-decode';\n\nexport const jwtDecode=(token) => {\n    let decoded;\n    if(token) {\n        try {\n            decoded = jwt_decode(token);\n        } catch(error) {}\n    }\n    return decoded;\n}","import axios from 'axios';\nimport { jwtDecode } from '../util/AuthUtil';\n\nexport const RECEIVE_LOGIN = \"RECEIVE_LOGIN\";\nexport const RECEIVE_REGISTER = \"RECEIVE_REGISTER\";\n\nexport const REQUEST_LOGIN = \"REQUEST_LOGIN\";\nexport const REQUEST_REGISTER = \"REQUEST_REGISTER\";\n\nexport const REQUEST_SAVED_USER = \"REQUEST_SAVED_USER\";\nexport const RECEIVE_SAVED_USER = \"RECEIVE_SAVED_USER\";\n\nexport const REQUEST_LOGOUT = \"REQUEST_LOGOUT\";\nexport const RECEIVE_LOGOUT = \"RECEIVE_LOGOUT\";\n\n\nexport const postUserLogin = user => {\n  return dispatch => {\n    dispatch(requestLogin())\n    return axios.post(process.env.REACT_APP_BASE_URL + \"/auth/login\", { email: user.email, password: user.password })\n      .then(res => {\n        let data = res.data\n        if (!data) return;\n        if (!data.success) {\n          console.log(data.message);\n          dispatch(receiveRegister({message: data.message}))\n        } else {\n          localStorage.setItem(\"token\", data.token.split(\" \")[1])\n          dispatch(receiveLogin(data))\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        if (err && err.response && err.response.data) {\n          dispatch(receiveLogin(err.response.data))\n        } else {\n          dispatch(receiveLogin({ message: err.message }))\n        }\n      })\n  }\n}\n\nexport const postUserRegister = formData => {\n  return dispatch => {\n    dispatch(requestRegister())\n    var user = {\n      username: formData.username,\n      password: formData.password,\n      email: formData.email,\n      name: formData.name\n    }\n    return axios.post(process.env.REACT_APP_BASE_URL + \"/auth/register\", user)\n      .then(res => {\n        let data = res.data\n        if (!data) return;\n        if (!data.success) {\n          console.log(data.message);\n          dispatch(receiveRegister({message: data.message}))\n        } else {\n          localStorage.setItem(\"token\", data.token)\n          dispatch(receiveRegister(data))\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        if (err && err.response && err.response.data) {\n          dispatch(receiveRegister(err.response.data))\n        } else {\n          dispatch(receiveRegister({ message: err.message }))\n        }\n      })\n  }\n}\n\nexport const loadSavedUser = () => {\n  return dispatch => {\n\n    dispatch(requestSavedUser())\n    const token = localStorage.getItem(\"token\");\n\n    var user = jwtDecode(token);\n    dispatch(receiveSavedUser(user))\n\n  }\n}\n\nexport const LogoutUser = () => {\n  return dispatch => {\n    dispatch(requestLogout())\n    localStorage.removeItem(\"token\");\n    dispatch(receiveLogout())\n\n\n  }\n}\n\nconst requestLogin = () => ({\n  type: REQUEST_LOGIN\n})\n\nconst requestRegister = () => ({\n  type: RECEIVE_REGISTER\n})\n\nconst receiveLogin = userObj => ({\n  type: RECEIVE_LOGIN,\n  payload: userObj\n})\n\nconst receiveRegister = userObj => ({\n  type: RECEIVE_LOGIN,\n  payload: userObj\n})\n\nconst requestSavedUser = () => ({\n  type: REQUEST_SAVED_USER\n})\n\nconst receiveSavedUser = userObj => ({\n  type: RECEIVE_SAVED_USER,\n  payload: userObj\n})\n\n\nconst requestLogout = () => ({\n  type: REQUEST_LOGOUT,\n\n})\n\nconst receiveLogout = () => ({\n  type: RECEIVE_LOGOUT,\n\n})","import { REQUEST_LOGIN, REQUEST_REGISTER, RECEIVE_LOGIN, RECEIVE_REGISTER, REQUEST_SAVED_USER, RECEIVE_SAVED_USER, REQUEST_LOGOUT, RECEIVE_LOGOUT } from '../actions/AuthAction'\nimport { jwtDecode } from '../util/AuthUtil';\n\nconst token = localStorage.getItem(\"token\");\n\nlet user = jwtDecode(token);\n\nconst initialState = {\n  authData:   user && user.name && user.email && user.username ?{user } : undefined,\n  isSuccess: true,\n  isFetching: false,\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case REQUEST_LOGIN:\n    case REQUEST_REGISTER:\n      return { ...state, isFetching: true }\n    case RECEIVE_LOGIN:\n      return { ...state, isFetching: false, authData: action.payload }\n    case RECEIVE_REGISTER:\n      return { ...state, isFetching: false, authData: action.payload }\n    case RECEIVE_SAVED_USER:\n      const authData = action.payload ? { user: action.payload } : state.authData;\n      return { ...state, isFetching: false, authData: authData }\n    case REQUEST_SAVED_USER:\n      return state;\n    case RECEIVE_LOGOUT:\n      state.authData = null\n      state.isSuccess = false\n      return state;\n    case REQUEST_LOGOUT:\n      state.authData = null\n      state.isSuccess = false\n      return state;\n    default:\n      return state;\n  }\n}","import { apiGet } from \"../util/ApiUtil\";\n\n\nexport const REQUEST_BRAND_INFO = \"REQUEST_BRAND_INFO\";\nexport const RECEIVE_BRAND_INFO = \"RECEIVE_BRAND_INFO\";\nexport const REQUEST_SITE_VISIBILITY = \"REQUEST_SITE_VISIBILITY\";\nexport const RECEIVE_SITE_VISIBILITY = \"RECEIVE_SITE_VISIBILITY\";\n\nfunction requestBrandInfo() {\n    return {\n        type: REQUEST_BRAND_INFO\n    }\n}\n\nfunction receiveBrandInfo(data = {}) {\n    return {\n        type: RECEIVE_BRAND_INFO,\n        data\n    }\n}\n\nfunction requestSiteVisibility() {\n    return {\n        type: REQUEST_SITE_VISIBILITY\n    }\n}\n\nfunction receiveSiteVisibility(showHeader = true, showFooter = true) {\n    return {\n        type: RECEIVE_SITE_VISIBILITY,\n        showHeader,\n        showFooter\n    }\n}\n\nexport function getBrandInfo() {\n    return dispatch => {\n        dispatch(requestBrandInfo())\n        return apiGet(\"/info\").then(req => dispatch(receiveBrandInfo(req.data)));\n    }\n}\n\nexport function setSiteVisibility(showHeader = true, showFooter = true) {\n    return dispatch => {\n        return dispatch(receiveSiteVisibility(showFooter, showFooter));\n    }\n}","import { RECEIVE_BRAND_INFO, RECEIVE_SITE_VISIBILITY } from \"actions/SiteWrapperAction\";\n\nconst initalState = {\n    showFooter: true,\n    showHeader: true,\n    brandLogo: null,\n    branding: \"Tin địa phương\",\n    subBranding: \"Quan 1\",\n    isFetching: false\n}\n\nexport default function siteWrapperReducer(state = initalState, action) {\n    const data = action.data;\n    switch (action.type) {\n        case RECEIVE_BRAND_INFO:\n            return {\n                ...state,\n                branding: data && data.branding ? data.branding : state.branding,\n                subBranding: data && data.subBranding? data.subBranding : state.subBranding\n            }\n        case RECEIVE_SITE_VISIBILITY:\n            return {\n                ...state,\n                showHeader: action.showHeader || state.showHeader,\n                showFooter: action.showFooter || state.showFooter,\n            }\n\n        default:\n            return state;\n\n    }\n}","import { combineReducers } from 'redux';\nimport trendingFeedsReducer from './trendingFeedsReducer';\nimport headlinesFeedsReducer from './headlinesFeedsReducer';\nimport mapsReducer from './mapsReducer';\nimport authReducer from './authReducer';\nimport siteWrapperReducer from './siteWrapperReducer';\n\nconst rootReducer = combineReducers({\n    trendingFeedsReducer,\n    headlinesFeedsReducer,\n    mapsReducer,\n    authReducer,\n    siteWrapperReducer\n});\n\nexport default rootReducer;","import * as React from \"react\";\nimport axios from 'axios'\nimport { Redirect } from \"react-router-dom\";\nexport default class ViewDetailRedirect extends React.Component {\n    state = {\n        url: null,\n    };\n\n    componentWillMount() {\n        const { id } = this.props.params.id;\n        axios.post(\"server\", { id }).then(\n            result => {\n                this._asyncRequest = null;\n                this.setState({ url: result.url });\n            }\n        ).catch((err)=>{})\n    }\n\n    // componentWillUnmount() {\n    //     if (this._asyncRequest) {\n    //         this._asyncRequest.cancel();\n    //     }\n    // }\n\n    render() {\n        const url = this.url;\n        const redirectUrl =\"link\"\n        return <Redirect url={url||redirectUrl}></Redirect>\n    }\n    \n\n    // async render() {\n    //     const { id } = this.props.match.params\n    //     return (\n    //         <div>\n    //             {{getRedirect(id)}}\n    //         </div>\n    //     )\n\n    // }\n\n    // getRedirect = async (id)=> {\n    //     try {\n    //         let result = await axios.post(\"server\", { id })\n    //         if (result && result.url) {\n    //             return <Redirect url={result.url} />\n    //         }\n    //     }\n    //     catch { }\n    //     return <p>Redirecting to 404 page...</p>\n    // }\n\n\n}\n\n\n\nfunction openInNewTab(url) {\n    var win = window.open(url, '_blank');\n    win.focus();\n}\n\n","import { string } from \"prop-types\";\n// @flow\nimport * as React from \"react\";\nimport { LoaderDots } from '@thumbtack/thumbprint-react';\n\n\ntype Props = {|\n+href ?: string,\n    +src ?: string,\n    +alt ?: string,\n    +title ?: string,\n    +description ?: string\n        |};\nclass AliLogo extends React.PureComponent {\n    render() {\n        const isFetching = this.props.isFetching || false;\n        return (\n            <a className=\"header-brand nav-link pr-0 leading-none\" href={this.props.href}>\n                <img src={this.props.src} className=\"header-brand-img\" alt={this.props.alt} />\n                <span className=\"m1-2 d-lg-block\">\n                    <span className=\"text-default font-weight-bold\">\n                        {this.props.title}\n                    </span>\n                    <span className=\"sub-branding layered\">\n                        {!isFetching ?\n                            <small className=\"text-blue d-block mt-1 dt\" style={{ fontSize: \"1rem\" }}>\n                                {this.props.description}\n                            </small> :\n                            <span className=\"sub-branding-loader\" ><LoaderDots size=\"small\" /></span>}\n                    </span>\n                </span>\n            </a>)\n    }\n}\n\nexport default AliLogo;","import * as React from \"react\";\nimport AliLogo from \"./AliLogo\";\nimport { AccountDropdown, Container, Notification } from \"tabler-react\";\n\nconst AliHeader = ({\n    children,\n    href,\n    align,\n    imageURL,\n    alt,\n    title,\n    description,\n    isFetching,\n    notificationsTray: notificationsTrayFromProps,\n    accountDropdown: accountDropdownFromProps,\n    navItems,\n    onMenuToggleClick,\n}) => {\n\n    const notificationsTray = notificationsTrayFromProps &&\n        React.createElement(Notification.Tray, notificationsTrayFromProps);\n\n    const accountDropdown = accountDropdownFromProps &&\n        React.createElement(AccountDropdown, accountDropdownFromProps);\n\n    return (\n        <div className=\"header py-4\">\n            <Container className={align}>\n                <div className=\"d-flex\">\n                    {children || (\n                        <React.Fragment>\n                            <AliLogo href={href} alt={alt} src={imageURL} title={title} description={description} isFetching={isFetching} />\n                            <div className=\"d-flex order-lg-2 ml-auto\">\n                                {navItems}\n                                {notificationsTray}\n                                {accountDropdown}\n                            </div>\n                            <a\n                                className=\"header-toggler d-lg-none ml-3 ml-lg-0\"\n                                onClick={onMenuToggleClick}\n                            >\n                                <span className=\"header-toggler-icon\" />\n                            </a>\n                        </React.Fragment>\n                    )}\n                </div>\n            </Container>\n        </div>\n    );\n};\n\nAliHeader.displayName = \"Ali.Header\"\nexport default AliHeader;","import * as React from \"react\";\nimport { Page, Site, Nav } from \"tabler-react\";\n\nimport AliHeader from \"./AliHeader\";\n\n\nclass InnerSiteWrapper extends React.PureComponent {\n    static displayName = \"AliWrapper\";\n\n    state = {\n        collapseMobileMenu: true,\n    }\n\n    handleCollapseMobileMenu = () => {\n        this.setState(s => ({ collapseMobileMenu: !s.collapseMobileMenu }))\n    };\n\n    render() {\n        const {\n            headerProps,\n            navProps,\n            footerProps,\n            children,\n            routerContextComponentType,\n        } = this.props;\n\n        const headerPropsWithToggleClick = {\n            ...headerProps,\n            onMenuToggleClick: this.handleCollapseMobileMenu,\n        };\n\n        const header = React.createElement(AliHeader, headerPropsWithToggleClick);\n        const navPropsWithCollapse = {\n            ...navProps,\n            collapse: this.state.collapseMobileMenu,\n            routerContextComponentType: routerContextComponentType,\n        };\n\n        const nav = React.createElement(Site.Nav, navPropsWithCollapse);\n\n        const footer = React.createElement(Site.Footer, footerProps);\n        return (\n            <Page>\n                <Page.Main>\n                    {header}\n                    {nav}\n                    {children}\n                </Page.Main>\n                {footer}\n            </Page>\n        );\n    }\n}\n\nexport default InnerSiteWrapper;","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { NavLink, withRouter } from \"react-router-dom\";\n\nimport {\n  RouterContextProvider,\n} from \"tabler-react\";\n\nimport { LogoutUser } from \"../actions/AuthAction\";\nimport InnerSiteWrapper from \"./base/site/InnerSiteWrapper.react\";\nconst navBarItems = [\n  {\n    value: \"Trang chủ\",\n    to: \"/\",\n    icon: \"home\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  },\n  {\n    value: \"Xu hướng\",\n    icon: \"trending-up\",\n    to: \"/trendings\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  },\n  {\n    value: \"Bản đồ tin tức\",\n    icon: \"map-pin\",\n    to: \"/maps\",\n    LinkComponent: withRouter(NavLink),\n    useExact: true,\n  },\n  {\n    value: \"Quản trị (dành cho quản trị viên)\",\n    icon: \"grid\",\n\n    subItems: [\n      {\n        value: \"Tổng quan\", to: \"/management\", LinkComponent: withRouter(NavLink),\n      },\n      {\n        value: \"Thống kê\", to: \"/management/analytics\", LinkComponent: withRouter(NavLink),\n      },\n      {\n        value: \"Thiết lập\", to: \"/management/setting\", LinkComponent: withRouter(NavLink)\n      },\n\n    ],\n  }\n\n\n  /* ,\n  {\n    value: \"Coronavirus\",\n    icon: \"shield\",\n    subItems: [\n      { value: \"Maps\", to: \"/maps\", LinkComponent: withRouter(NavLink) },\n      { value: \"Icons\", to: \"/icons\", LinkComponent: withRouter(NavLink) },\n      { value: \"Store\", to: \"/store\", LinkComponent: withRouter(NavLink) },\n      { value: \"Blog\", to: \"/blog\", LinkComponent: withRouter(NavLink) },\n    ],\n  } */\n];\n\n\nclass SiteWrapper extends React.Component {\n\n  state = {\n    notificationsObjects: [\n      /*  {\n         unread: true,\n         avatarURL: \"demo/faces/male/41.jpg\",\n         message: (\n           <React.Fragment>\n             Hello1\n           </React.Fragment>\n         ),\n         time: \"10 minutes ago\",\n       },\n       {\n         unread: true,\n         avatarURL: \"demo/faces/female/1.jpg\",\n         message: (\n           <React.Fragment>\n             hello 2\n           </React.Fragment>\n         ),\n         time: \"1 hour ago\",\n       },\n       {\n         unread: false,\n         avatarURL: \"demo/faces/female/18.jpg\",\n         message: (\n           <React.Fragment>\n             hello3\n           </React.Fragment>\n         ),\n         time: \"2 hours ago\",\n       }, */\n    ],\n  };\n\n  render() {\n    const { dispatch, currentUser, siteWrapperReducer } = this.props;\n\n\n    const actionLogout = () => {\n      dispatch(LogoutUser())\n    }\n\n\n    const accountDropdownPropsFunc = (user) => {\n      if (user) {\n        return {\n          avatarURL: \"https://s120-ava-talk.zadn.vn/4/c/d/3/0/120/09f385d32d7677e9ff00099536a7d200.jpg\",\n          name: user.name,\n          description: \"Quận 9, Tp. Hcm\",\n          options: [\n            /*          { icon: \"user\", value: \"Profile\" },\n                     { icon: \"settings\", value: \"Settings\" },\n                     { icon: \"mail\", value: \"Inbox\", badge: \"6\" }, */\n            { icon: \"send\", value: \"dashboard\", active: user.role === 1, to: \"/dashboard\", LinkComponent: withRouter(NavLink), useExact: true },\n            { isDivider: true },\n            { icon: \"log-out\", value: <span onClick={actionLogout}>logout</span>, to: \"/\", LinkComponent: withRouter(NavLink), useExact: true },\n          ],\n        };\n      }\n      else {\n        return {\n          avatarURL: \"./images/default_avatar.jpg\",\n          name: \"Đăng nhập\",\n          options: [\n            { icon: \"user\", value: \"Đăng nhập\", to: \"#/login\", LinkComponent: withRouter(NavLink), useExact: true },\n            { isDivider: true },\n            { icon: \"user-plus\", value: \"Đăng ký\", to: \"#/register\", LinkComponent: withRouter(NavLink), useExact: true },\n          ]\n        };\n\n      }\n    }\n\n    const notificationsObjects = this.state.notificationsObjects || [];\n    const unreadCount = notificationsObjects.reduce(\n      (a, v) => a || v.unread,\n      false\n    );\n\n    let footerProps;\n    if (this.props.showFooter)\n      footerProps = {\n        /*     links: [\n              <a href=\"#\">First Link</a>,\n              <a href=\"#\">Second Link</a>,\n              <a href=\"#\">Third Link</a>,\n              <a href=\"#\">Fourth Link</a>,\n              <a href=\"#\">Five Link</a>,\n              <a href=\"#\">Sixth Link</a>,\n              <a href=\"#\">Seventh Link</a>,\n              <a href=\"#\">Eigth Link</a>,\n            ], */\n        /*  note:\n           \"Trang thuộc bản quyền Ali-Kit\", */\n        copyright: (\n          <React.Fragment>\n            Copyright © 2020\n            <a href=\".\"> Ali-Kit</a>\n          </React.Fragment>\n        ),\n        /*      nav: (\n               <React.Fragment>\n                 <Grid.Col auto={true}>\n                   <List className=\"list-inline list-inline-dots mb-0\">\n                     <List.Item className=\"list-inline-item\">\n                       <a href=\"./docs/index.html\">Documentation</a>\n                     </List.Item>\n                     <List.Item className=\"list-inline-item\">\n                       <a href=\"./faq.html\">FAQ</a>\n                     </List.Item>\n                   </List>\n                 </Grid.Col>\n               </React.Fragment>\n             ), */\n      }\n\n    return (\n      <InnerSiteWrapper\n        headerProps={{\n          href: \"/\",\n          alt: siteWrapperReducer && siteWrapperReducer.branding ? siteWrapperReducer.branding : \"Tin dia phuong\",\n          imageURL: siteWrapperReducer && siteWrapperReducer.brandLogo ? siteWrapperReducer.brandLogo : \"./images/local_news.svg\",\n          title: siteWrapperReducer && siteWrapperReducer.branding ? siteWrapperReducer.branding : \"Tin địa phương\",\n          description: siteWrapperReducer && siteWrapperReducer.subBranding ? siteWrapperReducer.subBranding : \"Quận 9\",\n\n          /*    notificationsTray: {\n               notificationsObjects,\n               markAllAsRead: () =>\n                 this.setState(\n                   () => ({\n                     notificationsObjects: this.state.notificationsObjects.map(\n                       v => ({ ...v, unread: false })\n                     ),\n                   }),\n                   () =>\n                     setTimeout(\n                       () =>\n                         this.setState({\n                           notificationsObjects: this.state.notificationsObjects.map(\n                             v => ({ ...v, unread: true })\n                           ),\n                         }),\n                       5000\n                     )\n                 ),\n               unread: unreadCount,\n             }, */\n          accountDropdown: accountDropdownPropsFunc(currentUser),\n\n        }}\n        navProps={{ itemsObjects: navBarItems }}\n        routerContextComponentType={withRouter(RouterContextProvider)}\n        footerProps={footerProps}>\n        {this.props.children}\n      </InnerSiteWrapper>\n    );\n  }\n}\n\nfunction mapStateToProps({ authReducer, siteWrapperReducer }) {\n  return {\n    authReducer,\n    siteWrapperReducer\n  }\n}\n\nexport const SiteWrapperContainer = connect(\n  mapStateToProps\n)(SiteWrapper);","\nfunction sourceLogo(name, image) {\n    return { name, image: \"/images/source_logos/\" + image };\n}\nconst sourceLogos = [\n    sourceLogo(\"tuoitre.vn\", \"tuoi_tre.webp\"),\n    sourceLogo(\"vnexpress.net\",\"vnexpress.webp\"),\n    sourceLogo(\"plo.vn\", \"phap_luat_online.webp\"),\n    sourceLogo(\"zingnews.vn\", \"zing.webp\"),\n    sourceLogo(\"vtc.vn\", \"vtc.webp\"),\n    sourceLogo(\"baotintuc.vn\", \"tin_tuc.jpg\"),\n    sourceLogo(\"nguoidothi.net.vn\", \"nguoi_do_thi.jpg\"),\n    sourceLogo(\"baophapluat.vn\", \"phap_luat_viet_nam.webp\"),\n    sourceLogo(\"vietnamplus.vn\", \"viet_nam_plus.jpg\"),\n    sourceLogo(\"thanhnien.vn\",\"thanhnien2.png\"),\n    sourceLogo(\"dantri.com.vn\",\"dantri.png\"),\n    sourceLogo(\"nld.com.vn\",\"nguoilaodong.jpg\"),\n    sourceLogo(\"anninhthudo.vn\",\"anninhthudo.png\"),\n    sourceLogo(\"baogiaothong.vn\",\"baogiaothong.png\"),\n    sourceLogo(\"vietnamnet.vn\",\"vietnamnet.png\"),\n    sourceLogo(\"tienphong.vn\",\"tienphong.png\")\n]\n\nconst defaultLogo = \"/images/source_logos/rss.jpg\";\n\nexport function findSourceLogo(name) {\n    const logos = sourceLogos.find(element => element.name === name);\n    if (logos) {\n        return logos.image\n    } else {\n        return defaultLogo;\n    }\n}","import moment from \"moment\";\nimport \"moment/locale/vi\";\n\nexport function momentCalendar(dateTime) {\n   return moment(dateTime).locale(\"vi\").calendar();\n}\n\nexport function momentFromNow(dateTime) {\n   return moment(dateTime).locale(\"vi\").fromNow();\n}","import * as React from \"react\";\nimport { render } from \"react-dom\";\nclass EmptyPageContent extends React.Component {\n    render() {\n        const isFetching = this.props.isFetching || false;\n        const title = this.props.title || \"Hmm\";\n        const description = this.props.description || \"Máy chủ hiện không phản hồi, vui lòng thử lại lần nữa.\";\n        const buttonText = this.props.buttonText || \"Thử lại\";\n        return isFetching ?\n            (<div className=\"p-empty-body col-12 d-flex justify-content-center\">\n        <div className=\"loader card\" style={{\n          backgroundColor: \"transparent\",\n          backgroundClip: \"unset\",\n          border: \"0\",\n          borderRadius: \"0\",\n          boxShadow: \"none\"\n        }} />\n      </div>)\n        : (<div className=\"erb text-blue\">\n            <div className=\"wrapper\">\n                <h1>{title}</h1>\n                <p>{description}</p>\n                <div className=\"buttons\">\n                    <a href=\"\" onClick={this.props.onButtonClick}>{buttonText}</a>\n                </div>\n            </div>\n        </div>)\n    }\n}\n\nexport default EmptyPageContent;","import * as React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchNewsList } from '../actions/TrendingFeedsAction';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { findSourceLogo } from '../util/ImageUtil';\nimport { momentCalendar, momentFromNow } from '../util/CommonUtil';\n\nimport {\n  Page,\n  Grid,\n  BlogCard,\n} from \"tabler-react\";\n\nimport EmptyPageContent from \"../components/Placeholder/EmptyPageContent\";\n\nclass TrendingFeedsPage extends React.Component {\n  componentDidMount() {\n    const dispatch = this.props.dispatch;\n    dispatch(fetchNewsList());\n  }\n\n  loadMoreData = () => {\n    const dispatch = this.props.dispatch;\n    let page = 1;\n    const trendingFeedsReducer = this.props.trendingFeedsReducer;\n\n    if (trendingFeedsReducer && trendingFeedsReducer.page) {\n      page = trendingFeedsReducer.page;\n    }\n\n    if (page < 1) {\n      page = 1;\n    }\n    dispatch(fetchNewsList(page));\n  }\n\n  render() {\n    const { trendingFeedsReducer } = this.props;\n    const newsList = [...(trendingFeedsReducer.list || [])];\n\n    const mainNews = [];\n    const moreNews = [];\n    if (newsList.length === 0) {\n      /* there are no item in response list */\n    } else if (newsList.length <= 7) {\n      /* no more than 7 items */\n      for (var i = 0; i < newsList.length; i++) {\n        let item = newsList[i];\n        mainNews.push(\n          <Grid.Col width={12}>\n            <BlogCard\n              imgSrc={item.thumbnail}\n              imgAlt={item.summary}\n              title={item.title}\n              description={item.summary}\n              profileHref={item.source.baseUrl}\n              postHref={item.source.url}\n              authorName={item.source.displayName}\n              avatarImgSrc={findSourceLogo(item.source.name)}\n              date={momentFromNow(item.publicationDate)}\n              iconName={\"arrow-right\"}\n            />\n          </Grid.Col>)\n      }\n\n    } else {\n      /* more than 7 items\n      \n      */\n      mainNews.push(\n        /* the biggest first item */\n        <Grid.Col width={12} lg={9} md={12}>\n          <BlogCard\n            imgSrc={newsList[0].thumbnail}\n            imgAlt={newsList[0].summary}\n            title={newsList[0].title}\n            description={newsList[0].summary}\n            postHref={newsList[0].source.url}\n            profileHref={newsList[0].source.baseUrl}\n            authorName={newsList[0].source.displayName}\n            avatarImgSrc={findSourceLogo(newsList[0].source.name)}\n            date={momentFromNow(newsList[0].publicationDate)}\n            iconName={\"arrow-right\"}\n          />\n        </Grid.Col>);\n\n      mainNews.push(\n        /* two items on the right */\n        <Grid.Col width={12} lg={3} md={12}>\n          <Grid.Row>\n            <Grid.Col width={12} lg={12} md={6}>\n              <BlogCard\n                imgSrc={newsList[1].thumbnail}\n                title={newsList[1].title}\n                //description={newsList[1].summary}\n                postHref={newsList[1].source.url}\n                profileHref={newsList[1].source.baseUrl}\n                authorName={newsList[1].source.displayName}\n                avatarImgSrc={findSourceLogo(newsList[1].source.name)}\n                date={momentFromNow(newsList[1].publicationDate)}\n                iconName={\"arrow-right\"}\n              />\n            </Grid.Col>\n            <Grid.Col width={12} lg={12} md={6}>\n              <BlogCard\n                imgSrc={newsList[2].thumbnail}\n                title={newsList[2].title}\n                //description={newsList[1].summary}\n                postHref={newsList[2].source.url}\n                profileHref={newsList[2].source.baseUrl}\n                authorName={newsList[2].source.displayName}\n                avatarImgSrc={findSourceLogo(newsList[2].source.name)}\n                date={momentFromNow(newsList[2].publicationDate)}\n                iconName={\"arrow-right\"}\n              />\n            </Grid.Col>\n          </Grid.Row>\n        </Grid.Col>\n      );\n\n      for (let i = 3; i < 7; i++) {\n        let item = newsList[i];\n        mainNews.push(\n          <Grid.Col width={12} lg={6} xl={3} md={6}>\n            <BlogCard\n              imgSrc={item.thumbnail}\n              // imgAlt={item.summary}\n              title={item.title}\n              description={item.summary}\n              postHref={item.source.url}\n              profileHref={item.source.baseUrl}\n              authorName={item.source.displayName}\n              avatarImgSrc={findSourceLogo(item.source.name)}\n              date={momentFromNow(item.publicationDate)}\n              iconName={\"arrow-right\"}\n            />\n          </Grid.Col>)\n      }\n\n      for (let i = 6; i < newsList.length; i++) {\n        let item = newsList[i];\n        moreNews.push(\n          <Grid.Col width={12}>\n            <BlogCard\n              aside\n              imgSrc={item.thumbnail}\n              imgAlt={item.summary}\n              postHref={item.source.url}\n              title={item.title}\n              description={item.summary}\n              profileHref={item.source.baseUrl}\n              authorName={item.source.displayName}\n              avatarImgSrc={findSourceLogo(item.source.name)}\n              date={momentCalendar(item.publicationDate)}\n              iconName={\"arrow-right\"}\n            />\n          </Grid.Col>\n        )\n      }\n\n    }\n\n    let endOfPage;\n    if (!trendingFeedsReducer.hasMore && newsList.length !== 0) {\n      endOfPage =\n        <div class=\"col-12 d-flex justify-content-center\">\n          <div class=\"text-muted bold\" style={{\n            backgroundColor: \"transparent\",\n            backgroundClip: \"unset\",\n            border: \"0\",\n            borderRadius: \"0\",\n            boxShadow: \"none\"\n          }}>Oop! Hết tin rồi, quay lại sau nhé!</div>\n        </div>\n    }\n    let body;\n    if (newsList.length !== 0) {\n      body = <Page.Content title=\"Xu huớng\">\n        <Grid.Row cards deck>\n          {mainNews}\n        </Grid.Row>\n        <Grid.Row>\n          <Page.Header title={\"Tin khác\"} />\n          <InfiniteScroll\n            dataLength={newsList.length}\n            next={this.loadMoreData}\n            hasMore={trendingFeedsReducer.hasMore}\n            loader={\n              <div class=\"col-12 d-flex justify-content-center\">\n                <div class=\"loader card\" style={{\n                  backgroundColor: \"transparent\",\n                  backgroundClip: \"unset\",\n                  border: \"0\",\n                  borderRadius: \"0\",\n                  boxShadow: \"none\"\n                }} />\n              </div>}>\n            {moreNews}\n            {endOfPage}\n          </InfiniteScroll>\n        </Grid.Row >\n      </Page.Content >\n    } else {\n      let emptyBody = (trendingFeedsReducer && trendingFeedsReducer.isFetching) ? (<div className=\"p-empty-body col-12 d-flex justify-content-center\">\n        <div className=\"loader card\" style={{\n          backgroundColor: \"transparent\",\n          backgroundClip: \"unset\",\n          border: \"0\",\n          borderRadius: \"0\",\n          boxShadow: \"none\"\n        }} />\n      </div>) : <EmptyPageContent onButtonClick={this.loadMoreData} />;\n      body = <Page.Content>\n        {emptyBody}\n      </Page.Content>\n    }\n\n    return body\n\n  }\n}\n\n\nfunction mapStateToProps({ trendingFeedsReducer, authReducer }) {\n  return {\n    trendingFeedsReducer,\n    authReducer\n  }\n}\n\n\nexport const TrendingFeedsContainer = connect(\n  mapStateToProps\n)(TrendingFeedsPage);","// @flow\n\nimport * as React from \"react\";\nimport { Media, List } from \"tabler-react\";\n\ntype Props = {|\n    +children ?: React.Node,\n    +className ?: string,\n    +imageUrl ?: string,\n    +date ?: string,\n    +title ?: string,\n    +description ? : string,\n    +sourceImageUrl ?: string,\n    +sourceName ? : string,\n    +sourceUrl ?: string,\n    +sourceBaseUrl ?: string,\n    +subs: React.Node,\n    |};\n\nfunction SubHeadlineFeed({\n    className,\n    children,\n    imageUrl,\n    date,\n    title,\n    description,\n    sourceImageUrl,\n    sourceName,\n    sourceUrl,\n    sourceBaseUrl,\n    subs,\n}: Props): React.Node {\n    return (\n        <Media.ListItem className={className}>\n\n            <Media.Body className=\"subheadline\">\n                <span className=\"middle-dot-headline text-default text-bl\">⬤</span>\n                <span>\n                    <a href={sourceUrl} className=\"text-bl text-default txt-subheadline\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        <strong>{title}</strong>\n                    </a>\n                    <div className=\"div-subheadline-source\">\n                        <a className=\"text-default text-bl txt-headline-source\" href={sourceBaseUrl}>{sourceName}</a>\n                        <span className=\"middle-dot-headline text-default text-bl\">⬤</span>\n                        <span className=\"text-default text-bl txt-headline-source\">{date}</span>\n                    </div>\n                </span>\n\n            </Media.Body>\n\n        </Media.ListItem>\n    );\n\n}\n\nexport default SubHeadlineFeed;","// @flow\n\nimport * as React from \"react\";\nimport cn from \"classnames\";\nimport {  Media, List, Card } from \"tabler-react\";\nimport SubHeadlineFeed from \"./SubHeadlineFeed\";\n\ntype Props = {|\n+children ?: React.Node,\n    +className ?: string,\n    +imageUrl ?: string,\n    +date ?: string,\n    +title ?: string,\n    +description ? : string,\n    +sourceImageUrl ?: string,\n    +sourceName ? : string,\n    +sourceUrl ?: string,\n    +sourceBaseUrl ?: string,\n    +subs: React.Node,\n|}\n\nfunction HeadlineFeed({\n    className,\n    children,\n    imageUrl,\n    date,\n    title,\n    description,\n    sourceImageUrl,\n    sourceName,\n    sourceUrl,\n    sourceBaseUrl,\n    subs,\n}: Props): React.Node {\n    const classes = cn(\"p-5 no-outline\", className);\n    return (\n        <Card>\n            <Media className={classes}>\n                <img src={imageUrl} href={sourceUrl} className=\"img-headline img-center-crop \" target=\"_blank\" rel=\"noopener noreferrer\" />\n                <Media.Body>\n                    <Media.Heading>\n                        \n                        <div className=\"div-headline-source\">\n                            <img src={sourceImageUrl} href={sourceBaseUrl} className=\"img-headline-sourcelogo\" target=\"_blank\" rel=\"noopener noreferrer\" />\n                            <a className=\"text-default text-bl txt-headline-source\" href={sourceBaseUrl}>{sourceName}</a>\n                            <span className=\"middle-dot-headline text-default text-bl\">⬤</span>\n                            <span className=\"text-default text-bl txt-headline-source\">{date}</span>\n                        <a href={sourceUrl} className=\"h4 fe fe-activity float-right text-muted\"></a>\n\n                        </div>\n\n                        <a href={sourceUrl} className=\"text-default text-bl\" target=\"_blank\" rel=\"noopener noreferrer\">\n                            <h4 className=\"headline\">{title}</h4>\n                        </a>\n                    </Media.Heading>\n                    <div className=\"text-description-headline\">{description}</div>\n                    {subs && <Media.List>{subs}</Media.List>}\n                </Media.Body>\n            </Media>\n            </Card>\n    );\n}\n\n//HeadlineFeed.List = HeadlineFeedList;\nHeadlineFeed.Sub = SubHeadlineFeed;\n\nexport default HeadlineFeed;","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchNewsList } from '../actions/HeadlinesFeedsAction';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { findSourceLogo } from '../util/ImageUtil';\nimport { momentFromNow } from '../util/CommonUtil';\n\nimport {\n  Page,\n  Grid,\n  Card,\n} from \"tabler-react\";\n\nimport SiteWrapper from \"../components/SiteWrapper.react\";\nimport HeadlineFeed from \"../components/HeadlineFeed\";\nimport EmptyPageContent from \"../components/Placeholder/EmptyPageContent\";\n\nclass HeadlinesFeedsPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchNewsList());\n  }\n\n  loadMoreData = () => {\n    const { dispatch } = this.props;\n    let page = 1;\n    const { headlinesFeedsReducer } = this.props;\n    if (headlinesFeedsReducer && headlinesFeedsReducer.page) {\n      page = headlinesFeedsReducer.page;\n    }\n\n    if (page < 1) {\n      page = 1;\n    }\n    dispatch(fetchNewsList(page));\n  }\n\n  render() {\n    const { headlinesFeedsReducer, authReducer } = this.props;\n    const newsList = [...headlinesFeedsReducer.list];\n    console.log(\"is Fetching = \" + headlinesFeedsReducer.isFetching);\n    console.log(\"statusCode = \" + headlinesFeedsReducer.statusCode);\n    console.log(\"message = \" + headlinesFeedsReducer.message);\n\n    const feeds = [];\n    if (newsList.length === 0) {\n      /* there are no item in response list */\n    } else {\n\n      for (var i = 0; i < newsList.length; i++) {\n        const items = newsList[i].data.slice(0, newsList.length > 5 ? 5 : newsList.length);\n        if (items.length === 0) {\n          break;\n        }\n        const headline = items.shift();\n        feeds.push(\n          <Grid.Col key={headline.source.url + headline.title} width={12}>\n\n            <HeadlineFeed\n              title={headline.title}\n              sourceUrl={headline.source.url}\n              description={headline.summary}\n              imageUrl={headline.thumbnail}\n              date={momentFromNow(headline.publicationDate)}\n              sourceBaseUrl={headline.source.baseUrl}\n              sourceName={headline.source.displayName}\n              sourceImageUrl={findSourceLogo(headline.source.name)}\n              subs={items && items.length > 0 &&\n                <React.Fragment>{\n                  items.map((item, index) => (\n                    <HeadlineFeed.Sub\n                      key={item.source.url + item.title}\n                      title={item.title}\n                      sourceUrl={item.source.url}\n                      sourceName={item.source.displayName}\n                      sourceBaseUrl={item.source.baseUrl}\n                      sourceImageUrl={findSourceLogo(item.source.name)}\n                      date={momentFromNow(item.publicationDate)}\n                    />))\n                }\n                </React.Fragment>\n              } />\n\n\n          </Grid.Col>\n        )\n      }\n    }\n\n    let endOfPage;\n    if (!headlinesFeedsReducer.hasMore && newsList.length !== 0) {\n      endOfPage =\n        <div class=\"col-12 d-flex justify-content-center\">\n          <div class=\"text-muted bold\" style={{\n            backgroundColor: \"transparent\",\n            backgroundClip: \"unset\",\n            border: \"0\",\n            borderRadius: \"0\",\n            boxShadow: \"none\"\n          }}>Oop! Hết tin rồi, quay lại sau nhé!</div>\n        </div>\n    }\n\n    let body;\n    if (newsList.length !== 0) {\n      body = <Page.Content title=\"Tin Chính\">\n        <InfiniteScroll\n          style={{\n            height: \"auto\", overflow: \"disabled\"\n          }}\n          dataLength={newsList.length}\n          next={this.loadMoreData}\n          hasMore={headlinesFeedsReducer.hasMore}\n          loader={\n            <div className=\"col-12 d-flex justify-content-center\">\n              <div className=\"loader card\" style={{\n                backgroundColor: \"transparent\",\n                backgroundClip: \"unset\",\n                border: \"0\",\n                borderRadius: \"0\",\n                boxShadow: \"none\"\n              }} />\n            </div>}>\n          <Grid.Row>\n\n            {feeds}\n          </Grid.Row>\n\n          {endOfPage}\n        </InfiniteScroll>\n      </Page.Content >\n    } else {\n      let emptyBody = (headlinesFeedsReducer && headlinesFeedsReducer.isFetching) ? (<div className=\"p-empty-body col-12 d-flex justify-content-center\">\n        <div className=\"loader card\" style={{\n          backgroundColor: \"transparent\",\n          backgroundClip: \"unset\",\n          border: \"0\",\n          borderRadius: \"0\",\n          boxShadow: \"none\"\n        }} />\n      </div>) : <EmptyPageContent onButtonClick={this.loadMoreData} />;\n      body = <Page.Content>\n        {emptyBody}\n      </Page.Content>\n    }\n\n    let user = authReducer && authReducer.authData && authReducer.authData.user ? authReducer.authData.user : undefined;\n    return body\n\n  }\n}\n\nfunction mapStateToProps({ headlinesFeedsReducer, authReducer }) {\n  return {\n    headlinesFeedsReducer,\n    authReducer\n  }\n}\n\nexport const HeadlinesFeedsContainer = connect(\n  mapStateToProps\n)(HeadlinesFeedsPage);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Route } from \"react-router-dom\";\n\nclass OverviewPage extends React.PureComponent {\n    render() {\n        const match = this.props.match;\n        return <div>\n            <div>\n                <h1>Overview</h1>\n                <hr />\n\n                <Route exact path={`${this.props.match.url}/analytics`} component={AnalyticsPage} />\n                <Route exact path={`${this.props.match.url}/`} component={HomePage} />\n            </div>\n        </div>\n    }\n}\n\nfunction mapStateToProps({ authReducer }) {\n    return { authReducer }\n}\n\n\nclass HomePage extends React.PureComponent {\n    render() {\n        return <div>\n            <h2>Home</h2>\n\n\n        </div>\n    }\n}\n\nclass AnalyticsPage extends React.PureComponent {\n    render() {\n        return <div>\n            <div>\n                <h2>AnalyticsPage</h2>\n            </div>\n        </div>\n    }\n}\n\nexport const OverviewContainer = connect(mapStateToProps)(OverviewPage);\n","export default [10.832171, 106.776889];","import React, { useCallback, useState, useRef, useEffect } from 'react';\nimport { useSelector, connect } from 'react-redux';\n\nimport { Marker, GoogleMap, useLoadScript, InfoWindow } from '@react-google-maps/api';\nimport usePlacesAutocomplete from \"use-places-autocomplete\";\nimport Location from '../constants/Location'\nimport MapStyle from '../constants/Map_style'\nimport { getDataMaps, setMarkers } from 'actions/MapsAction'\n\nconst libraries = ['places']\nconst mapContainerStyle = {\n  width: '100%',\n  height: '100vh'\n}\nconst center = {\n  lat: Location[0],\n  lng: Location[1]\n}\nconst titleStyle = {\n  position: \"absolute\",\n  zIndex: 100000\n}\n\nconst options = {\n  styles: MapStyle,\n  disableDefaultUI: true\n}\nfunction MapPage(props) {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_MAP_KEY,\n    libraries,\n  })\n  const [selected, setSelected] = useState(null);\n  const dispatch = props.dispatch;\n\n  useEffect(() => {\n    // equal componentDidMount()\n    dispatch(getDataMaps());\n\n  }, []);\n\n  const mapsReducer = props.mapsReducer;\n  const markers = mapsReducer ? mapsReducer.data : [];\n\n  const onMapClick = useCallback(e => {\n    dispatch(setMarkers([...markers, { lat: e.latLng.lat(), lng: e.latLng.lng(), time: new Date() }]))\n  }, [])\n\n  const mapRef = useRef();\n  const onMapLoad = useCallback(map => mapRef.current = map, [])\n\n\n  if (loadError) return \"error loading map\"\n  if (!isLoaded) return \"loading map\"\n  return (\n    <React.Fragment>\n      <div style={titleStyle}>\n        <h1>Quận 9</h1>\n      </div>\n      <SearchPlace />\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        zoom={12}\n        center={center}\n        options={options}\n        onClick={onMapClick}\n        onLoad={onMapLoad}\n      >\n        {markers.map(marker => <Marker\n          key={marker && marker.time ? marker.time.toISOString() : \"\"}\n          position={{ lat: marker.lat, lng: marker.lng }}\n          icon={GetIcon(marker)}\n          onClick={() => setSelected(marker)}\n        />)}\n        {selected ? (<InfoWindow position={{ lat: selected.lat, lng: selected.lng }} onCloseClick={() => setSelected(null)}>\n          <div>\n            <h4>{selected.data.name}</h4>\n\n            <p>{selected.data.numOfArticles}</p>\n            <p>{selected.data.time.toISOString()}</p>\n            <button>xem chi tiết (\"/tags?place={selected.data.name}\")</button>\n          </div>\n        </InfoWindow>) : null}\n      </GoogleMap>\n    </React.Fragment>)\n}\n\nfunction SearchPlace() {\n  const { ready, value, suggestions: { status, data }, setValue, clearSuggesetions } = usePlacesAutocomplete({\n    requestOptions: {\n      location: { lat: () => Location[0], lng: () => Location[1] },\n      radius: 200 * 1000\n    }\n  })\n  return <div></div>// <ComboboxInput></ComboboxInput> ???\n}\nfunction GetIcon(marker) {\n  var numOfArticles = marker && marker.data && marker.data.numOfArticles ? marker.data.numOfArticles : 0;\n  var maxArticles = 10;\n  const maxSize = 50;\n  const minSize = 15;\n\n  const diameter = numOfArticles < maxArticles ?\n    (((numOfArticles / maxArticles) * (maxSize - minSize)) + minSize) :\n    maxSize\n\n\n  const result = {\n    url: '/circle.svg',\n    scaledSize: new window.google.maps.Size(diameter, diameter),\n    origin: new window.google.maps.Point(0, 0),\n    anchor: new window.google.maps.Point(diameter / 2, diameter / 2),\n  }\n  return result\n}\n\nfunction mapStateToProps({ mapsReducer }) {\n  return { mapsReducer };\n}\n\nconst MapsContainer = connect(\n  mapStateToProps\n)(MapPage)\n\nexport default MapsContainer;","export default [\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"weight\": \"2.00\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#9c9c9c\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"all\",\n        \"elementType\": \"labels.text\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"color\": \"#f2f2f2\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape.man_made\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"saturation\": -100\n            },\n            {\n                \"lightness\": 45\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#eeeeee\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#7b7b7b\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"simplified\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"color\": \"#46bcec\"\n            },\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#c8d7d4\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#070707\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [\n            {\n                \"color\": \"#ffffff\"\n            }\n        ]\n    }\n]","import * as React from \"react\";\nimport { DefaultErrorPage } from \"tabler-react\";\n\nfunction Error404Page({\n    title = \"404\",\n    subtitle = \"Oops... You just found an error page...\",\n    details = \"We are sorry but the page you have requested can not be found...\",\n    action,\n}) {\n    return (\n        <DefaultErrorPage\n            title={title}\n            subtitle={subtitle}\n            details={details}\n            action={action}\n        />\n    );\n}\n\nexport default Error404Page;","import * as React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n    Page,\n    Site,\n    Grid,\n    StatsCard,\n    Card,\n    colors,\n    Table,\n    Icon,\n    Avatar,\n    StampCard,\n    Text,\n    Progress,\n    Dropdown,\n    Alert,\n    ProgressCard, Badge,\n    Button\n\n} from \"tabler-react\";\nimport C3Chart from \"react-c3js\";\n\nclass AnalyticsPage extends React.PureComponent {\n    render() {\n        return (\n            <Page.Content title=\"Dashboard\">\n                <Grid.Row cards={true}>\n                    <Grid.Col width={6} sm={4} lg={2}>\n                        <StatsCard layout={1} movement={6} total=\"43\" label=\"New Tickets\" />\n                    </Grid.Col>\n                    <Grid.Col width={6} sm={4} lg={2}>\n                        <StatsCard\n                            layout={1}\n                            movement={-3}\n                            total=\"17\"\n                            label=\"Closed Today\"\n                        />\n                    </Grid.Col>\n                    <Grid.Col width={6} sm={4} lg={2}>\n                        <StatsCard layout={1} movement={9} total=\"7\" label=\"New Replies\" />\n                    </Grid.Col>\n                    <Grid.Col width={6} sm={4} lg={2}>\n                        <StatsCard\n                            layout={1}\n                            movement={3}\n                            total=\"27.3k\"\n                            label=\"Followers\"\n                        />\n                    </Grid.Col>\n                    <Grid.Col width={6} sm={4} lg={2}>\n                        <StatsCard\n                            layout={1}\n                            movement={-2}\n                            total=\"$95\"\n                            label=\"Daily earnings\"\n                        />\n                    </Grid.Col>\n                    <Grid.Col width={6} sm={4} lg={2}>\n                        <StatsCard layout={1} movement={-1} total=\"621\" label=\"Products\" />\n                    </Grid.Col>\n                    <Grid.Col lg={6}>\n                        <Card>\n                            <Card.Header>\n                                <Card.Title>Development Activity</Card.Title>\n                            </Card.Header>\n                            <C3Chart\n                                style={{ height: \"10rem\" }}\n                                data={{\n                                    columns: [\n                                        // each columns data\n                                        [\"data1\", 0, 5, 1, 2, 7, 5, 6, 8, 24, 7, 12, 5, 6, 3, 2, 2, 6, 30, 10, 10, 15, 14, 47, 65, 55,],\n                                    ],\n                                    type: \"area\", // default type of chart\n                                    groups: [[\"data1\", \"data2\", \"data3\"]],\n                                    colors: {\n                                        data1: colors[\"blue\"],\n                                    },\n                                    names: {\n                                        // name of each serie\n                                        data1: \"Purchases\",\n                                    },\n                                }}\n                                axis={{\n                                    y: {\n                                        padding: {\n                                            bottom: 0,\n                                        },\n                                        show: false,\n                                        tick: {\n                                            outer: false,\n                                        },\n                                    },\n                                    x: {\n                                        padding: {\n                                            left: 0,\n                                            right: 0,\n                                        },\n                                        show: false,\n                                    },\n                                }}\n                                legend={{\n                                    position: \"inset\",\n                                    padding: 0,\n                                    inset: {\n                                        anchor: \"top-left\",\n                                        x: 20,\n                                        y: 8,\n                                        step: 10,\n                                    },\n                                }}\n                                tooltip={{\n                                    format: {\n                                        title: function (x) {\n                                            return \"\";\n                                        },\n                                    },\n                                }}\n                                padding={{\n                                    bottom: 0,\n                                    left: -1,\n                                    right: -1,\n                                }}\n                                point={{\n                                    show: false,\n                                }}\n                            />\n                            <Table\n                                cards={true}\n                                striped={true}\n                                responsive={true}\n                                className=\"table-vcenter\"\n                            >\n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.ColHeader colSpan={2}>User</Table.ColHeader>\n                                        <Table.ColHeader>Commit</Table.ColHeader>\n                                        <Table.ColHeader>Date</Table.ColHeader>\n                                        <Table.ColHeader />\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Col className=\"w-1\">\n                                            <Avatar imageURL=\"./demo/faces/male/9.jpg\" />\n                                        </Table.Col>\n                                        <Table.Col>Ronald Bradley</Table.Col>\n                                        <Table.Col>Initial commit</Table.Col>\n                                        <Table.Col className=\"text-nowrap\">May 6, 2018</Table.Col>\n                                        <Table.Col className=\"w-1\">\n                                            <Icon link={true} name=\"trash\" />\n                                        </Table.Col>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Col>\n                                            <Avatar>BM</Avatar>\n                                        </Table.Col>\n                                        <Table.Col>Russell Gibson</Table.Col>\n                                        <Table.Col>Main structure</Table.Col>\n                                        <Table.Col className=\"text-nowrap\">\n                                            April 22, 2018\n                    </Table.Col>\n                                        <Table.Col>\n                                            <Icon link={true} name=\"trash\" />\n                                        </Table.Col>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Col>\n                                            <Avatar imageURL=\"./demo/faces/female/1.jpg\" />\n                                        </Table.Col>\n                                        <Table.Col>Beverly Armstrong</Table.Col>\n                                        <Table.Col>Left sidebar adjustments</Table.Col>\n                                        <Table.Col className=\"text-nowrap\">\n                                            April 15, 2018\n                    </Table.Col>\n                                        <Table.Col>\n                                            <Icon link={true} name=\"trash\" />\n                                        </Table.Col>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Col>\n                                            <Avatar imageURL=\"./demo/faces/male/4.jpg\" />\n                                        </Table.Col>\n                                        <Table.Col>Bobby Knight</Table.Col>\n                                        <Table.Col>Topbar dropdown style</Table.Col>\n                                        <Table.Col className=\"text-nowrap\">April 8, 2018</Table.Col>\n                                        <Table.Col>\n                                            <Icon link={true} name=\"trash\" />\n                                        </Table.Col>\n                                    </Table.Row>\n                                    <Table.Row>\n                                        <Table.Col>\n                                            <Avatar imageURL=\"./demo/faces/female/11.jpg\" />\n                                        </Table.Col>\n                                        <Table.Col>Sharon Wells</Table.Col>\n                                        <Table.Col>Fixes #625</Table.Col>\n                                        <Table.Col className=\"text-nowrap\">April 9, 2018</Table.Col>\n                                        <Table.Col>\n                                            <Icon link={true} name=\"trash\" />\n                                        </Table.Col>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                        </Card>\n                    </Grid.Col>\n\n                    <Grid.Col md={6}>\n                        <Alert type=\"primary\">\n                            <Alert.Link\n                                href={\n                                    process.env.NODE_ENV === \"production\"\n                                        ? \"https://tabler.github.io/tabler-react/documentation\"\n                                        : \"/documentation\"\n                                }\n                            >\n                                Read our documentation\n              </Alert.Link>{\" \"}\n              with code samples.\n            </Alert>\n                        <Grid.Row>\n                            <Grid.Col sm={6}>\n                                <Card>\n                                    <Card.Header>\n                                        <Card.Title>Chart title</Card.Title>\n                                    </Card.Header>\n                                    <Card.Body>\n                                        <C3Chart\n                                            style={{ height: \"12rem\" }}\n                                            data={{\n                                                columns: [\n                                                    // each columns data\n                                                    [\"data1\", 63],\n                                                    [\"data2\", 37],\n                                                ],\n                                                type: \"donut\", // default type of chart\n                                                colors: {\n                                                    data1: colors[\"green\"],\n                                                    data2: colors[\"green-light\"],\n                                                },\n                                                names: {\n                                                    // name of each serie\n                                                    data1: \"Maximum\",\n                                                    data2: \"Minimum\",\n                                                },\n                                            }}\n                                            legend={{\n                                                show: false, //hide legend\n                                            }}\n                                            padding={{\n                                                bottom: 0,\n                                                top: 0,\n                                            }}\n                                        />\n                                    </Card.Body>\n                                </Card>\n                            </Grid.Col>\n                            <Grid.Col sm={6}>\n                                <Card>\n                                    <Card.Header>\n                                        <Card.Title>Chart title</Card.Title>\n                                    </Card.Header>\n                                    <Card.Body>\n                                        <C3Chart\n                                            style={{ height: \"12rem\" }}\n                                            data={{\n                                                columns: [\n                                                    // each columns data\n                                                    [\"data1\", 63],\n                                                    [\"data2\", 44],\n                                                    [\"data3\", 12],\n                                                    [\"data4\", 14],\n                                                ],\n                                                type: \"pie\", // default type of chart\n                                                colors: {\n                                                    data1: colors[\"blue-darker\"],\n                                                    data2: colors[\"blue\"],\n                                                    data3: colors[\"blue-light\"],\n                                                    data4: colors[\"blue-lighter\"],\n                                                },\n                                                names: {\n                                                    // name of each serie\n                                                    data1: \"A\",\n                                                    data2: \"B\",\n                                                    data3: \"C\",\n                                                    data4: \"D\",\n                                                },\n                                            }}\n                                            legend={{\n                                                show: false, //hide legend\n                                            }}\n                                            padding={{\n                                                bottom: 0,\n                                                top: 0,\n                                            }}\n                                        />\n                                    </Card.Body>\n                                </Card>\n                            </Grid.Col>\n                            <Grid.Col sm={6}>\n                                <ProgressCard\n                                    header=\"New feedback\"\n                                    content=\"62\"\n                                    progressColor=\"red\"\n                                    progressWidth={28}\n                                />\n                            </Grid.Col>\n                            <Grid.Col sm={6}>\n                                <ProgressCard\n                                    header=\"Today profit\"\n                                    content=\"$652\"\n                                    progressColor=\"green\"\n                                    progressWidth={84}\n                                />\n                            </Grid.Col>\n                            <Grid.Col sm={6}>\n                                <ProgressCard\n                                    header=\"Users online\"\n                                    content=\"76\"\n                                    progressColor=\"yellow\"\n                                    progressWidth={34}\n                                />\n                            </Grid.Col>\n                        </Grid.Row>\n                    </Grid.Col>\n                    <Grid.Col sm={6} lg={3}>\n                        <StampCard\n                            color=\"blue\"\n                            icon=\"dollar-sign\"\n                            header={\n                                <a href=\"#\">\n                                    132 <small>Sales</small>\n                                </a>\n                            }\n                            footer={\"12 waiting payments\"}\n                        />\n                    </Grid.Col>\n                    <Grid.Col sm={6} lg={3}>\n                        <StampCard\n                            color=\"green\"\n                            icon=\"shopping-cart\"\n                            header={\n                                <a href=\"#\">\n                                    78 <small>Orders</small>\n                                </a>\n                            }\n                            footer={\"32 shipped\"}\n                        />\n                    </Grid.Col>\n                    <Grid.Col sm={6} lg={3}>\n                        <StampCard\n                            color=\"red\"\n                            icon=\"users\"\n                            header={\n                                <a href=\"#\">\n                                    1,352 <small>Members</small>\n                                </a>\n                            }\n                            footer={\"163 registered today\"}\n                        />\n                    </Grid.Col>\n                    <Grid.Col sm={6} lg={3}>\n                        <StampCard\n                            color=\"yellow\"\n                            icon=\"message-square\"\n                            header={\n                                <a href=\"#\">\n                                    132 <small>Comments</small>\n                                </a>\n                            }\n                            footer={\"16 waiting\"}\n                        />\n                    </Grid.Col>\n                </Grid.Row>\n                <Grid.Row cards deck>\n                    <Grid.Col width={12}>\n                        <Card>\n                            <Table\n                                responsive\n                                highlightRowOnHover\n                                hasOutline\n                                verticalAlign=\"center\"\n                                cards\n                                className=\"text-nowrap\"\n                            >\n                                <Table.Header>\n                                    <Table.Row>\n                                        <Table.ColHeader alignContent=\"center\" className=\"w-1\">\n                                            <i className=\"icon-people\" />\n                                        </Table.ColHeader>\n                                        <Table.ColHeader>User</Table.ColHeader>\n                                        <Table.ColHeader>Usage</Table.ColHeader>\n                                        <Table.ColHeader alignContent=\"center\">\n                                            Payment\n                    </Table.ColHeader>\n                                        <Table.ColHeader>Activity</Table.ColHeader>\n                                        <Table.ColHeader alignContent=\"center\">\n                                            Satisfaction\n                    </Table.ColHeader>\n                                        <Table.ColHeader alignContent=\"center\">\n                                            <i className=\"icon-settings\" />\n                                        </Table.ColHeader>\n                                    </Table.Row>\n                                </Table.Header>\n                                <Table.Body>\n                                    <Table.Row>\n                                        <Table.Col alignContent=\"center\">\n                                            <Avatar\n                                                imageURL=\"demo/faces/female/26.jpg\"\n                                                className=\"d-block\"\n                                                status=\"green\"\n                                            />\n                                        </Table.Col>\n                                        <Table.Col>\n                                            <div>Elizabeth Martin</div>\n                                            <Text size=\"sm\" muted>\n                                                Registered: Mar 19, 2018\n                      </Text>\n                                        </Table.Col>\n                                        <Table.Col>\n                                            <div className=\"clearfix\">\n                                                <div className=\"float-left\">\n                                                    <strong>42%</strong>\n                                                </div>\n                                                <div className=\"float-right\">\n                                                    <Text.Small muted>\n                                                        Jun 11, 2015 - Jul 10, 2015\n                          </Text.Small>\n                                                </div>\n                                            </div>\n                                            <Progress size=\"xs\">\n                                                <Progress.Bar color=\"yellow\" width={42} />\n                                            </Progress>\n                                        </Table.Col>\n                                        <Table.Col alignContent=\"center\">\n                                            <Icon payment name=\"visa\" />\n                                        </Table.Col>\n                                        <Table.Col>\n                                            <Text size=\"sm\" muted>\n                                                Last login\n                      </Text>\n                                            <div>4 minutes ago</div>\n                                        </Table.Col>\n                                        <Table.Col alignContent=\"center\">42%</Table.Col>\n                                        <Table.Col alignContent=\"center\">\n                                            <Dropdown\n                                                trigger={\n                                                    <Dropdown.Trigger\n                                                        icon=\"more-vertical\"\n                                                        toggle={false}\n                                                    />\n                                                }\n                                                position=\"right\"\n                                                items={\n                                                    <React.Fragment>\n                                                        <Dropdown.Item icon=\"tag\">Action </Dropdown.Item>\n                                                        <Dropdown.Item icon=\"edit-2\">\n                                                            Another action{\" \"}\n                                                        </Dropdown.Item>\n                                                        <Dropdown.Item icon=\"message-square\">\n                                                            Something else here\n                            </Dropdown.Item>\n                                                        <Dropdown.ItemDivider />\n                                                        <Dropdown.Item icon=\"link\">\n                                                            {\" \"}\n                              Separated link\n                            </Dropdown.Item>\n                                                    </React.Fragment>\n                                                }\n                                            />\n                                        </Table.Col>\n                                    </Table.Row>\n                                </Table.Body>\n                            </Table>\n                        </Card>\n                    </Grid.Col>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Col sm={6} lg={4}>\n                        <Card title=\"Browser Stats\">\n                            <Table className=\"card-table\">\n                                <Table.Row>\n                                    <Table.Col>\n                                        <Icon prefix=\"fa\" name=\"chrome\" className=\"text-muted\" />\n                                    </Table.Col>\n                                    <Table.Col>Google Chrome</Table.Col>\n                                    <Table.Col className=\"text-right\">\n                                        <Text RootComponent=\"span\" muted>\n                                            23%\n                    </Text>\n                                    </Table.Col>\n                                </Table.Row>\n                            </Table>\n                        </Card>\n                    </Grid.Col>\n                    <Grid.Col sm={6} lg={4}>\n                        <Card title=\"Projects\">\n                            <Table cards>\n                                <Table.Row>\n                                    <Table.Col>Admin Template</Table.Col>\n                                    <Table.Col alignContent=\"right\">\n                                        <Badge color=\"default\">65%</Badge>\n                                    </Table.Col>\n                                </Table.Row>\n                            </Table>\n                        </Card>\n                    </Grid.Col>\n                    <Grid.Col md={6} lg={4}>\n                        <Card title=\"Members\">\n                            <Card.Body>\n                                <ul className=\"list-unstyled list-separated\">\n                                    <li className=\"list-separated-item\">\n                                        <Grid.Row className=\"align-items-center\">\n                                            <Grid.Col auto>\n                                                <Avatar\n                                                    size=\"md\"\n                                                    className=\"d-block\"\n                                                    imageURL=\"demo/faces/female/12.jpg\"\n                                                />\n                                            </Grid.Col>\n                                            <Grid.Col>\n                                                <div>\n                                                    <a className=\"text-inherit\" href=\"#\">\n                                                        Amanda Hunt\n                          </a>\n                                                </div>\n                                                <Text.Small muted className=\"d-block item-except h-1x\">\n                                                    amanda_hunt@example.com\n                        </Text.Small>\n                                            </Grid.Col>\n                                            <Grid.Col auto>\n                                                <Dropdown\n                                                    trigger={\n                                                        <Dropdown.Trigger\n                                                            icon=\"more-vertical\"\n                                                            toggle={false}\n                                                        />\n                                                    }\n                                                    position=\"right\"\n                                                    items={\n                                                        <React.Fragment>\n                                                            <Dropdown.Item icon=\"tag\">Action </Dropdown.Item>\n                                                            <Dropdown.Item icon=\"edit-2\">\n                                                                {\" \"}\n                                Another action{\" \"}\n                                                            </Dropdown.Item>\n                                                            <Dropdown.Item icon=\"message-square\">\n                                                                {\" \"}\n                                Something else here\n                              </Dropdown.Item>\n                                                            <Dropdown.ItemDivider />\n                                                            <Dropdown.Item icon=\"link\">\n                                                                {\" \"}\n                                Separated link\n                              </Dropdown.Item>\n                                                        </React.Fragment>\n                                                    }\n                                                />\n                                            </Grid.Col>\n                                        </Grid.Row>\n                                    </li>\n                                </ul>\n                            </Card.Body>\n                        </Card>\n                    </Grid.Col>\n                    <Grid.Col md={6} lg={12}>\n                        <Grid.Row>\n                            <Grid.Col sm={6} lg={3}>\n                                <StatsCard\n                                    layout={2}\n                                    movement={5}\n                                    total=\"423\"\n                                    label=\"Users online\"\n                                    chart={\n                                        <C3Chart\n                                            style={{ height: \"100%\" }}\n                                            padding={{\n                                                bottom: -10,\n                                                left: -1,\n                                                right: -1,\n                                            }}\n                                            data={{\n                                                names: {\n                                                    data1: \"Users online\",\n                                                },\n                                                columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\n                                                type: \"area\",\n                                            }}\n                                            legend={{\n                                                show: false,\n                                            }}\n                                            transition={{\n                                                duration: 0,\n                                            }}\n                                            point={{\n                                                show: false,\n                                            }}\n                                            tooltip={{\n                                                format: {\n                                                    title: function (x) {\n                                                        return \"\";\n                                                    },\n                                                },\n                                            }}\n                                            axis={{\n                                                y: {\n                                                    padding: {\n                                                        bottom: 0,\n                                                    },\n                                                    show: false,\n                                                    tick: {\n                                                        outer: false,\n                                                    },\n                                                },\n                                                x: {\n                                                    padding: {\n                                                        left: 0,\n                                                        right: 0,\n                                                    },\n                                                    show: false,\n                                                },\n                                            }}\n                                            color={{\n                                                pattern: [\"#467fcf\"],\n                                            }}\n                                        />\n                                    }\n                                />\n                            </Grid.Col>\n                            <Grid.Col sm={6} lg={3}>\n                                <StatsCard\n                                    layout={2}\n                                    movement={-3}\n                                    total=\"423\"\n                                    label=\"Users online\"\n                                    chart={\n                                        <C3Chart\n                                            style={{ height: \"100%\" }}\n                                            padding={{\n                                                bottom: -10,\n                                                left: -1,\n                                                right: -1,\n                                            }}\n                                            data={{\n                                                names: {\n                                                    data1: \"Users online\",\n                                                },\n                                                columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\n                                                type: \"area\",\n                                            }}\n                                            legend={{\n                                                show: false,\n                                            }}\n                                            transition={{\n                                                duration: 0,\n                                            }}\n                                            point={{\n                                                show: false,\n                                            }}\n                                            tooltip={{\n                                                format: {\n                                                    title: function (x) {\n                                                        return \"\";\n                                                    },\n                                                },\n                                            }}\n                                            axis={{\n                                                y: {\n                                                    padding: {\n                                                        bottom: 0,\n                                                    },\n                                                    show: false,\n                                                    tick: {\n                                                        outer: false,\n                                                    },\n                                                },\n                                                x: {\n                                                    padding: {\n                                                        left: 0,\n                                                        right: 0,\n                                                    },\n                                                    show: false,\n                                                },\n                                            }}\n                                            color={{\n                                                pattern: [\"#e74c3c\"],\n                                            }}\n                                        />\n                                    }\n                                />\n                            </Grid.Col>\n                            <Grid.Col sm={6} lg={3}>\n                                <StatsCard\n                                    layout={2}\n                                    movement={-3}\n                                    total=\"423\"\n                                    label=\"Users online\"\n                                    chart={\n                                        <C3Chart\n                                            style={{ height: \"100%\" }}\n                                            padding={{\n                                                bottom: -10,\n                                                left: -1,\n                                                right: -1,\n                                            }}\n                                            data={{\n                                                names: {\n                                                    data1: \"Users online\",\n                                                },\n                                                columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\n                                                type: \"area\",\n                                            }}\n                                            legend={{\n                                                show: false,\n                                            }}\n                                            transition={{\n                                                duration: 0,\n                                            }}\n                                            point={{\n                                                show: false,\n                                            }}\n                                            tooltip={{\n                                                format: {\n                                                    title: function (x) {\n                                                        return \"\";\n                                                    },\n                                                },\n                                            }}\n                                            axis={{\n                                                y: {\n                                                    padding: {\n                                                        bottom: 0,\n                                                    },\n                                                    show: false,\n                                                    tick: {\n                                                        outer: false,\n                                                    },\n                                                },\n                                                x: {\n                                                    padding: {\n                                                        left: 0,\n                                                        right: 0,\n                                                    },\n                                                    show: false,\n                                                },\n                                            }}\n                                            color={{\n                                                pattern: [\"#5eba00\"],\n                                            }}\n                                        />\n                                    }\n                                />\n                            </Grid.Col>\n                            <Grid.Col sm={6} lg={3}>\n                                <StatsCard\n                                    layout={2}\n                                    movement={9}\n                                    total=\"423\"\n                                    label=\"Users online\"\n                                    chart={\n                                        <C3Chart\n                                            style={{ height: \"100%\" }}\n                                            padding={{\n                                                bottom: -10,\n                                                left: -1,\n                                                right: -1,\n                                            }}\n                                            data={{\n                                                names: {\n                                                    data1: \"Users online\",\n                                                },\n                                                columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\n                                                type: \"area\",\n                                            }}\n                                            legend={{\n                                                show: false,\n                                            }}\n                                            transition={{\n                                                duration: 0,\n                                            }}\n                                            point={{\n                                                show: false,\n                                            }}\n                                            tooltip={{\n                                                format: {\n                                                    title: function (x) {\n                                                        return \"\";\n                                                    },\n                                                },\n                                            }}\n                                            axis={{\n                                                y: {\n                                                    padding: {\n                                                        bottom: 0,\n                                                    },\n                                                    show: false,\n                                                    tick: {\n                                                        outer: false,\n                                                    },\n                                                },\n                                                x: {\n                                                    padding: {\n                                                        left: 0,\n                                                        right: 0,\n                                                    },\n                                                    show: false,\n                                                },\n                                            }}\n                                            color={{\n                                                pattern: [\"#f1c40f\"],\n                                            }}\n                                        />\n                                    }\n                                />\n                            </Grid.Col>\n                        </Grid.Row>\n                    </Grid.Col>\n                    <Grid.Col width={12}>\n                        <Card title=\"Invoices\">\n                            <Table\n                                responsive\n                                className=\"card-table table-vcenter text-nowrap\"\n                                headerItems={[\n                                    { content: \"No.\", className: \"w-1\" },\n                                    { content: \"Invoice Subject\" },\n                                    { content: \"Client\" },\n                                    { content: \"VAT No.\" },\n                                    { content: \"Created\" },\n                                    { content: \"Status\" },\n                                    { content: \"Price\" },\n                                    { content: null },\n                                    { content: null },\n                                ]}\n                                bodyItems={[\n                                    {\n                                        key: \"1\",\n                                        item: [\n                                            {\n                                                content: (\n                                                    <Text RootComponent=\"span\" muted>\n                                                        001401\n                                                    </Text>\n                                                ),\n                                            },\n                                            {\n                                                content: (\n                                                    <a href=\"invoice.html\" className=\"text-inherit\">\n                                                        Design Works\n                                                    </a>\n                                                ),\n                                            },\n                                            { content: \"Carlson Limited\" },\n                                            { content: \"87956621\" },\n                                            { content: \"15 Dec 2017\" },\n                                            {\n                                                content: (\n                                                    <React.Fragment>\n                                                        <span className=\"status-icon bg-success\" /> Paid\n                                                    </React.Fragment>\n                                                ),\n                                            },\n                                            { content: \"$887\" },\n                                            {\n                                                alignContent: \"right\",\n                                                content: (\n                                                    <React.Fragment>\n                                                        <Button size=\"sm\" color=\"secondary\">\n                                                            Manage\n                            </Button>\n                                                        <div className=\"dropdown\">\n                                                            <Button\n                                                                color=\"secondary\"\n                                                                size=\"sm\"\n                                                                isDropdownToggle\n                                                            >\n                                                                Actions\n                              </Button>\n                                                        </div>\n                                                    </React.Fragment>\n                                                ),\n                                            },\n                                            { content: <Icon link name=\"edit\" /> },\n                                        ],\n                                    },\n                                ]}\n                            />\n                        </Card>\n                    </Grid.Col>\n                </Grid.Row>\n            </Page.Content>)\n    }\n}\n\nfunction mapStateToProps({ authReducer }) {\n    return {\n        authReducer\n    }\n}\n\nexport const AnalyticsContainer = connect(\n    mapStateToProps\n)(AnalyticsPage);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../../../styles/raleway-font.css\";\nimport \"../../../styles/style.css\";\nimport \"../../../fonts/material-design-iconic-font/css/material-design-iconic-font.min.css\";\n\nclass SetUpPage extends React.PureComponent {\n    render() {\n        return (\n            <div className=\"page-content\">\n                <div className=\"wizard-v1-content\">\n                    <div className=\"wizard-form\">\n                        <form className=\"form-register\" id=\"form-register\" action=\"#\" method=\"post\" novalidate=\"novalidate\">\n                            <div id=\"form-total\" role=\"application\" className=\"wizard clearfix\">\n                                <div className=\"steps clearfix\">\n                                    <ul role=\"tablist\">\n                                        <li role=\"tab\" className=\"first current\" aria-disabled=\"false\" aria-selected=\"true\">\n                                            <a id=\"form-total-t-0\" href=\"#form-total-h-0\" aria-controls=\"form-total-p-0\">\n                                                <span className=\"current-info audible\"> </span>\n                                                <div className=\"title\">\n                                                    <span className=\"step-icon\">\n                                                        <i className=\"zmdi zmdi-account\"></i>\n                                                    </span>\n                                                    <span className=\"step-number\">Bước 1</span>\n                                                    <span className=\"step-text\">Chọn thông tin địa phương</span>\n                                                </div></a></li>\n                                        <li role=\"tab\" className=\"done\" aria-disabled=\"false\" aria-selected=\"false\">\n                                            <a id=\"form-total-t-1\" href=\"#form-total-h-1\" aria-controls=\"form-total-p-1\">\n                                                <div className=\"title\">\n                                                    <span className=\"step-icon\">\n                                                        <i className=\"zmdi zmdi-card\"></i></span>\n                                                    <span className=\"step-number\">Bước 2</span>\n                                                    <span className=\"step-text\">Thiết lập từ khóa</span>\n                                                </div></a></li>\n                                        <li role=\"tab\" className=\"last done\" aria-disabled=\"false\" aria-selected=\"false\">\n                                            <a id=\"form-total-t-2\" href=\"#form-total-h-2\" aria-controls=\"form-total-p-2\">\n                                                <div className=\"title\">\n                                                    <span className=\"step-icon\">\n                                                        <i className=\"zmdi zmdi-receipt\"></i></span>\n                                                    <span className=\"step-number\">Bước 3</span>\n                                                    <span className=\"step-text\">Thiết lập nguồn tin tức</span>\n                                                </div></a></li></ul></div>\n                                <div className=\"content clearfix\">\n                                    {/*  <!-- SECTION 1 --> */}\n                                    <h2 id=\"form-total-h-0\" tabindex=\"-1\" className=\"title current\">\n                                        <span className=\"step-icon\"><i className=\"zmdi zmdi-account\"></i></span>\n                                        <span className=\"step-number\">Bước 1</span>\n                                        <span className=\"step-text\">Chọn thông tin địa phương</span>\n                                    </h2>\n                                    <section id=\"form-total-p-0\" role=\"tabpanel\" aria-labelledby=\"form-total-h-0\" className=\"body current\" aria-hidden=\"false\">\n                                        <div className=\"inner\">\n                                            <div className=\"form-row\">\n                                                <div className=\"form-holder form-holder-2\">\n                                                    <label for=\"username\">Username*</label>\n                                                    <input type=\"text\" placeholder=\"Username\" className=\"form-control valid\" id=\"username\" name=\"username\" required=\"\" aria-required=\"true\" aria-invalid=\"false\"></input>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-holder form-holder-2\">\n                                                    <label for=\"email\">Email Address*</label>\n                                                    <input type=\"email\" placeholder=\"Your Email\" className=\"form-control valid\" id=\"email\" name=\"email\" required=\"\" pattern=\"[^@]+@[^@]+.[a-zA-Z]{2,6}\" aria-required=\"true\" aria-invalid=\"false\"></input>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-holder\">\n                                                    <label for=\"password\">Password*</label>\n                                                    <input type=\"password\" placeholder=\"Password\" className=\"form-control valid validate-equalTo-blur\" id=\"password\" name=\"password\" required=\"\" aria-required=\"true\" aria-invalid=\"false\"></input>\n                                                </div>\n                                                <div className=\"form-holder\">\n                                                    <label for=\"confirm_password\">Confirm Password*</label>\n                                                    <input type=\"password\" placeholder=\"Confirm Password\" className=\"form-control valid\" id=\"confirm_password\" name=\"confirm_password\" required=\"\" aria-required=\"true\" aria-invalid=\"false\"></input>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </section>\n                                    {/*  <!-- SECTION 2 --> */}\n                                    <h2 id=\"form-total-h-1\" tabindex=\"-1\" className=\"title\">\n                                        <span className=\"step-icon\"><i className=\"zmdi zmdi-card\"></i></span>\n                                        <span className=\"step-number\">Step 2</span>\n                                        <span className=\"step-text\">Payment Infomation</span>\n                                    </h2>\n                                    <section id=\"form-total-p-1\" role=\"tabpanel\" aria-labelledby=\"form-total-h-1\" className=\"body\" aria-hidden=\"true\" style={{ display: \"none\" }}>\n                                        <div className=\"inner\">\n                                            <div className=\"form-row\">\n                                                <div className=\"form-holder form-holder-2\">\n                                                    <label for=\"card-type\">Card Type</label>\n                                                    <select name=\"card-type\" id=\"card-type\" className=\"form-control\">\n                                                        <option value=\"\" disabled=\"\" selected=\"\">Select Credit Card Type</option>\n                                                        <option value=\"Business Credit Cards\">Business Credit Cards</option>\n                                                        <option value=\"Limited Purpose Cards\">Limited Purpose Cards</option>\n                                                        <option value=\"Prepaid Cards\">Prepaid Cards</option>\n                                                        <option value=\"Charge Cards\">Charge Cards</option>\n                                                        <option value=\"Student Credit Cards\">Student Credit Cards</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-row\">\n                                                <div className=\"form-holder form-holder-3\">\n                                                    <label for=\"card-number\">Card Number</label>\n                                                    <input type=\"text\" name=\"card-number\" className=\"card-number\" id=\"card-number\" placeholder=\"ex: 489050625008xxxx\"></input>\n                                                </div>\n                                                <div className=\"form-holder\">\n                                                    <label for=\"cvc\">CVC</label>\n                                                    <input type=\"text\" name=\"cvc\" className=\"cvc\" id=\"cvc\" placeholder=\"xxx\"></input>\n                                                </div>\n                                            </div>\n                                            <div className=\"form-row form-row-2\">\n                                                <div className=\"form-holder\">\n                                                    <label for=\"month\">Expiry Month</label>\n                                                    <select name=\"month\" id=\"month\" className=\"form-control\">\n                                                        <option value=\"\" disabled=\"\" selected=\"\">Expiry Month</option>\n                                                        <option value=\"January\">January</option>\n                                                        <option value=\"February\">February</option>\n                                                        <option value=\"March\">March</option>\n                                                        <option value=\"February\">February</option>\n                                                        <option value=\"April\">April</option>\n                                                        <option value=\"May\">May</option>\n                                                    </select>\n                                                </div>\n                                                <div className=\"form-holder\">\n                                                    <label for=\"year\">Expiry Year</label>\n                                                    <select name=\"year\" id=\"year\" className=\"form-control\">\n                                                        <option value=\"\" disabled=\"\" selected=\"\">Expiry Year</option>\n                                                        <option value=\"2018\">2018</option>\n                                                        <option value=\"2017\">2017</option>\n                                                        <option value=\"2016\">2016</option>\n                                                        <option value=\"2015\">2015</option>\n                                                        <option value=\"2014\">2014</option>\n                                                        <option value=\"2013\">2013</option>\n                                                    </select>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </section>\n                                    {/*  <!-- SECTION 3 --> */}\n                                    <h2 id=\"form-total-h-2\" tabindex=\"-1\" className=\"title\">\n                                        <span className=\"step-icon\"><i className=\"zmdi zmdi-receipt\"></i></span>\n                                        <span className=\"step-number\">Step 3</span>\n                                        <span className=\"step-text\">Confirm Your Details</span>\n                                    </h2>\n                                    <section id=\"form-total-p-2\" role=\"tabpanel\" aria-labelledby=\"form-total-h-2\" className=\"body\" aria-hidden=\"true\" style={{ display: \"none\" }}>\n                                        <div className=\"inner\">\n                                            <h3>Comfirm Details</h3>\n                                            <div className=\"form-row table-responsive\">\n                                                <table className=\"table\">\n                                                    <tbody>\n                                                        <tr className=\"space-row\">\n                                                            <th>Username:</th>\n                                                            <td id=\"username-val\">thaoltt1</td>\n                                                        </tr>\n                                                        <tr className=\"space-row\">\n                                                            <th>Email Address:</th>\n                                                            <td id=\"email-val\">thao.ltt@phongvu.vn</td>\n                                                        </tr>\n                                                        <tr className=\"space-row\">\n                                                            <th>Card Type:</th>\n                                                            <td id=\"card-type-val\"></td>\n                                                        </tr>\n                                                        <tr className=\"space-row\">\n                                                            <th>Card Number:</th>\n                                                            <td id=\"card-number-val\"></td>\n                                                        </tr>\n                                                        <tr className=\"space-row\">\n                                                            <th>CVC:</th>\n                                                            <td id=\"cvc-val\"></td>\n                                                        </tr>\n                                                        <tr className=\"space-row\">\n                                                            <th>Expiry Month:</th>\n                                                            <td id=\"month-val\"></td>\n                                                        </tr>\n                                                        <tr className=\"space-row\">\n                                                            <th>Expiry Year:</th>\n                                                            <td id=\"year-val\"></td>\n                                                        </tr>\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                    </section>\n                                </div><div className=\"actions clearfix\"><ul role=\"menu\" aria-label=\"Pagination\"><li className=\"disabled\" aria-disabled=\"true\"><a href=\"#previous\" role=\"menuitem\">Back</a></li><li aria-hidden=\"false\" aria-disabled=\"false\"><a href=\"#next\" role=\"menuitem\"><i className=\"zmdi zmdi-arrow-right\"></i></a></li><li aria-hidden=\"true\" style={{ display: 'none' }}><a href=\"#finish\" role=\"menuitem\"><i className=\"zmdi zmdi-arrow-right\"></i></a></li></ul></div></div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps({ authReducer }) {\n    return {\n        authReducer\n    }\n}\n\nexport const SetUpContainer = connect(\n    mapStateToProps\n)(SetUpPage);","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport {\n    Page,\n    Site\n} from \"tabler-react\";\nimport { AnalyticsContainer } from \"./AnalyticsPage\";\nimport { SetUpContainer } from \"./setup/SetUpPage\";\n\nclass DashboardPage extends React.Component {\n    render() {\n\n        return (\n                <AnalyticsContainer />\n        );\n    }\n}\n\nfunction mapStateToProps({ }) {\n    return {};\n}\n\nexport const DashboardContainer = connect(\n    mapStateToProps\n)(DashboardPage);","import { getBrandInfo } from \"actions/SiteWrapperAction\";\nimport EmptyPageContent from \"components/Placeholder/EmptyPageContent\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Page, Form, Button, Grid, Card } from \"tabler-react\";\nimport { apiGet } from \"util/ApiUtil\";\n\nclass SettingPage extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        \n        this.state = {isFetching: false, fullKeywords: null, defaultKeywords: [], addedKeywords: [], keywords:[], locations: null, isSuccess: true}\n    }\n    componentDidMount() {\n        //const subBranding = this.props && this.props.siteWrapperReducer && this.props.siteWrapperReducer.subBranding && this.props.siteWrapperReducer.subBranding || undefined;\n       // if(!subBranding) {\n            const {dispatch } = this.props;\n            dispatch(getBrandInfo());\n        //}\n\n        this.reload();\n    }\n\n    async reload() {\n\n\n        this.setState({...this.state, isFetching: true});\n        const fullKeywordsRes = await apiGet(\"/info/fullKeywords\");\n        const locationsRes = await apiGet(\"/info/locations\");\n        const fullKeywords = fullKeywordsRes.data;\n        const locations = locationsRes.data;\n\n        const defaultKeywords = [];\n        const addedKeywords = [];\n        let keywords = [];\n        if(fullKeywords && fullKeywords.initial_keywords && fullKeywords.related_keywords && fullKeywords.added_keywords && fullKeywords.keywords) {\n            keywords = fullKeywords.keywords;   \n            fullKeywords.added_keywords.forEach(kw => {\n                   addedKeywords.push({name: kw, disableable: true, removeable : true, disabled: !keywords.includes(kw)})\n               })\n\n                fullKeywords.initial_keywords.forEach(kw => {\n                    defaultKeywords.push({name: kw, disableable: false, removeable: false, disabled: false});\n                });\n\n                fullKeywords.related_keywords.forEach(kw => {\n                    addedKeywords.push({name: kw, disableable: true, removeable: false, disabled: !keywords.includes(kw)});\n                })\n        }\n\n        this.setState({...this.state, isFetching: false, isSuccess: true, defaultKeywords, addedKeywords, keywords})\n    }\n\n    render() {\n        const subBranding = this.props && this.props.siteWrapperReducer && this.props.siteWrapperReducer.subBranding && this.props.siteWrapperReducer.subBranding || \"\";\n\n        return (\n            this.state.isFetching ? \n               (<EmptyPageContent isFetching={this.state.isFetching}/>)\n             :\n                (<Page.Content title=\"Thiết lập\">\n                <Page.Card title=\"Địa phương\">\n                    <Form.Group label=\"Tên hiển thị\">\n                        <Grid.Row >\n                            <Grid.Col lg={4} md={6} width={12}>\n\n                                <Form.InputGroup>\n                                    <Form.Input\n                                        disabled\n                                        name=\"location-name\"\n                                        value={subBranding}\n                                    />\n                                </Form.InputGroup>\n                            </Grid.Col>\n\n                        </Grid.Row>\n\n                    </Form.Group>\n                    <Form.Group label=\"Chi tiết đơn vị hành chính\">\n                        <Grid.Row>\n                            <Grid.Col lg={4} md={6} width={12} className=\"py-2\"><Form.InputGroup>\n                                <Form.InputGroupPrepend>\n                                    <Form.InputGroupText>Tỉnh</Form.InputGroupText>\n                                </Form.InputGroupPrepend>\n                                <Form.Select>\n                                    <option>Thành Phố Hồ Chí Minh</option>\n                                    <option>Germany</option>\n                                </Form.Select>\n                            </Form.InputGroup></Grid.Col>\n                            <Grid.Col lg={4} md={6} width={12} className=\"py-2\"><Form.InputGroup>\n                                <Form.InputGroupPrepend>\n                                    <Form.InputGroupText>Quận/Huyện</Form.InputGroupText>\n                                </Form.InputGroupPrepend>\n                                <Form.Select>\n                                    <option>Quận 9</option>\n                                    <option>Germany</option>\n                                </Form.Select>\n                            </Form.InputGroup></Grid.Col>\n                            <Grid.Col lg={4} md={12} className=\"py-2\">\n                                <Button color=\"primary\" className=\"ml-auto\">Lưu lại</Button>\n                            </Grid.Col>\n                        </Grid.Row>\n\n                    </Form.Group>\n                </Page.Card>\n                <Page.Card title=\"Từ khóa\">\n                    <Form.Group label=\"Mặc định\">\n                        <Form.SelectGroup pills canSelectMultiple className=\"py-4\">\n                        {this.state.defaultKeywords && this.state.defaultKeywords.map(kw => \n                            <Form.SelectGroupItem\n                                name=\"default-keyword\"\n                                label={kw.name}\n                                value={kw.name}\n                                checked={!kw.disabled}\n                            />) }\n                        </Form.SelectGroup>\n                    </Form.Group>\n                    <Form.Group label=\"Liên quan hoặc được thêm vào\">\n                        <Form.SelectGroup pills canSelectMultiple className=\"py-4\">\n                        {this.state.addedKeywords && this.state.addedKeywords.map(kw => \n                            <Form.SelectGroupItem\n                                name=\"default-keyword\"\n                                label={kw.name+ (!kw.removeable ? \"X\": \"\")}\n                                value={kw.name }\n                                checked={!kw.disabled}\n                            />) }\n                        </Form.SelectGroup>\n                        <div className=\"py-4\">\n                            <Button color=\"primary\" className=\"ml-auto\">Lưu lại</Button>\n                        </div>\n                    </Form.Group>\n                </Page.Card>\n                <Page.Card title=\"Nguồn tin tức\">\n                    <Form.Group label=\"Các nguồn tin bị loại bỏ\">\n                    <Form.SelectGroup pills canSelectMultiple className=\"py-4\">\n                            <Form.SelectGroupItem\n                                name=\"language\"\n                                label=\"Báo Cần Thơ\"\n                                value=\"HTML\"\n                                checked\n                            />\n                            <Form.SelectGroupItem\n                                name=\"language\"\n                                label=\"Báo Đồng Nai\"\n                                value=\"CSS\"\n                                checked\n                            />\n                            <Form.SelectGroupItem\n                                name=\"language\"\n                                label=\"Báo Pháp Luật Việt Nam\"\n                                value=\"PHP\"\n                                checked = {true}\n                            />\n                            \n                            <Form.SelectGroupItem\n                                name=\"language\"\n                                label=\"vnexpress.net\"\n                                value=\"C++\"\n                             \n                            />\n                        </Form.SelectGroup>\n                        <div className=\"py-4\">\n                            <Button color=\"primary\" className=\"ml-auto\">Lưu lại</Button>\n                        </div>\n                    </Form.Group>\n                </Page.Card>\n                <Page.Card title=\"Triển khai (Deploy)\">\n                    <Form.Group label=\"Thay đổi sẽ được tự động triển khai sau một khoảng thời gian chờ. Bạn cũng có thể tiến hành triển khai ngay lập tức.\">\n                            <Button color=\"primary\" className=\"ml-auto my-5\">Triển khai ngay</Button>\n                    </Form.Group>\n                </Page.Card>\n            </Page.Content>))\n    }\n}\n\nfunction mapStateToProps({ authReducer, siteWrapperReducer }) {\n    return {\n        authReducer,\n        siteWrapperReducer\n    }\n}\n\nexport const SettingContainer = connect(\n    mapStateToProps\n)(SettingPage);","import Error404Page from \"pages/NotFound\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport {\n    Page,\n    Site\n} from \"tabler-react\";\nimport { AnalyticsContainer } from \"./AnalyticsPage\";\nimport { DashboardContainer } from \"./DashboardPage\";\nimport { SettingContainer } from \"./SettingPage\";\nimport { SetUpContainer } from \"./setup/SetUpPage\";\n\nclass ManagementPage extends React.Component {\n    render() {\n\n        return (\n            <Switch>\n                <Route path='/management/analytics' component={AnalyticsContainer} />\n\n                {/* Setup Page */}\n                <Route path='/management/setup' component={SetUpContainer} />\n\n                <Route path='/management/setting' component={SettingContainer}/>\n\n                {/* Dashboard page */}\n                <Route exact path='/management/' component={DashboardContainer} />\n\n              {/*   <Route exact path='/management/' component={Error404Page} /> */}\n            </Switch>\n        );\n    }\n}\n\nfunction mapStateToProps({ }) {\n    return {};\n}\n\nexport const ManagementContainer = connect(\n    mapStateToProps\n)(ManagementPage);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { SiteWrapperContainer } from \"components/SiteWrapper.react\";\nimport { TrendingFeedsContainer } from \"./TrendingFeedsPage\";\nimport { HeadlinesFeedsContainer } from \"./HeadlinesFeedsPage\";\nimport { OverviewContainer } from \"./management/OverviewPage\";\nimport MapsContainer from \"./MapPage\";\nimport NotFound from './NotFound'\nimport { DashboardContainer } from \"./management/DashboardPage\";\nimport { ManagementContainer } from \"./management/ManagementPage\";\n\n\nconst { Route, HashRouter, Switch } = require(\"react-router-dom\");\n\nclass HeaderFooterWrapperPage extends React.PureComponent {\n    componentDidMount() {\n\n    }\n\n    render() {\n        const { siteWrapperReducer, authReducer, match } = this.props;\n\n        const showFooter = true;\n        let user = authReducer && authReducer.authData && authReducer.authData.user ? authReducer.authData.user : undefined;\n        return (\n            <SiteWrapperContainer showFooter={siteWrapperReducer && siteWrapperReducer.showFooter} currentUser={user}>\n                <Switch>\n\n                    {/* Trendings Page */}\n                    <Route exact path='/trendings' component={TrendingFeedsContainer} />\n\n                    {/* Management Page */}\n                    <Route path='/management' component={ManagementContainer} />\n\n                    <Route exact path='/maps' component={MapsContainer} />\n\n                    {/* Headlines page */}\n                    <Route exact path={[`${match.url}/`, `${match.url}/headlines`]} component={HeadlinesFeedsContainer} />\n\n                    <Route component={NotFound} />\n                </Switch>\n\n            </SiteWrapperContainer>\n        )\n    }\n\n\n}\n\nfunction mapStateToProps({ authReducer, siteWrapperReducer }) {\n    return { authReducer, siteWrapperReducer };\n}\n\nexport const HeaderFooterWrapperContainer = connect(\n    mapStateToProps\n)(HeaderFooterWrapperPage);","// @flow\n\nimport * as React from \"react\";\n\n/**\n * Returns an object of fields with values set based on the touched and error values\n * If a value is both touched and has a non-empty error string it is returned as the fields value\n */\nfunction touchedErrors(\n  touched: { [string]: boolean } = {},\n  errors: { [string]: string } = {},\n  fields: Array<string> = []\n): { [string]: string } {\n  return fields.reduce(\n    (acc, cur) =>\n      Object.assign(acc, {\n        [cur]: touched && touched[cur] && errors ? errors[cur] : \"\",\n      }),\n    {}\n  );\n}\n\n/**\n * A HOC that modifies the errors propso that it only returns errors if the the field\n * has also been touched\n * First takes an array of the field names, followed by the component\n */\nfunction withTouchedErrors(fields: Array<string> = []) {\n  return function withComponent<A: { +touched?: *, +errors?: * }>(\n    Component: React.ComponentType<A>\n  ): React.ComponentType<A> {\n    return function WithTouchedErrors(props: A) {\n      const errors = touchedErrors(props.touched, props.errors, fields);\n      return <Component {...props} errors={errors} />;\n    };\n  };\n}\n\nexport default withTouchedErrors;","//@flow\nconst strings = {\n  title: \"Login to your account\",\n  buttonText: \"Login\",\n  emailLabel: \"Email\",\n  emailPlaceholder: \"Enter email\",\n  passwordLabel: \"Password\",\n  passwordPlaceholder: \"Password\",\n};\n\nexport default strings;\n","import * as React from \"react\";\n\nimport { FormCard, FormTextInput, StandaloneFormPage } from \"tabler-react\";\nimport withTouchedErrors from \"../../util/withTouchedErrors.react\";\n\nimport defaultStrings from \"./LoginFormStrings\";\n\n/**\n * A login page\n * Can be easily wrapped with form libraries like formik and redux-form\n */\nfunction LoginForm(props) {\n  const {\n    action,\n    method,\n    onSubmit,\n    onChange,\n    onBlur,\n    values,\n    strings = {},\n    errors,\n    message\n  } = props;\n\n  return (\n    <StandaloneFormPage imageURL={\"./images/local_news.svg\"}>\n      <FormCard\n        buttonText={strings.buttonText || defaultStrings.buttonText}\n        title={strings.title || defaultStrings.title}\n        onSubmit={onSubmit}\n        action={action}\n        method={method}\n      >\n        <FormTextInput\n          name=\"email\"\n          label={strings.emailLabel || defaultStrings.emailLabel}\n          placeholder={\n            strings.emailPlaceholder || defaultStrings.emailPlaceholder\n          }\n          onChange={onChange}\n          onBlur={onBlur}\n          value={values && values.email}\n          error={errors && errors.email}\n        />\n        <FormTextInput\n          name=\"password\"\n          type=\"password\"\n          label={strings.passwordLabel || defaultStrings.passwordLabel}\n          placeholder={\n            strings.passwordPlaceholder || defaultStrings.passwordPlaceholder\n          }\n          onChange={onChange}\n          onBlur={onBlur}\n          value={values && values.password}\n          error={errors && errors.password}\n        />\n        {message && <span className=\"invalid-message\">{message}</span>}\n      </FormCard>\n\n    </StandaloneFormPage>\n  );\n}\n\nconst LoginPageWithTouchedErrors = withTouchedErrors(\n  [\"email\", \"password\"]\n)(LoginForm);\n\nexport default LoginPageWithTouchedErrors;\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Redirect } from 'react-router-dom'\nimport { Formik } from \"formik\";\nimport { postUserLogin } from '../actions/AuthAction';\nimport LoginForm from '../components/Form/LoginForm';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { dispatch, isFetching, authData } = this.props;\n    const strings = isFetching ? { buttonText: \"Please wait\" } : {};\n\n    if (authData) {\n      if (authData.success) {\n        return <Redirect to=\"/\" />\n      }\n    }\n    const message = (authData && authData.success === false) ? (authData.message || \"Something went wrong\") : undefined\n\n    return (\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        validate={values => {\n          // same as above, but feel free to move this into a class method now.\n          let errors = {};\n          if (!values.email) {\n            errors.email = \"Required\";\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n          ) {\n            errors.email = \"Invalid email address\";\n          }\n\n          return errors;\n        }}\n        onSubmit={(\n          values,\n          { setSubmitting, setErrors /* setValues and other goodies */ }\n        ) => {\n          if (!isFetching)\n            dispatch(postUserLogin(values))\n          // alert(\"Done!\");\n        }}\n        render={({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          strings,\n          isSubmitting\n        }) => (\n\n          <LoginForm\n            onSubmit={handleSubmit}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            values={values}\n            errors={errors}\n            touched={touched}\n            message={message}\n          >\n          </LoginForm>\n\n        )}\n\n      />\n    );\n  }\n}\n\n\nfunction mapStateToProps({ authReducer }) {\n  return { authReducer };\n}\n\nexport const LoginContainer = connect(\n  mapStateToProps\n)(LoginPage)\n","const strings = {\n    title: \"Create New Account\",\n    buttonText: \"Create Account\",\n    usernameLabel: \"Username\",\n    usernamePlaceholder: \"Enter username\",\n    nameLabel: \"Name\",\n    namePlaceholder: \"Enter name\",\n    emailLabel: \"Email Address\",\n    emailPlaceholder: \"Enter email\",\n    passwordLabel: \"Password\",\n    passwordPlaceholder: \"Password\",\n    termsLabel: \"Agree to the terms and policy\",\n  };\n  \n  export default strings;\n","import * as React from \"react\";\n\nimport {\n  FormCard,\n  FormTextInput,\n  FormCheckboxInput,\n  StandaloneFormPage\n} from \"tabler-react\";\nimport withTouchedErrors from \"../../util/withTouchedErrors.react\";\n\nimport defaultStrings from \"./RegisterFormStrings\";\n// import type { stringTypes } from \"./RegisterPage.strings\";\n\nimport { FormEvents, FocusEvents } from \"tabler-react\";\n\n\n/**\n * A register page\n * Can be easily wrapped with form libraries like formik and redux-form\n */\nfunction RegisterForm(props) {\n  const {\n    action,\n    method,\n    onSubmit,\n    onChange,\n    onBlur,\n    values,\n    strings = {},\n    errors,\n  } = props;\n\n  return (\n    <StandaloneFormPage imageURL={\"./images/local_news.svg\"}>\n\n\n      <FormCard\n        buttonText={strings.buttonText || defaultStrings.buttonText}\n        title={strings.title || defaultStrings.title}\n        onSubmit={onSubmit}\n        action={action}\n        method={method}\n      >\n        <FormTextInput\n          name=\"name\"\n          label={strings.nameLabel || defaultStrings.nameLabel}\n          placeholder={\n            strings.namePlaceholder || defaultStrings.namePlaceholder\n          }\n          onChange={onChange}\n          onBlur={onBlur}\n          value={values && values.name}\n          error={errors && errors.name}\n        />\n        <FormTextInput\n          name=\"email\"\n          label={strings.emailLabel || defaultStrings.emailLabel}\n          placeholder={\n            strings.emailPlaceholder || defaultStrings.emailPlaceholder\n          }\n          onChange={onChange}\n          onBlur={onBlur}\n          value={values && values.email}\n          error={errors && errors.email}\n        />\n        <FormTextInput\n          name=\"username\"\n          label={strings.usernamePlaceholder || defaultStrings.usernameLabel}\n          placeholder={\n            strings.usernamePlaceholder || defaultStrings.usernamePlaceholder\n          }\n          onChange={onChange}\n          onBlur={onBlur}\n          value={values && values.username}\n          error={errors && errors.username}\n        />\n\n        <FormTextInput\n          name=\"password\"\n          type=\"password\"\n          label={strings.passwordLabel || defaultStrings.passwordLabel}\n          placeholder={\n            strings.passwordPlaceholder || defaultStrings.passwordPlaceholder\n          }\n          onChange={onChange}\n          onBlur={onBlur}\n          value={values && values.password}\n          error={errors && errors.password}\n        />\n        <FormCheckboxInput\n          onChange={onChange}\n          onBlur={onBlur}\n          value={values && values.terms}\n          name=\"terms\"\n          label={strings.termsLabel || defaultStrings.termsLabel}\n        />\n      </FormCard>\n    </StandaloneFormPage>\n  );\n}\n\nconst RegisterPageWithTouchedErrors = withTouchedErrors(\n  [\"name\", \"email\", \"email\", \"password\", \"terms\"]\n)(RegisterForm);\n\nexport default RegisterPageWithTouchedErrors;","import * as React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nimport { Formik } from \"formik\";\nimport RegisterForm from \"../components/Form/RegisterForm\";\nimport { postUserRegister } from '../actions/AuthAction';\nclass RegisterPage extends React.Component {\n  render() {\n    const { dispatch, isFetching, authData } = this.props;\n    const strings = isFetching ? { buttonText: \"Please wait\" } : {};\n\n    if (authData && authData.user && authData.user.email) {\n      return <Redirect to=\"/\" />\n    }\n\n    return (\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n          name: \"\",\n          terms: false,\n          username: \"\"\n        }}\n        validate={values => {\n          // same as above, but feel free to move this into a class method now.\n          let errors = {};\n          if (!values.email) {\n            errors.email = \"Required\";\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n          ) {\n            errors.email = \"Invalid email address\";\n          }\n          return errors;\n        }}\n        onSubmit={(\n          values,\n          { setSubmitting, setErrors /* setValues and other goodies */ }\n        ) => {\n          if (!isFetching)\n            dispatch(postUserRegister(values))\n          // alert(\"Done!\");\n        }}\n        render={({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          strings,\n          isSubmitting,\n        }) => (\n          <RegisterForm\n            onSubmit={handleSubmit}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            values={values}\n            errors={errors}\n            touched={touched}\n          />\n        )}\n      />\n    );\n  }\n}\n\n\nfunction mapStateToProps({ authReducers }) {\n  return authReducers;\n}\n\nexport const RegisterContainer = connect(\n  mapStateToProps\n)(RegisterPage)","\nimport * as React from \"react\";\nimport \"bootstrap\";\nimport \"tabler-react/dist/Tabler.css\";\nimport \"./App.css\";\nimport \"./Placeholder.css\";\nimport thunk from 'redux-thunk';\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport rootReducer from \"./reducers/rootReducers\";\n\nimport ViewDetailRedirect from \"./components/ViewDetailRedirect\";\nimport { HeaderFooterWrapperContainer } from \"pages/HeaderFooterWrapperPage\";\nimport { LoginContainer } from \"pages/LoginPage\";\nimport { RegisterContainer } from \"pages/RegisterPage\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(applyMiddleware(thunk)));\n\nfunction App(props) {\n\n  return (\n    <React.StrictMode>\n      <Provider store={store}>\n        <Router>\n          <Switch>\n            <Route exact path='/login' component={LoginContainer} />\n            <Route exact path='/register' component={RegisterContainer} />\n            <Route exact path=\"/detail/:id\" component={ViewDetailRedirect} />\n            <Route path='/' component={HeaderFooterWrapperContainer} />\n\n          </Switch>\n\n        </Router>\n      </Provider>\n    </React.StrictMode>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import { Route, Router, Switch } from 'react-router-dom';\n\nimport App from \"./App.react\";\nconst rootElement = document.getElementById(\"root\");\n\nif(rootElement) {\n  ReactDOM.render(<App/>, rootElement);\n} else {\n  throw new Error(\"Could not find root element to mount to!\");\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}