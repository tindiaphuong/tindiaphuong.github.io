{"version":3,"sources":["serviceWorker.js","constants/ActionTypes.js","util/ApiUtil.js","actions/TrendingFeedsAction.js","reducers/trendingFeedsReducer.js","actions/HeadlinesFeedsAction.js","reducers/headlinesFeedsReducer.js","actions/MapsAction.js","reducers/mapsReducer.js","util/AuthUtil.js","actions/AuthAction.js","reducers/authReducer.js","actions/SiteWrapperAction.js","reducers/siteWrapperReducer.js","reducers/rootReducers.js","components/ViewDetailRedirect.js","components/base/site/AliLogo.js","components/base/site/AliHeader.js","components/base/site/InnerSiteWrapper.react.js","components/SiteWrapper.react.js","util/ImageUtil.js","util/CommonUtil.js","components/Placeholder/ErrorPageContent.js","pages/TrendingFeedsPage.js","components/HeadlineFeed/SubHeadlineFeed.js","components/HeadlineFeed/HeadlineFeed.js","pages/HeadlinesFeedsPage.js","pages/management/OverviewPage.js","constants/Location.js","pages/MapPage.js","constants/Map_style.js","pages/NotFound.js","pages/management/AnalyticsPage.js","pages/management/setup/SetUpPage.js","pages/management/DashboardPage.js","pages/management/SettingPage.js","pages/management/ManagementPage.js","pages/HeaderFooterWrapperPage.js","util/withTouchedErrors.react.js","components/Form/LoginFormStrings.js","components/Form/LoginForm.js","pages/LoginPage.js","components/Form/RegisterFormStrings.js","components/Form/RegisterForm.js","pages/RegisterPage.js","App.react.js","index.js"],"names":["Boolean","window","location","hostname","match","SHOW_NEWS_DETAIL","baseUrl","process","apiUrl","get","url","a","result","axios","response","data","statusCode","status","isSuccess","message","endPoint","apiGet","REQUEST_NEWS_RELOAD","RECEIVE_NEWS_RELOAD","REQUEST_NEWS_LOAD_MORE","RECEIVE_NEWS_LOAD_MORE","receiveNewsListReload","list","type","fetchNewsList","page","dispatch","then","receiveNewsListLoadMore","result2","initalState","isFetching","hasMore","REQUEST_DATA_MAPS","RECEIVE_DATA_MAPS","requestDataMaps","receiveDataMaps","getDataMaps","baseGet","req","isLoading","jwtDecode","token","decoded","jwt_decode","error","RECEIVE_LOGIN","RECEIVE_REGISTER","REQUEST_LOGIN","REQUEST_REGISTER","REQUEST_SAVED_USER","RECEIVE_SAVED_USER","REQUEST_LOGOUT","RECEIVE_LOGOUT","requestLogin","requestRegister","receiveLogin","userObj","payload","receiveRegister","requestLogout","receiveLogout","localStorage","getItem","user","initialState","authData","name","email","username","undefined","RECEIVE_BRAND_INFO","RECEIVE_SITE_VISIBILITY","showFooter","showHeader","brandLogo","brandName","subBrandName","rootReducer","combineReducers","trendingFeedsReducer","state","action","console","log","length","Object","assign","headlinesFeedsReducer","mapsReducer","authReducer","siteWrapperReducer","ViewDetailRedirect","id","this","props","params","post","_asyncRequest","setState","catch","err","React","AliLogo","className","href","src","alt","title","LoaderDots","size","style","fontSize","description","AliHeader","children","align","imageURL","notificationsTrayFromProps","notificationsTray","accountDropdownFromProps","accountDropdown","navItems","onMenuToggleClick","Notification","Tray","AccountDropdown","onClick","displayName","InnerSiteWrapper","collapseMobileMenu","handleCollapseMobileMenu","s","headerProps","navProps","footerProps","routerContextComponentType","headerPropsWithToggleClick","header","navPropsWithCollapse","collapse","nav","Site","Nav","footer","Footer","Main","navBarItems","value","to","icon","LinkComponent","withRouter","NavLink","useExact","subItems","SiteWrapper","notificationsObjects","currentUser","actionLogout","removeItem","reduce","v","unread","copyright","avatarURL","options","active","role","isDivider","itemsObjects","RouterContextProvider","SiteWrapperContainer","connect","sourceLogo","image","sourceLogos","findSourceLogo","logos","find","element","momentFromNow","dateTime","moment","locale","fromNow","EmptyPageContent","onButtonClick","TrendingFeedsPage","loadMoreData","endOfPage","body","newsList","mainNews","moreNews","i","item","push","Col","width","imgSrc","thumbnail","imgAlt","summary","profileHref","source","postHref","authorName","avatarImgSrc","date","publicationDate","iconName","lg","md","Row","xl","aside","calendar","class","backgroundColor","backgroundClip","border","borderRadius","boxShadow","Content","cards","deck","Header","dataLength","next","loader","emptyBody","TrendingFeedsContainer","SubHeadlineFeed","imageUrl","sourceName","sourceImageUrl","sourceUrl","sourceBaseUrl","subs","ListItem","Body","target","rel","HeadlineFeed","classes","cn","Heading","List","Sub","HeadlinesFeedsPage","feeds","items","slice","headline","shift","key","map","index","height","overflow","HeadlinesFeedsContainer","OverviewPage","exact","path","component","AnalyticsPage","HomePage","PureComponent","libraries","mapContainerStyle","center","lat","Location","lng","titleStyle","position","zIndex","styles","disableDefaultUI","SearchPlace","usePlacesAutocomplete","requestOptions","radius","ready","suggestions","setValue","clearSuggesetions","GetIcon","marker","numOfArticles","diameter","scaledSize","google","maps","Size","origin","Point","anchor","MapsContainer","useLoadScript","googleMapsApiKey","isLoaded","loadError","useState","selected","setSelected","useEffect","markers","onMapClick","useCallback","e","setMarkers","latLng","time","Date","mapRef","useRef","onMapLoad","current","Fragment","zoom","onLoad","toISOString","onCloseClick","Error404Page","subtitle","details","sm","layout","movement","total","label","Title","columns","groups","colors","data1","names","axis","y","padding","bottom","show","tick","outer","x","left","right","legend","inset","step","tooltip","format","point","striped","responsive","ColHeader","colSpan","link","Link","data2","top","data3","data4","content","progressColor","progressWidth","color","highlightRowOnHover","hasOutline","verticalAlign","alignContent","muted","Small","Bar","payment","trigger","Trigger","toggle","Item","ItemDivider","prefix","RootComponent","auto","chart","transition","duration","pattern","headerItems","bodyItems","isDropdownToggle","AnalyticsContainer","SetUpPage","method","novalidate","aria-disabled","aria-selected","aria-controls","tabindex","aria-labelledby","aria-hidden","for","placeholder","required","aria-required","aria-invalid","display","disabled","aria-label","SetUpContainer","DashboardPage","DashboardContainer","SettingPage","Card","Group","InputGroup","Input","InputGroupPrepend","InputGroupText","Select","SelectGroup","pills","canSelectMultiple","SelectGroupItem","checked","SettingContainer","ManagementPage","ManagementContainer","require","Route","Switch","HashRouter","HeaderFooterWrapperPage","NotFound","HeaderFooterWrapperContainer","touchedErrors","touched","errors","fields","acc","cur","withTouchedErrors","Component","strings","buttonText","emailLabel","emailPlaceholder","passwordLabel","passwordPlaceholder","LoginPageWithTouchedErrors","onSubmit","onChange","onBlur","values","defaultStrings","password","LoginPage","success","initialValues","validate","test","setSubmitting","setErrors","res","setItem","split","render","handleChange","handleBlur","handleSubmit","isSubmitting","LoginContainer","usernameLabel","usernamePlaceholder","nameLabel","namePlaceholder","termsLabel","RegisterPageWithTouchedErrors","terms","RegisterPage","formData","RegisterContainer","authReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","rootElement","document","getElementById","Error","ReactDOM","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.ac3234bf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const SHOW_NEWS_DETAIL = \"SHOW_NEWS_DETAIL\"\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = process.env.REACT_APP_BASE_URL; //  https://abc.xyz/\r\nconst apiUrl = process.env.REACT_APP_API_URL; // https://abc.xyz/api/v2/\r\n\r\nexport async function get(url) {\r\n    const result = {};\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        result.data = response.data;\r\n        result.statusCode = response.status || 500;\r\n        result.isSuccess = true;\r\n    } catch (err) {\r\n        result.statusCode = (err.response && err.response.status) || 500;\r\n        result.message = err.message || \"\";\r\n        result.isSuccess = false;\r\n    };\r\n    return result;\r\n}\r\n\r\n/**\r\n * Get data, add default base url\r\n * @param {} endPoint \r\n */\r\nexport async function baseGet(endPoint) {\r\n    const url = baseUrl + endPoint;\r\n    return await get(url);\r\n}\r\n\r\n/**\r\n * get data, added default api url\r\n * @param {*} endPoint \r\n */\r\nexport async function apiGet(endPoint) {\r\n    const url = apiUrl + endPoint;\r\n    return await get(url);\r\n}","import { dispatch } from \"react-redux\";\r\n\r\nimport * as types from '../constants/ActionTypes';\r\n\r\nimport { apiGet } from \"../util/ApiUtil\";\r\n\r\nexport const REQUEST_NEWS_RELOAD = \"REQUEST_NEWS_RELOAD_TRENDING\";\r\nexport const RECEIVE_NEWS_RELOAD = \"RECEIVE_NEWS_RELOAD_TRENDING\";\r\n\r\nexport const REQUEST_NEWS_LOAD_MORE = \"REQUEST_NEWS_LOAD_MORE_TRENDING\";\r\nexport const RECEIVE_NEWS_LOAD_MORE = \"RECEIVE_NEWS_LOAD_MORE_TRENDING\";\r\n\r\n\r\nfunction requestNewsListReload() {\r\n    return {\r\n        type: REQUEST_NEWS_RELOAD\r\n    }\r\n}\r\n\r\nfunction requestNewsListLoadMore() {\r\n    return {\r\n        type: REQUEST_NEWS_LOAD_MORE\r\n    }\r\n}\r\n\r\nfunction receiveNewsListReload(list = [], statusCode, message) {\r\n    return {\r\n        type: RECEIVE_NEWS_RELOAD,\r\n        list,\r\n        statusCode,\r\n        message\r\n    }\r\n}\r\n\r\nfunction receiveNewsListLoadMore(page = 1, list = [], statusCode, message) {\r\n    return {\r\n        type: RECEIVE_NEWS_LOAD_MORE,\r\n        page,\r\n        list,\r\n        statusCode,\r\n        message\r\n    }\r\n}\r\n\r\nexport function loadNewsDetail(id) {\r\n    return {\r\n        type: types.SHOW_NEWS_DETAIL,\r\n        id\r\n    }\r\n}\r\n\r\nexport function fetchNewsList(page) {\r\n    if (!page || page === 0) {\r\n        // this is reload\r\n        return dispatch => {\r\n            // mark as refreshing\r\n            dispatch(requestNewsListReload())\r\n            return apiGet(\"/news\")\r\n                .then(result => {\r\n                    if (result.isSuccess) {\r\n\r\n                        dispatch(receiveNewsListReload(result.data, result.statusCode, result.message))\r\n                    } else {\r\n                        // try 1 more time\r\n                        apiGet(\"/news\").then(result2 => dispatch(receiveNewsListReload(result.data, result.statusCode, result.message)));\r\n                    }\r\n                });\r\n        }\r\n    } else {\r\n        // this is load more\r\n        return dispatch => {\r\n            dispatch(requestNewsListLoadMore())\r\n            return apiGet(\"/news?page=\" + (page + 1)).then(result => dispatch(receiveNewsListLoadMore(page + 1, result.data, result.statusCode, result.message)));\r\n        }\r\n    }\r\n}\r\n\r\n","import { SHOW_NEWS_DETAIL } from '../constants/ActionTypes';\r\nimport { RECEIVE_NEWS_LOAD_MORE, RECEIVE_NEWS_RELOAD, REQUEST_NEWS_LOAD_MORE, REQUEST_NEWS_RELOAD } from \"../actions/TrendingFeedsAction\";\r\n\r\nconst initalState = {\r\n    list: [],\r\n    page: 1,\r\n    isFetching: false,\r\n    hasMore: true,\r\n    statusCode: 0,\r\n    message: \"\"\r\n}\r\n\r\nexport default function trendingFeedsReducer(state = initalState, action) {\r\n    console.log(action.type)\r\n\r\n    switch (action.type) {\r\n        case RECEIVE_NEWS_RELOAD:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                page: 1,\r\n                hasMore: action.list && action.list.length > 0,\r\n                list: [...action.list],\r\n                statusCode: action.statusCode,\r\n                message: action.message\r\n            }\r\n\r\n        case RECEIVE_NEWS_LOAD_MORE:\r\n            console.log(\"state: \");\r\n            console.log(state);\r\n            console.log(\"list: \");\r\n            console.log(action.list);\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                page: state.page + 1,\r\n                hasMore: action.list && action.list.length > 0,\r\n                list: [...state.list, ...action.list],\r\n                statusCode: action.statusCode,\r\n                message: action.message\r\n            }\r\n\r\n        case REQUEST_NEWS_LOAD_MORE:\r\n        case REQUEST_NEWS_RELOAD:\r\n            return Object.assign({}, state, {\r\n                isFetching: true\r\n            })\r\n\r\n        case SHOW_NEWS_DETAIL:\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import { dispatch } from \"react-redux\";\r\n\r\nimport * as types from '../constants/ActionTypes';\r\n\r\nimport { apiGet } from \"../util/ApiUtil\";\r\n\r\n\r\nexport const REQUEST_NEWS_RELOAD = \"REQUEST_NEWS_RELOAD_HEADLINES\";\r\nexport const RECEIVE_NEWS_RELOAD = \"RECEIVE_NEWS_RELOAD_HEADLINES\";\r\n\r\nexport const REQUEST_NEWS_LOAD_MORE = \"REQUEST_NEWS_LOAD_MORE_HEADLINES\";\r\nexport const RECEIVE_NEWS_LOAD_MORE = \"RECEIVE_NEWS_LOAD_MORE_HEADLINES\";\r\n\r\n\r\nfunction requestNewsListReload() {\r\n    return {\r\n        type: REQUEST_NEWS_RELOAD\r\n    }\r\n}\r\n\r\nfunction requestNewsListLoadMore() {\r\n    return {\r\n        type: REQUEST_NEWS_LOAD_MORE\r\n    }\r\n}\r\n\r\nfunction receiveNewsListReload(list = [], statusCode, message) {\r\n    return {\r\n        type: RECEIVE_NEWS_RELOAD,\r\n        list,\r\n        statusCode,\r\n        message\r\n    }\r\n}\r\n\r\nfunction receiveNewsListLoadMore(page = 1, list = [], statusCode, message) {\r\n    return {\r\n        type: RECEIVE_NEWS_LOAD_MORE,\r\n        page,\r\n        list,\r\n        statusCode,\r\n        message\r\n    }\r\n}\r\n\r\nexport function loadNewsDetail(id) {\r\n    return {\r\n        type: types.SHOW_NEWS_DETAIL,\r\n        id\r\n    }\r\n}\r\n\r\nexport function fetchNewsList(page) {\r\n    if (!page || page == 0) {\r\n        return dispatch => {\r\n            // mark as refreshing\r\n            dispatch(requestNewsListReload())\r\n\r\n            return apiGet(\"/news/feed/similarity\")\r\n                .then(result => {\r\n                    if (result.isSuccess) {\r\n                        dispatch(receiveNewsListReload(result.data, result.statusCode, result.message));\r\n                    } else {\r\n                        // try 1 more time\r\n                        apiGet(\"/news/feed/similarity\").then(result2 => dispatch(receiveNewsListReload(result2.data, result2.statusCode, result2.message)));\r\n                    }\r\n                })\r\n            };\r\n        } else {\r\n            return dispatch => {\r\n                // mark as refreshing\r\n                dispatch(requestNewsListLoadMore())\r\n                return apiGet(\"/news/feed/similarity?page=\" + (page + 1)).then(result => dispatch(receiveNewsListLoadMore(page + 1, result.data, result.statusCode, result.message)));\r\n            }\r\n        }\r\n    }\r\n\r\n","import { SHOW_NEWS_DETAIL } from '../constants/ActionTypes';\r\nimport { RECEIVE_NEWS_LOAD_MORE, RECEIVE_NEWS_RELOAD, REQUEST_NEWS_LOAD_MORE, REQUEST_NEWS_RELOAD } from \"../actions/HeadlinesFeedsAction\";\r\n\r\nconst initalState = {\r\n    list: [],\r\n    page: 1,\r\n    isFetching: false,\r\n    hasMore: true,\r\n    statusCode: 0,\r\n    message: \"\"\r\n}\r\n\r\nexport default function headlinesFeedsReducer(state = initalState, action) {\r\n    console.log(action.type)\r\n\r\n    switch (action.type) {\r\n            case RECEIVE_NEWS_RELOAD:\r\n                return {\r\n                    ...state,\r\n                    isFetching: false,\r\n                    page: 1,\r\n                    hasMore: action.list && action.list.length > 0,\r\n                    list: [...action.list],\r\n                    statusCode: action.statusCode,\r\n                    message: action.message\r\n                }\r\n                \r\n            case RECEIVE_NEWS_LOAD_MORE:\r\n                console.log(\"state: \");\r\n                console.log(state);\r\n                console.log(\"list: \");\r\n                console.log(action.list);\r\n                return {\r\n                    ...state,\r\n                    isFetching: false,\r\n                    page: state.page + 1,\r\n                    hasMore: action.list && action.list.length > 0,\r\n                    list: [...state.list, ...action.list],\r\n                    statusCode: action.statusCode,\r\n                    message: action.message\r\n                }\r\n\r\n            case REQUEST_NEWS_LOAD_MORE:\r\n            case REQUEST_NEWS_RELOAD:\r\n                return Object.assign({}, state, {\r\n                    isFetching: true\r\n                })\r\n                \r\n        case SHOW_NEWS_DETAIL:\r\n        default:\r\n            return state;\r\n                \r\n    }\r\n}","import { baseGet } from \"../util/ApiUtil\";\r\n\r\n\r\nexport const REQUEST_DATA_MAPS = \"REQUEST_DATA_MAPS\";\r\nexport const RECEIVE_DATA_MAPS = \"RECEIVE_DATA_MAPS\";\r\nexport const SET_DATA_MARKERS = \"SET_DATA_MARKERS\";\r\n\r\nfunction requestDataMaps() {\r\n    return {\r\n        type: REQUEST_DATA_MAPS\r\n    }\r\n}\r\n\r\nfunction receiveDataMaps(data = []) {\r\n    return {\r\n        type: RECEIVE_DATA_MAPS,\r\n        data\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getDataMaps() {\r\n    return dispatch => {\r\n        dispatch(requestDataMaps())\r\n        return baseGet(\"/api/statistics/map\").then(req => dispatch(receiveDataMaps(req.data)));\r\n    }\r\n}\r\n\r\nexport function setMarkers(markers) {\r\n    return dispatch => {\r\n        dispatch(requestDataMaps());\r\n        return dispatch(receiveDataMaps(markers));\r\n    }\r\n}\r\n\r\n","import { SHOW_NEWS_DETAIL } from '../constants/ActionTypes';\r\nimport { RECEIVE_DATA_MAPS, REQUEST_DATA_MAPS } from \"../actions/MapsAction\";\r\n\r\nconst initalState = {\r\n    data: [],\r\n    isLoading: false\r\n}\r\n\r\nexport default function DataMapsReducer(state = initalState, action) {\r\n    console.log(action.type)\r\n\r\n    switch (action.type) {\r\n        case RECEIVE_DATA_MAPS:\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n                isLoading: false\r\n\r\n            }\r\n\r\n        case REQUEST_DATA_MAPS:\r\n            return { ...state, isLoading: false }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import jwt_decode from 'jwt-decode';\r\n\r\nexport const jwtDecode=(token) => {\r\n    let decoded;\r\n    if(token) {\r\n        try {\r\n            decoded = jwt_decode(token);\r\n        } catch(error) {}\r\n    }\r\n    return decoded;\r\n}","import axios from 'axios';\r\nimport { jwtDecode } from '../util/AuthUtil';\r\n\r\nexport const RECEIVE_LOGIN = \"RECEIVE_LOGIN\";\r\nexport const RECEIVE_REGISTER = \"RECEIVE_REGISTER\";\r\n\r\nexport const REQUEST_LOGIN = \"REQUEST_LOGIN\";\r\nexport const REQUEST_REGISTER = \"REQUEST_REGISTER\";\r\n\r\nexport const REQUEST_SAVED_USER = \"REQUEST_SAVED_USER\";\r\nexport const RECEIVE_SAVED_USER = \"RECEIVE_SAVED_USER\";\r\n\r\nexport const REQUEST_LOGOUT = \"REQUEST_LOGOUT\";\r\nexport const RECEIVE_LOGOUT = \"RECEIVE_LOGOUT\";\r\n\r\n\r\nexport const postUserLogin = user => {\r\n  return dispatch => {\r\n    dispatch(requestLogin())\r\n    return axios.post(process.env.REACT_APP_BASE_URL + \"/auth/login\", { email: user.email, password: user.password })\r\n      .then(res => {\r\n        let data = res.data\r\n        if (!data) return;\r\n        if (!data.success) {\r\n          console.log(data.message);\r\n          dispatch(receiveRegister({message: data.message}))\r\n        } else {\r\n          localStorage.setItem(\"token\", data.token.split(\" \")[1])\r\n          dispatch(receiveLogin(data))\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        if (err && err.response && err.response.data) {\r\n          dispatch(receiveLogin(err.response.data))\r\n        } else {\r\n          dispatch(receiveLogin({ message: err.message }))\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport const postUserRegister = formData => {\r\n  return dispatch => {\r\n    dispatch(requestRegister())\r\n    var user = {\r\n      username: formData.username,\r\n      password: formData.password,\r\n      email: formData.email,\r\n      name: formData.name\r\n    }\r\n    return axios.post(process.env.REACT_APP_BASE_URL + \"/auth/register\", user)\r\n      .then(res => {\r\n        let data = res.data\r\n        if (!data) return;\r\n        if (!data.success) {\r\n          console.log(data.message);\r\n          dispatch(receiveRegister({message: data.message}))\r\n        } else {\r\n          localStorage.setItem(\"token\", data.token)\r\n          dispatch(receiveRegister(data))\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        if (err && err.response && err.response.data) {\r\n          dispatch(receiveRegister(err.response.data))\r\n        } else {\r\n          dispatch(receiveRegister({ message: err.message }))\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport const loadSavedUser = () => {\r\n  return dispatch => {\r\n\r\n    dispatch(requestSavedUser())\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    var user = jwtDecode(token);\r\n    dispatch(receiveSavedUser(user))\r\n\r\n  }\r\n}\r\n\r\nexport const LogoutUser = () => {\r\n  return dispatch => {\r\n    dispatch(requestLogout())\r\n    localStorage.removeItem(\"token\");\r\n    dispatch(receiveLogout())\r\n\r\n\r\n  }\r\n}\r\n\r\nconst requestLogin = () => ({\r\n  type: REQUEST_LOGIN\r\n})\r\n\r\nconst requestRegister = () => ({\r\n  type: RECEIVE_REGISTER\r\n})\r\n\r\nconst receiveLogin = userObj => ({\r\n  type: RECEIVE_LOGIN,\r\n  payload: userObj\r\n})\r\n\r\nconst receiveRegister = userObj => ({\r\n  type: RECEIVE_LOGIN,\r\n  payload: userObj\r\n})\r\n\r\nconst requestSavedUser = () => ({\r\n  type: REQUEST_SAVED_USER\r\n})\r\n\r\nconst receiveSavedUser = userObj => ({\r\n  type: RECEIVE_SAVED_USER,\r\n  payload: userObj\r\n})\r\n\r\n\r\nconst requestLogout = () => ({\r\n  type: REQUEST_LOGOUT,\r\n\r\n})\r\n\r\nconst receiveLogout = () => ({\r\n  type: RECEIVE_LOGOUT,\r\n\r\n})","import { REQUEST_LOGIN, REQUEST_REGISTER, RECEIVE_LOGIN, RECEIVE_REGISTER, REQUEST_SAVED_USER, RECEIVE_SAVED_USER, REQUEST_LOGOUT, RECEIVE_LOGOUT } from '../actions/AuthAction'\r\nimport { jwtDecode } from '../util/AuthUtil';\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nlet user = jwtDecode(token);\r\n\r\nconst initialState = {\r\n  authData:   user && user.name && user.email && user.username ?{user } : undefined,\r\n  isSuccess: true,\r\n  isFetching: false,\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case REQUEST_LOGIN:\r\n    case REQUEST_REGISTER:\r\n      return { ...state, isFetching: true }\r\n    case RECEIVE_LOGIN:\r\n      return { ...state, isFetching: false, authData: action.payload }\r\n    case RECEIVE_REGISTER:\r\n      return { ...state, isFetching: false, authData: action.payload }\r\n    case RECEIVE_SAVED_USER:\r\n      const authData = action.payload ? { user: action.payload } : state.authData;\r\n      return { ...state, isFetching: false, authData: authData }\r\n    case REQUEST_SAVED_USER:\r\n      return state;\r\n    case RECEIVE_LOGOUT:\r\n      state.authData = null\r\n      state.isSuccess = false\r\n      return state;\r\n    case REQUEST_LOGOUT:\r\n      state.authData = null\r\n      state.isSuccess = false\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { apiGet } from \"../util/ApiUtil\";\r\n\r\n\r\nexport const REQUEST_BRAND_INFO = \"REQUEST_BRAND_INFO\";\r\nexport const RECEIVE_BRAND_INFO = \"RECEIVE_BRAND_INFO\";\r\nexport const REQUEST_SITE_VISIBILITY = \"REQUEST_SITE_VISIBILITY\";\r\nexport const RECEIVE_SITE_VISIBILITY = \"RECEIVE_SITE_VISIBILITY\";\r\n\r\nfunction requestBrandInfo() {\r\n    return {\r\n        type: REQUEST_BRAND_INFO\r\n    }\r\n}\r\n\r\nfunction receiveBrandInfo(data = {}) {\r\n    return {\r\n        type: RECEIVE_BRAND_INFO,\r\n        data\r\n    }\r\n}\r\n\r\nfunction requestSiteVisibility() {\r\n    return {\r\n        type: REQUEST_SITE_VISIBILITY\r\n    }\r\n}\r\n\r\nfunction receiveSiteVisibility(showHeader = true, showFooter = true) {\r\n    return {\r\n        type: RECEIVE_SITE_VISIBILITY,\r\n        showHeader,\r\n        showFooter\r\n    }\r\n}\r\n\r\nexport function getBrandInfo() {\r\n    return dispatch => {\r\n        dispatch(requestBrandInfo())\r\n        return apiGet(\"/info/brand\").then(req => dispatch(receiveBrandInfo(req.data)));\r\n    }\r\n}\r\n\r\nexport function setSiteVisibility(showHeader = true, showFooter = true) {\r\n    return dispatch => {\r\n        return dispatch(receiveSiteVisibility(showFooter, showFooter));\r\n    }\r\n}","import { RECEIVE_BRAND_INFO, RECEIVE_SITE_VISIBILITY } from \"actions/SiteWrapperAction\";\r\n\r\nconst initalState = {\r\n    showFooter: true,\r\n    showHeader: true,\r\n    brandLogo: null,\r\n    brandName: \"Tin địa phương\",\r\n    subBrandName: \"Quận 9\",\r\n    isFetching: false\r\n}\r\n\r\nexport default function siteWrapperReducer(state = initalState, action) {\r\n\r\n    switch (action.type) {\r\n        case RECEIVE_BRAND_INFO:\r\n            return {\r\n                ...state,\r\n            }\r\n        case RECEIVE_SITE_VISIBILITY:\r\n            return {\r\n                ...state,\r\n                showHeader: action.showHeader || state.showHeader,\r\n                showFooter: action.showFooter || state.showFooter,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport trendingFeedsReducer from './trendingFeedsReducer';\r\nimport headlinesFeedsReducer from './headlinesFeedsReducer';\r\nimport mapsReducer from './mapsReducer';\r\nimport authReducer from './authReducer';\r\nimport siteWrapperReducer from './siteWrapperReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    trendingFeedsReducer,\r\n    headlinesFeedsReducer,\r\n    mapsReducer,\r\n    authReducer,\r\n    siteWrapperReducer\r\n});\r\n\r\nexport default rootReducer;","import * as React from \"react\";\r\nimport axios from 'axios'\r\nimport { Redirect } from \"react-router-dom\";\r\nexport default class ViewDetailRedirect extends React.Component {\r\n    state = {\r\n        url: null,\r\n    };\r\n\r\n    componentWillMount() {\r\n        const { id } = this.props.params.id;\r\n        axios.post(\"server\", { id }).then(\r\n            result => {\r\n                this._asyncRequest = null;\r\n                this.setState({ url: result.url });\r\n            }\r\n        ).catch((err)=>{})\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     if (this._asyncRequest) {\r\n    //         this._asyncRequest.cancel();\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        const url = this.url;\r\n        const redirectUrl =\"link\"\r\n        return <Redirect url={url||redirectUrl}></Redirect>\r\n    }\r\n    \r\n\r\n    // async render() {\r\n    //     const { id } = this.props.match.params\r\n    //     return (\r\n    //         <div>\r\n    //             {{getRedirect(id)}}\r\n    //         </div>\r\n    //     )\r\n\r\n    // }\r\n\r\n    // getRedirect = async (id)=> {\r\n    //     try {\r\n    //         let result = await axios.post(\"server\", { id })\r\n    //         if (result && result.url) {\r\n    //             return <Redirect url={result.url} />\r\n    //         }\r\n    //     }\r\n    //     catch { }\r\n    //     return <p>Redirecting to 404 page...</p>\r\n    // }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nfunction openInNewTab(url) {\r\n    var win = window.open(url, '_blank');\r\n    win.focus();\r\n}\r\n\r\n","import { string } from \"prop-types\";\r\n// @flow\r\nimport * as React from \"react\";\r\nimport { LoaderDots } from '@thumbtack/thumbprint-react';\r\n\r\n\r\ntype Props = {|\r\n+href ?: string,\r\n    +src ?: string,\r\n    +alt ?: string,\r\n    +title ?: string,\r\n    +description ?: string\r\n        |};\r\nclass AliLogo extends React.PureComponent {\r\n    render() {\r\n        const isFetching = this.props.isFetching || false;\r\n        return (\r\n            <a className=\"header-brand nav-link pr-0 leading-none\" href={this.props.href}>\r\n                <img src={this.props.src} className=\"header-brand-img\" alt={this.props.alt} />\r\n                <span className=\"m1-2 d-lg-block\">\r\n                    <span className=\"text-default font-weight-bold\">\r\n                        {this.props.title}\r\n                    </span>\r\n                    <span className=\"sub-branding layered\">\r\n                        {!isFetching ?\r\n                            <small className=\"text-blue d-block mt-1 dt\" style={{ fontSize: \"1rem\" }}>\r\n                                {this.props.description}\r\n                            </small> :\r\n                            <span className=\"sub-branding-loader\" ><LoaderDots size=\"small\" /></span>}\r\n                    </span>\r\n                </span>\r\n            </a>)\r\n    }\r\n}\r\n\r\nexport default AliLogo;","import * as React from \"react\";\r\nimport AliLogo from \"./AliLogo\";\r\nimport { AccountDropdown, Container, Notification } from \"tabler-react\";\r\n\r\nconst AliHeader = ({\r\n    children,\r\n    href,\r\n    align,\r\n    imageURL,\r\n    alt,\r\n    title,\r\n    description,\r\n    isFetching,\r\n    notificationsTray: notificationsTrayFromProps,\r\n    accountDropdown: accountDropdownFromProps,\r\n    navItems,\r\n    onMenuToggleClick,\r\n}) => {\r\n\r\n    const notificationsTray = notificationsTrayFromProps &&\r\n        React.createElement(Notification.Tray, notificationsTrayFromProps);\r\n\r\n    const accountDropdown = accountDropdownFromProps &&\r\n        React.createElement(AccountDropdown, accountDropdownFromProps);\r\n\r\n    return (\r\n        <div className=\"header py-4\">\r\n            <Container className={align}>\r\n                <div className=\"d-flex\">\r\n                    {children || (\r\n                        <React.Fragment>\r\n                            <AliLogo href={href} alt={alt} src={imageURL} title={title} description={description} isFetching={isFetching} />\r\n                            <div className=\"d-flex order-lg-2 ml-auto\">\r\n                                {navItems}\r\n                                {notificationsTray}\r\n                                {accountDropdown}\r\n                            </div>\r\n                            <a\r\n                                className=\"header-toggler d-lg-none ml-3 ml-lg-0\"\r\n                                onClick={onMenuToggleClick}\r\n                            >\r\n                                <span className=\"header-toggler-icon\" />\r\n                            </a>\r\n                        </React.Fragment>\r\n                    )}\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nAliHeader.displayName = \"Ali.Header\"\r\nexport default AliHeader;","import * as React from \"react\";\r\nimport { Page, Site, Nav } from \"tabler-react\";\r\n\r\nimport AliHeader from \"./AliHeader\";\r\n\r\n\r\nclass InnerSiteWrapper extends React.PureComponent {\r\n    static displayName = \"AliWrapper\";\r\n\r\n    state = {\r\n        collapseMobileMenu: true,\r\n    }\r\n\r\n    handleCollapseMobileMenu = () => {\r\n        this.setState(s => ({ collapseMobileMenu: !s.collapseMobileMenu }))\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            headerProps,\r\n            navProps,\r\n            footerProps,\r\n            children,\r\n            routerContextComponentType,\r\n        } = this.props;\r\n\r\n        const headerPropsWithToggleClick = {\r\n            ...headerProps,\r\n            onMenuToggleClick: this.handleCollapseMobileMenu,\r\n        };\r\n\r\n        const header = React.createElement(AliHeader, headerPropsWithToggleClick);\r\n        const navPropsWithCollapse = {\r\n            ...navProps,\r\n            collapse: this.state.collapseMobileMenu,\r\n            routerContextComponentType: routerContextComponentType,\r\n        };\r\n\r\n        const nav = React.createElement(Site.Nav, navPropsWithCollapse);\r\n\r\n        const footer = React.createElement(Site.Footer, footerProps);\r\n        return (\r\n            <Page>\r\n                <Page.Main>\r\n                    {header}\r\n                    {nav}\r\n                    {children}\r\n                </Page.Main>\r\n                {footer}\r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InnerSiteWrapper;","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nimport {\r\n  RouterContextProvider,\r\n} from \"tabler-react\";\r\n\r\nimport { LogoutUser } from \"../actions/AuthAction\";\r\nimport InnerSiteWrapper from \"./base/site/InnerSiteWrapper.react\";\r\nconst navBarItems = [\r\n  {\r\n    value: \"Trang chủ\",\r\n    to: \"/\",\r\n    icon: \"home\",\r\n    LinkComponent: withRouter(NavLink),\r\n    useExact: true,\r\n  },\r\n  {\r\n    value: \"Xu hướng\",\r\n    icon: \"trending-up\",\r\n    to: \"/trendings\",\r\n    LinkComponent: withRouter(NavLink),\r\n    useExact: true,\r\n  },\r\n  {\r\n    value: \"Bản đồ tin tức\",\r\n    icon: \"map-pin\",\r\n    to: \"/maps\",\r\n    LinkComponent: withRouter(NavLink),\r\n    useExact: true,\r\n  },\r\n  {\r\n    value: \"Quản trị (dành cho quản trị viên)\",\r\n    icon: \"grid\",\r\n\r\n    subItems: [\r\n      {\r\n        value: \"Tổng quan\", to: \"/management\", LinkComponent: withRouter(NavLink),\r\n      },\r\n      {\r\n        value: \"Thống kê\", to: \"/management/analytics\", LinkComponent: withRouter(NavLink),\r\n      },\r\n      {\r\n        value: \"Thiết lập\", to: \"/management/setting\", LinkComponent: withRouter(NavLink)\r\n      },\r\n\r\n    ],\r\n  }\r\n\r\n\r\n  /* ,\r\n  {\r\n    value: \"Coronavirus\",\r\n    icon: \"shield\",\r\n    subItems: [\r\n      { value: \"Maps\", to: \"/maps\", LinkComponent: withRouter(NavLink) },\r\n      { value: \"Icons\", to: \"/icons\", LinkComponent: withRouter(NavLink) },\r\n      { value: \"Store\", to: \"/store\", LinkComponent: withRouter(NavLink) },\r\n      { value: \"Blog\", to: \"/blog\", LinkComponent: withRouter(NavLink) },\r\n    ],\r\n  } */\r\n];\r\n\r\n\r\nclass SiteWrapper extends React.Component {\r\n\r\n  state = {\r\n    notificationsObjects: [\r\n      /*  {\r\n         unread: true,\r\n         avatarURL: \"demo/faces/male/41.jpg\",\r\n         message: (\r\n           <React.Fragment>\r\n             Hello1\r\n           </React.Fragment>\r\n         ),\r\n         time: \"10 minutes ago\",\r\n       },\r\n       {\r\n         unread: true,\r\n         avatarURL: \"demo/faces/female/1.jpg\",\r\n         message: (\r\n           <React.Fragment>\r\n             hello 2\r\n           </React.Fragment>\r\n         ),\r\n         time: \"1 hour ago\",\r\n       },\r\n       {\r\n         unread: false,\r\n         avatarURL: \"demo/faces/female/18.jpg\",\r\n         message: (\r\n           <React.Fragment>\r\n             hello3\r\n           </React.Fragment>\r\n         ),\r\n         time: \"2 hours ago\",\r\n       }, */\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    const { dispatch, currentUser, siteWrapperReducer } = this.props;\r\n\r\n\r\n    const actionLogout = () => {\r\n      dispatch(LogoutUser())\r\n    }\r\n\r\n\r\n    const accountDropdownPropsFunc = (user) => {\r\n      if (user) {\r\n        return {\r\n          avatarURL: \"https://s120-ava-talk.zadn.vn/4/c/d/3/0/120/09f385d32d7677e9ff00099536a7d200.jpg\",\r\n          name: user.name,\r\n          description: \"Quận 9, Tp. Hcm\",\r\n          options: [\r\n            /*          { icon: \"user\", value: \"Profile\" },\r\n                     { icon: \"settings\", value: \"Settings\" },\r\n                     { icon: \"mail\", value: \"Inbox\", badge: \"6\" }, */\r\n            { icon: \"send\", value: \"dashboard\", active: user.role === 1, to: \"/dashboard\", LinkComponent: withRouter(NavLink), useExact: true },\r\n            { isDivider: true },\r\n            { icon: \"log-out\", value: <span onClick={actionLogout}>logout</span>, to: \"/\", LinkComponent: withRouter(NavLink), useExact: true },\r\n          ],\r\n        };\r\n      }\r\n      else {\r\n        return {\r\n          avatarURL: \"./images/default_avatar.jpg\",\r\n          name: \"Đăng nhập\",\r\n          options: [\r\n            { icon: \"user\", value: \"Đăng nhập\", to: \"#/login\", LinkComponent: withRouter(NavLink), useExact: true },\r\n            { isDivider: true },\r\n            { icon: \"user-plus\", value: \"Đăng ký\", to: \"#/register\", LinkComponent: withRouter(NavLink), useExact: true },\r\n          ]\r\n        };\r\n\r\n      }\r\n    }\r\n\r\n    const notificationsObjects = this.state.notificationsObjects || [];\r\n    const unreadCount = notificationsObjects.reduce(\r\n      (a, v) => a || v.unread,\r\n      false\r\n    );\r\n\r\n    let footerProps;\r\n    if (this.props.showFooter)\r\n      footerProps = {\r\n        /*     links: [\r\n              <a href=\"#\">First Link</a>,\r\n              <a href=\"#\">Second Link</a>,\r\n              <a href=\"#\">Third Link</a>,\r\n              <a href=\"#\">Fourth Link</a>,\r\n              <a href=\"#\">Five Link</a>,\r\n              <a href=\"#\">Sixth Link</a>,\r\n              <a href=\"#\">Seventh Link</a>,\r\n              <a href=\"#\">Eigth Link</a>,\r\n            ], */\r\n        /*  note:\r\n           \"Trang thuộc bản quyền Ali-Kit\", */\r\n        copyright: (\r\n          <React.Fragment>\r\n            Copyright © 2020\r\n            <a href=\".\"> Ali-Kit</a>\r\n          </React.Fragment>\r\n        ),\r\n        /*      nav: (\r\n               <React.Fragment>\r\n                 <Grid.Col auto={true}>\r\n                   <List className=\"list-inline list-inline-dots mb-0\">\r\n                     <List.Item className=\"list-inline-item\">\r\n                       <a href=\"./docs/index.html\">Documentation</a>\r\n                     </List.Item>\r\n                     <List.Item className=\"list-inline-item\">\r\n                       <a href=\"./faq.html\">FAQ</a>\r\n                     </List.Item>\r\n                   </List>\r\n                 </Grid.Col>\r\n               </React.Fragment>\r\n             ), */\r\n      }\r\n\r\n    return (\r\n      <InnerSiteWrapper\r\n        headerProps={{\r\n          href: \"/\",\r\n          alt: siteWrapperReducer && siteWrapperReducer.brandName ? siteWrapperReducer.brandName : \"Tin dia phuong\",\r\n          imageURL: siteWrapperReducer && siteWrapperReducer.brandLogo ? siteWrapperReducer.brandLogo : \"./images/local_news.svg\",\r\n          title: siteWrapperReducer && siteWrapperReducer.brandName ? siteWrapperReducer.brandName : \"Tin địa phương\",\r\n          description: siteWrapperReducer && siteWrapperReducer.subBrandName ? siteWrapperReducer.subBrandName : \"Quận 9\",\r\n\r\n          /*    notificationsTray: {\r\n               notificationsObjects,\r\n               markAllAsRead: () =>\r\n                 this.setState(\r\n                   () => ({\r\n                     notificationsObjects: this.state.notificationsObjects.map(\r\n                       v => ({ ...v, unread: false })\r\n                     ),\r\n                   }),\r\n                   () =>\r\n                     setTimeout(\r\n                       () =>\r\n                         this.setState({\r\n                           notificationsObjects: this.state.notificationsObjects.map(\r\n                             v => ({ ...v, unread: true })\r\n                           ),\r\n                         }),\r\n                       5000\r\n                     )\r\n                 ),\r\n               unread: unreadCount,\r\n             }, */\r\n          accountDropdown: accountDropdownPropsFunc(currentUser),\r\n\r\n        }}\r\n        navProps={{ itemsObjects: navBarItems }}\r\n        routerContextComponentType={withRouter(RouterContextProvider)}\r\n        footerProps={footerProps}>\r\n        {this.props.children}\r\n      </InnerSiteWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authReducer, siteWrapperReducer }) {\r\n  return {\r\n    authReducer,\r\n    siteWrapperReducer\r\n  }\r\n}\r\n\r\nexport const SiteWrapperContainer = connect(\r\n  mapStateToProps\r\n)(SiteWrapper);","\r\nfunction sourceLogo(name, image) {\r\n    return { name, image: \"/images/source_logos/\" + image };\r\n}\r\nconst sourceLogos = [\r\n    sourceLogo(\"tuoitre.vn\", \"tuoi_tre.webp\"),\r\n    sourceLogo(\"vnexpress.net\",\"vnexpress.webp\"),\r\n    sourceLogo(\"plo.vn\", \"phap_luat_online.webp\"),\r\n    sourceLogo(\"zingnews.vn\", \"zing.webp\"),\r\n    sourceLogo(\"vtc.vn\", \"vtc.webp\"),\r\n    sourceLogo(\"baotintuc.vn\", \"tin_tuc.jpg\"),\r\n    sourceLogo(\"nguoidothi.net.vn\", \"nguoi_do_thi.jpg\"),\r\n    sourceLogo(\"baophapluat.vn\", \"phap_luat_viet_nam.webp\"),\r\n    sourceLogo(\"vietnamplus.vn\", \"viet_nam_plus.jpg\"),\r\n    sourceLogo(\"thanhnien.vn\",\"thanhnien2.png\"),\r\n    sourceLogo(\"dantri.com.vn\",\"dantri.png\"),\r\n    sourceLogo(\"nld.com.vn\",\"nguoilaodong.jpg\"),\r\n    sourceLogo(\"anninhthudo.vn\",\"anninhthudo.png\"),\r\n    sourceLogo(\"baogiaothong.vn\",\"baogiaothong.png\"),\r\n    sourceLogo(\"vietnamnet.vn\",\"vietnamnet.png\"),\r\n    sourceLogo(\"tienphong.vn\",\"tienphong.png\")\r\n]\r\n\r\nconst defaultLogo = \"/images/source_logos/rss.jpg\";\r\n\r\nexport function findSourceLogo(name) {\r\n    const logos = sourceLogos.find(element => element.name === name);\r\n    if (logos) {\r\n        return logos.image\r\n    } else {\r\n        return defaultLogo;\r\n    }\r\n}","import moment from \"moment\";\r\nimport \"moment/locale/vi\";\r\n\r\nexport function momentCalendar(dateTime) {\r\n   return moment(dateTime).locale(\"vi\").calendar();\r\n}\r\n\r\nexport function momentFromNow(dateTime) {\r\n   return moment(dateTime).locale(\"vi\").fromNow();\r\n}","import * as React from \"react\";\r\nimport { render } from \"react-dom\";\r\nclass EmptyPageContent extends React.Component {\r\n    render() {\r\n        return (<div className=\"erb text-blue\">\r\n            <div className=\"wrapper\">\r\n                <h1>Hmm</h1>\r\n                <p>Máy chủ hiện không phản hồi, vui lòng thử lại lần nữa. </p>\r\n                <div className=\"buttons\">\r\n                    <a href=\"\" onClick={this.props.onButtonClick}>Thử lại</a>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default EmptyPageContent;","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchNewsList } from '../actions/TrendingFeedsAction';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { findSourceLogo } from '../util/ImageUtil';\r\nimport { momentCalendar, momentFromNow } from '../util/CommonUtil';\r\n\r\nimport {\r\n  Page,\r\n  Grid,\r\n  BlogCard,\r\n} from \"tabler-react\";\r\n\r\nimport EmptyPageContent from \"../components/Placeholder/ErrorPageContent\";\r\n\r\nclass TrendingFeedsPage extends React.Component {\r\n  componentDidMount() {\r\n    const dispatch = this.props.dispatch;\r\n    dispatch(fetchNewsList());\r\n  }\r\n\r\n  loadMoreData = () => {\r\n    const dispatch = this.props.dispatch;\r\n    let page = 1;\r\n    const trendingFeedsReducer = this.props.trendingFeedsReducer;\r\n\r\n    if (trendingFeedsReducer && trendingFeedsReducer.page) {\r\n      page = trendingFeedsReducer.page;\r\n    }\r\n\r\n    if (page < 1) {\r\n      page = 1;\r\n    }\r\n    dispatch(fetchNewsList(page));\r\n  }\r\n\r\n  render() {\r\n    const { trendingFeedsReducer } = this.props;\r\n    const newsList = [...(trendingFeedsReducer.list || [])];\r\n\r\n    const mainNews = [];\r\n    const moreNews = [];\r\n    if (newsList.length === 0) {\r\n      /* there are no item in response list */\r\n    } else if (newsList.length <= 7) {\r\n      /* no more than 7 items */\r\n      for (var i = 0; i < newsList.length; i++) {\r\n        let item = newsList[i];\r\n        mainNews.push(\r\n          <Grid.Col width={12}>\r\n            <BlogCard\r\n              imgSrc={item.thumbnail}\r\n              imgAlt={item.summary}\r\n              title={item.title}\r\n              description={item.summary}\r\n              profileHref={item.source.baseUrl}\r\n              postHref={item.source.url}\r\n              authorName={item.source.displayName}\r\n              avatarImgSrc={findSourceLogo(item.source.name)}\r\n              date={momentFromNow(item.publicationDate)}\r\n              iconName={\"arrow-right\"}\r\n            />\r\n          </Grid.Col>)\r\n      }\r\n\r\n    } else {\r\n      /* more than 7 items\r\n      \r\n      */\r\n      mainNews.push(\r\n        /* the biggest first item */\r\n        <Grid.Col width={12} lg={9} md={12}>\r\n          <BlogCard\r\n            imgSrc={newsList[0].thumbnail}\r\n            imgAlt={newsList[0].summary}\r\n            title={newsList[0].title}\r\n            description={newsList[0].summary}\r\n            postHref={newsList[0].source.url}\r\n            profileHref={newsList[0].source.baseUrl}\r\n            authorName={newsList[0].source.displayName}\r\n            avatarImgSrc={findSourceLogo(newsList[0].source.name)}\r\n            date={momentFromNow(newsList[0].publicationDate)}\r\n            iconName={\"arrow-right\"}\r\n          />\r\n        </Grid.Col>);\r\n\r\n      mainNews.push(\r\n        /* two items on the right */\r\n        <Grid.Col width={12} lg={3} md={12}>\r\n          <Grid.Row>\r\n            <Grid.Col width={12} lg={12} md={6}>\r\n              <BlogCard\r\n                imgSrc={newsList[1].thumbnail}\r\n                title={newsList[1].title}\r\n                //description={newsList[1].summary}\r\n                postHref={newsList[1].source.url}\r\n                profileHref={newsList[1].source.baseUrl}\r\n                authorName={newsList[1].source.displayName}\r\n                avatarImgSrc={findSourceLogo(newsList[1].source.name)}\r\n                date={momentFromNow(newsList[1].publicationDate)}\r\n                iconName={\"arrow-right\"}\r\n              />\r\n            </Grid.Col>\r\n            <Grid.Col width={12} lg={12} md={6}>\r\n              <BlogCard\r\n                imgSrc={newsList[2].thumbnail}\r\n                title={newsList[2].title}\r\n                //description={newsList[1].summary}\r\n                postHref={newsList[2].source.url}\r\n                profileHref={newsList[2].source.baseUrl}\r\n                authorName={newsList[2].source.displayName}\r\n                avatarImgSrc={findSourceLogo(newsList[2].source.name)}\r\n                date={momentFromNow(newsList[2].publicationDate)}\r\n                iconName={\"arrow-right\"}\r\n              />\r\n            </Grid.Col>\r\n          </Grid.Row>\r\n        </Grid.Col>\r\n      );\r\n\r\n      for (let i = 3; i < 7; i++) {\r\n        let item = newsList[i];\r\n        mainNews.push(\r\n          <Grid.Col width={12} lg={6} xl={3} md={6}>\r\n            <BlogCard\r\n              imgSrc={item.thumbnail}\r\n              // imgAlt={item.summary}\r\n              title={item.title}\r\n              description={item.summary}\r\n              postHref={item.source.url}\r\n              profileHref={item.source.baseUrl}\r\n              authorName={item.source.displayName}\r\n              avatarImgSrc={findSourceLogo(item.source.name)}\r\n              date={momentFromNow(item.publicationDate)}\r\n              iconName={\"arrow-right\"}\r\n            />\r\n          </Grid.Col>)\r\n      }\r\n\r\n      for (let i = 6; i < newsList.length; i++) {\r\n        let item = newsList[i];\r\n        moreNews.push(\r\n          <Grid.Col width={12}>\r\n            <BlogCard\r\n              aside\r\n              imgSrc={item.thumbnail}\r\n              imgAlt={item.summary}\r\n              postHref={item.source.url}\r\n              title={item.title}\r\n              description={item.summary}\r\n              profileHref={item.source.baseUrl}\r\n              authorName={item.source.displayName}\r\n              avatarImgSrc={findSourceLogo(item.source.name)}\r\n              date={momentCalendar(item.publicationDate)}\r\n              iconName={\"arrow-right\"}\r\n            />\r\n          </Grid.Col>\r\n        )\r\n      }\r\n\r\n    }\r\n\r\n    let endOfPage;\r\n    if (!trendingFeedsReducer.hasMore && newsList.length !== 0) {\r\n      endOfPage =\r\n        <div class=\"col-12 d-flex justify-content-center\">\r\n          <div class=\"text-muted bold\" style={{\r\n            backgroundColor: \"transparent\",\r\n            backgroundClip: \"unset\",\r\n            border: \"0\",\r\n            borderRadius: \"0\",\r\n            boxShadow: \"none\"\r\n          }}>Oop! Hết tin rồi, quay lại sau nhé!</div>\r\n        </div>\r\n    }\r\n    let body;\r\n    if (newsList.length !== 0) {\r\n      body = <Page.Content title=\"Xu huớng\">\r\n        <Grid.Row cards deck>\r\n          {mainNews}\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Page.Header title={\"Tin khác\"} />\r\n          <InfiniteScroll\r\n            dataLength={newsList.length}\r\n            next={this.loadMoreData}\r\n            hasMore={trendingFeedsReducer.hasMore}\r\n            loader={\r\n              <div class=\"col-12 d-flex justify-content-center\">\r\n                <div class=\"loader card\" style={{\r\n                  backgroundColor: \"transparent\",\r\n                  backgroundClip: \"unset\",\r\n                  border: \"0\",\r\n                  borderRadius: \"0\",\r\n                  boxShadow: \"none\"\r\n                }} />\r\n              </div>}>\r\n            {moreNews}\r\n            {endOfPage}\r\n          </InfiniteScroll>\r\n        </Grid.Row >\r\n      </Page.Content >\r\n    } else {\r\n      let emptyBody = (trendingFeedsReducer && trendingFeedsReducer.isFetching) ? (<div className=\"p-empty-body col-12 d-flex justify-content-center\">\r\n        <div className=\"loader card\" style={{\r\n          backgroundColor: \"transparent\",\r\n          backgroundClip: \"unset\",\r\n          border: \"0\",\r\n          borderRadius: \"0\",\r\n          boxShadow: \"none\"\r\n        }} />\r\n      </div>) : <EmptyPageContent onButtonClick={this.loadMoreData} />;\r\n      body = <Page.Content>\r\n        {emptyBody}\r\n      </Page.Content>\r\n    }\r\n\r\n    return body\r\n\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps({ trendingFeedsReducer, authReducer }) {\r\n  return {\r\n    trendingFeedsReducer,\r\n    authReducer\r\n  }\r\n}\r\n\r\n\r\nexport const TrendingFeedsContainer = connect(\r\n  mapStateToProps\r\n)(TrendingFeedsPage);","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport { Media, List } from \"tabler-react\";\r\n\r\ntype Props = {|\r\n    +children ?: React.Node,\r\n    +className ?: string,\r\n    +imageUrl ?: string,\r\n    +date ?: string,\r\n    +title ?: string,\r\n    +description ? : string,\r\n    +sourceImageUrl ?: string,\r\n    +sourceName ? : string,\r\n    +sourceUrl ?: string,\r\n    +sourceBaseUrl ?: string,\r\n    +subs: React.Node,\r\n    |};\r\n\r\nfunction SubHeadlineFeed({\r\n    className,\r\n    children,\r\n    imageUrl,\r\n    date,\r\n    title,\r\n    description,\r\n    sourceImageUrl,\r\n    sourceName,\r\n    sourceUrl,\r\n    sourceBaseUrl,\r\n    subs,\r\n}: Props): React.Node {\r\n    return (\r\n        <Media.ListItem className={className}>\r\n\r\n            <Media.Body className=\"subheadline\">\r\n                <span className=\"middle-dot-headline text-default text-bl\">⬤</span>\r\n                <span>\r\n                    <a href={sourceUrl} className=\"text-bl text-default txt-subheadline\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <strong>{title}</strong>\r\n                    </a>\r\n                    <div className=\"div-subheadline-source\">\r\n                        <a className=\"text-default text-bl txt-headline-source\" href={sourceBaseUrl}>{sourceName}</a>\r\n                        <span className=\"middle-dot-headline text-default text-bl\">⬤</span>\r\n                        <span className=\"text-default text-bl txt-headline-source\">{date}</span>\r\n                    </div>\r\n                </span>\r\n\r\n            </Media.Body>\r\n\r\n        </Media.ListItem>\r\n    );\r\n\r\n}\r\n\r\nexport default SubHeadlineFeed;","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport cn from \"classnames\";\r\nimport {  Media, List, Card } from \"tabler-react\";\r\nimport SubHeadlineFeed from \"./SubHeadlineFeed\";\r\n\r\ntype Props = {|\r\n+children ?: React.Node,\r\n    +className ?: string,\r\n    +imageUrl ?: string,\r\n    +date ?: string,\r\n    +title ?: string,\r\n    +description ? : string,\r\n    +sourceImageUrl ?: string,\r\n    +sourceName ? : string,\r\n    +sourceUrl ?: string,\r\n    +sourceBaseUrl ?: string,\r\n    +subs: React.Node,\r\n|}\r\n\r\nfunction HeadlineFeed({\r\n    className,\r\n    children,\r\n    imageUrl,\r\n    date,\r\n    title,\r\n    description,\r\n    sourceImageUrl,\r\n    sourceName,\r\n    sourceUrl,\r\n    sourceBaseUrl,\r\n    subs,\r\n}: Props): React.Node {\r\n    const classes = cn(\"p-5 no-outline\", className);\r\n    return (\r\n        <Card>\r\n            <Media className={classes}>\r\n                <img src={imageUrl} href={sourceUrl} className=\"img-headline img-center-crop \" target=\"_blank\" rel=\"noopener noreferrer\" />\r\n                <Media.Body>\r\n                    <Media.Heading>\r\n                        \r\n                        <div className=\"div-headline-source\">\r\n                            <img src={sourceImageUrl} href={sourceBaseUrl} className=\"img-headline-sourcelogo\" target=\"_blank\" rel=\"noopener noreferrer\" />\r\n                            <a className=\"text-default text-bl txt-headline-source\" href={sourceBaseUrl}>{sourceName}</a>\r\n                            <span className=\"middle-dot-headline text-default text-bl\">⬤</span>\r\n                            <span className=\"text-default text-bl txt-headline-source\">{date}</span>\r\n                        <a href={sourceUrl} className=\"h4 fe fe-activity float-right text-muted\"></a>\r\n\r\n                        </div>\r\n\r\n                        <a href={sourceUrl} className=\"text-default text-bl\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <h4 className=\"headline\">{title}</h4>\r\n                        </a>\r\n                    </Media.Heading>\r\n                    <div className=\"text-description-headline\">{description}</div>\r\n                    {subs && <Media.List>{subs}</Media.List>}\r\n                </Media.Body>\r\n            </Media>\r\n            </Card>\r\n    );\r\n}\r\n\r\n//HeadlineFeed.List = HeadlineFeedList;\r\nHeadlineFeed.Sub = SubHeadlineFeed;\r\n\r\nexport default HeadlineFeed;","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchNewsList } from '../actions/HeadlinesFeedsAction';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { findSourceLogo } from '../util/ImageUtil';\r\nimport { momentFromNow } from '../util/CommonUtil';\r\n\r\nimport {\r\n  Page,\r\n  Grid,\r\n  Card,\r\n} from \"tabler-react\";\r\n\r\nimport SiteWrapper from \"../components/SiteWrapper.react\";\r\nimport HeadlineFeed from \"../components/HeadlineFeed\";\r\nimport EmptyPageContent from \"../components/Placeholder/ErrorPageContent\";\r\n\r\nclass HeadlinesFeedsPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(fetchNewsList());\r\n  }\r\n\r\n  loadMoreData = () => {\r\n    const { dispatch } = this.props;\r\n    let page = 1;\r\n    const { headlinesFeedsReducer } = this.props;\r\n    if (headlinesFeedsReducer && headlinesFeedsReducer.page) {\r\n      page = headlinesFeedsReducer.page;\r\n    }\r\n\r\n    if (page < 1) {\r\n      page = 1;\r\n    }\r\n    dispatch(fetchNewsList(page));\r\n  }\r\n\r\n  render() {\r\n    const { headlinesFeedsReducer, authReducer } = this.props;\r\n    const newsList = [...headlinesFeedsReducer.list];\r\n    console.log(\"is Fetching = \" + headlinesFeedsReducer.isFetching);\r\n    console.log(\"statusCode = \" + headlinesFeedsReducer.statusCode);\r\n    console.log(\"message = \" + headlinesFeedsReducer.message);\r\n\r\n    const feeds = [];\r\n    if (newsList.length === 0) {\r\n      /* there are no item in response list */\r\n    } else {\r\n\r\n      for (var i = 0; i < newsList.length; i++) {\r\n        const items = newsList[i].data.slice(0, newsList.length > 5 ? 5 : newsList.length);\r\n        if (items.length === 0) {\r\n          break;\r\n        }\r\n        const headline = items.shift();\r\n        feeds.push(\r\n          <Grid.Col key={headline.source.url + headline.title} width={12}>\r\n\r\n            <HeadlineFeed\r\n              title={headline.title}\r\n              sourceUrl={headline.source.url}\r\n              description={headline.summary}\r\n              imageUrl={headline.thumbnail}\r\n              date={momentFromNow(headline.publicationDate)}\r\n              sourceBaseUrl={headline.source.baseUrl}\r\n              sourceName={headline.source.displayName}\r\n              sourceImageUrl={findSourceLogo(headline.source.name)}\r\n              subs={items && items.length > 0 &&\r\n                <React.Fragment>{\r\n                  items.map((item, index) => (\r\n                    <HeadlineFeed.Sub\r\n                      key={item.source.url + item.title}\r\n                      title={item.title}\r\n                      sourceUrl={item.source.url}\r\n                      sourceName={item.source.displayName}\r\n                      sourceBaseUrl={item.source.baseUrl}\r\n                      sourceImageUrl={findSourceLogo(item.source.name)}\r\n                      date={momentFromNow(item.publicationDate)}\r\n                    />))\r\n                }\r\n                </React.Fragment>\r\n              } />\r\n\r\n\r\n          </Grid.Col>\r\n        )\r\n      }\r\n    }\r\n\r\n    let endOfPage;\r\n    if (!headlinesFeedsReducer.hasMore && newsList.length !== 0) {\r\n      endOfPage =\r\n        <div class=\"col-12 d-flex justify-content-center\">\r\n          <div class=\"text-muted bold\" style={{\r\n            backgroundColor: \"transparent\",\r\n            backgroundClip: \"unset\",\r\n            border: \"0\",\r\n            borderRadius: \"0\",\r\n            boxShadow: \"none\"\r\n          }}>Oop! Hết tin rồi, quay lại sau nhé!</div>\r\n        </div>\r\n    }\r\n\r\n    let body;\r\n    if (newsList.length !== 0) {\r\n      body = <Page.Content title=\"Tin Chính\">\r\n        <InfiniteScroll\r\n          style={{\r\n            height: \"auto\", overflow: \"disabled\"\r\n          }}\r\n          dataLength={newsList.length}\r\n          next={this.loadMoreData}\r\n          hasMore={headlinesFeedsReducer.hasMore}\r\n          loader={\r\n            <div className=\"col-12 d-flex justify-content-center\">\r\n              <div className=\"loader card\" style={{\r\n                backgroundColor: \"transparent\",\r\n                backgroundClip: \"unset\",\r\n                border: \"0\",\r\n                borderRadius: \"0\",\r\n                boxShadow: \"none\"\r\n              }} />\r\n            </div>}>\r\n          <Grid.Row>\r\n\r\n            {feeds}\r\n          </Grid.Row>\r\n\r\n          {endOfPage}\r\n        </InfiniteScroll>\r\n      </Page.Content >\r\n    } else {\r\n      let emptyBody = (headlinesFeedsReducer && headlinesFeedsReducer.isFetching) ? (<div className=\"p-empty-body col-12 d-flex justify-content-center\">\r\n        <div className=\"loader card\" style={{\r\n          backgroundColor: \"transparent\",\r\n          backgroundClip: \"unset\",\r\n          border: \"0\",\r\n          borderRadius: \"0\",\r\n          boxShadow: \"none\"\r\n        }} />\r\n      </div>) : <EmptyPageContent onButtonClick={this.loadMoreData} />;\r\n      body = <Page.Content>\r\n        {emptyBody}\r\n      </Page.Content>\r\n    }\r\n\r\n    let user = authReducer && authReducer.authData && authReducer.authData.user ? authReducer.authData.user : undefined;\r\n    return body\r\n\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ headlinesFeedsReducer, authReducer }) {\r\n  return {\r\n    headlinesFeedsReducer,\r\n    authReducer\r\n  }\r\n}\r\n\r\nexport const HeadlinesFeedsContainer = connect(\r\n  mapStateToProps\r\n)(HeadlinesFeedsPage);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Route } from \"react-router-dom\";\r\n\r\nclass OverviewPage extends React.PureComponent {\r\n    render() {\r\n        const match = this.props.match;\r\n        return <div>\r\n            <div>\r\n                <h1>Overview</h1>\r\n                <hr />\r\n\r\n                <Route exact path={`${this.props.match.url}/analytics`} component={AnalyticsPage} />\r\n                <Route exact path={`${this.props.match.url}/`} component={HomePage} />\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authReducer }) {\r\n    return { authReducer }\r\n}\r\n\r\n\r\nclass HomePage extends React.PureComponent {\r\n    render() {\r\n        return <div>\r\n            <h2>Home</h2>\r\n\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nclass AnalyticsPage extends React.PureComponent {\r\n    render() {\r\n        return <div>\r\n            <div>\r\n                <h2>AnalyticsPage</h2>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport const OverviewContainer = connect(mapStateToProps)(OverviewPage);\r\n","export default [10.832171, 106.776889];","import React, { useCallback, useState, useRef, useEffect } from 'react';\r\nimport { useSelector, connect } from 'react-redux';\r\n\r\nimport { Marker, GoogleMap, useLoadScript, InfoWindow } from '@react-google-maps/api';\r\nimport usePlacesAutocomplete from \"use-places-autocomplete\";\r\nimport Location from '../constants/Location'\r\nimport MapStyle from '../constants/Map_style'\r\nimport { getDataMaps, setMarkers } from 'actions/MapsAction'\r\n\r\nconst libraries = ['places']\r\nconst mapContainerStyle = {\r\n  width: '100%',\r\n  height: '100vh'\r\n}\r\nconst center = {\r\n  lat: Location[0],\r\n  lng: Location[1]\r\n}\r\nconst titleStyle = {\r\n  position: \"absolute\",\r\n  zIndex: 100000\r\n}\r\n\r\nconst options = {\r\n  styles: MapStyle,\r\n  disableDefaultUI: true\r\n}\r\nfunction MapPage(props) {\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_MAP_KEY,\r\n    libraries,\r\n  })\r\n  const [selected, setSelected] = useState(null);\r\n  const dispatch = props.dispatch;\r\n\r\n  useEffect(() => {\r\n    // equal componentDidMount()\r\n    dispatch(getDataMaps());\r\n\r\n  }, []);\r\n\r\n  const mapsReducer = props.mapsReducer;\r\n  const markers = mapsReducer ? mapsReducer.data : [];\r\n\r\n  const onMapClick = useCallback(e => {\r\n    dispatch(setMarkers([...markers, { lat: e.latLng.lat(), lng: e.latLng.lng(), time: new Date() }]))\r\n  }, [])\r\n\r\n  const mapRef = useRef();\r\n  const onMapLoad = useCallback(map => mapRef.current = map, [])\r\n\r\n\r\n  if (loadError) return \"error loading map\"\r\n  if (!isLoaded) return \"loading map\"\r\n  return (\r\n    <React.Fragment>\r\n      <div style={titleStyle}>\r\n        <h1>Quận 9</h1>\r\n      </div>\r\n      <SearchPlace />\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={12}\r\n        center={center}\r\n        options={options}\r\n        onClick={onMapClick}\r\n        onLoad={onMapLoad}\r\n      >\r\n        {markers.map(marker => <Marker\r\n          key={marker && marker.time ? marker.time.toISOString() : \"\"}\r\n          position={{ lat: marker.lat, lng: marker.lng }}\r\n          icon={GetIcon(marker)}\r\n          onClick={() => setSelected(marker)}\r\n        />)}\r\n        {selected ? (<InfoWindow position={{ lat: selected.lat, lng: selected.lng }} onCloseClick={() => setSelected(null)}>\r\n          <div>\r\n            <h4>{selected.data.name}</h4>\r\n\r\n            <p>{selected.data.numOfArticles}</p>\r\n            <p>{selected.data.time.toISOString()}</p>\r\n            <button>xem chi tiết (\"/tags?place={selected.data.name}\")</button>\r\n          </div>\r\n        </InfoWindow>) : null}\r\n      </GoogleMap>\r\n    </React.Fragment>)\r\n}\r\n\r\nfunction SearchPlace() {\r\n  const { ready, value, suggestions: { status, data }, setValue, clearSuggesetions } = usePlacesAutocomplete({\r\n    requestOptions: {\r\n      location: { lat: () => Location[0], lng: () => Location[1] },\r\n      radius: 200 * 1000\r\n    }\r\n  })\r\n  return <div></div>// <ComboboxInput></ComboboxInput> ???\r\n}\r\nfunction GetIcon(marker) {\r\n  var numOfArticles = marker && marker.data && marker.data.numOfArticles ? marker.data.numOfArticles : 0;\r\n  var maxArticles = 10;\r\n  const maxSize = 50;\r\n  const minSize = 15;\r\n\r\n  const diameter = numOfArticles < maxArticles ?\r\n    (((numOfArticles / maxArticles) * (maxSize - minSize)) + minSize) :\r\n    maxSize\r\n\r\n\r\n  const result = {\r\n    url: '/circle.svg',\r\n    scaledSize: new window.google.maps.Size(diameter, diameter),\r\n    origin: new window.google.maps.Point(0, 0),\r\n    anchor: new window.google.maps.Point(diameter / 2, diameter / 2),\r\n  }\r\n  return result\r\n}\r\n\r\nfunction mapStateToProps({ mapsReducer }) {\r\n  return { mapsReducer };\r\n}\r\n\r\nconst MapsContainer = connect(\r\n  mapStateToProps\r\n)(MapPage)\r\n\r\nexport default MapsContainer;","export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"weight\": \"2.00\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#9c9c9c\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f2f2f2\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape.man_made\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": -100\r\n            },\r\n            {\r\n                \"lightness\": 45\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#eeeeee\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#7b7b7b\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"simplified\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#46bcec\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#c8d7d4\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#070707\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    }\r\n]","import * as React from \"react\";\r\nimport { DefaultErrorPage } from \"tabler-react\";\r\n\r\nfunction Error404Page({\r\n    title = \"404\",\r\n    subtitle = \"Oops... You just found an error page...\",\r\n    details = \"We are sorry but the page you have requested can not be found...\",\r\n    action,\r\n}) {\r\n    return (\r\n        <DefaultErrorPage\r\n            title={title}\r\n            subtitle={subtitle}\r\n            details={details}\r\n            action={action}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Error404Page;","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n    Page,\r\n    Site,\r\n    Grid,\r\n    StatsCard,\r\n    Card,\r\n    colors,\r\n    Table,\r\n    Icon,\r\n    Avatar,\r\n    StampCard,\r\n    Text,\r\n    Progress,\r\n    Dropdown,\r\n    Alert,\r\n    ProgressCard, Badge,\r\n    Button\r\n\r\n} from \"tabler-react\";\r\nimport C3Chart from \"react-c3js\";\r\n\r\nclass AnalyticsPage extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <Page.Content title=\"Dashboard\">\r\n                <Grid.Row cards={true}>\r\n                    <Grid.Col width={6} sm={4} lg={2}>\r\n                        <StatsCard layout={1} movement={6} total=\"43\" label=\"New Tickets\" />\r\n                    </Grid.Col>\r\n                    <Grid.Col width={6} sm={4} lg={2}>\r\n                        <StatsCard\r\n                            layout={1}\r\n                            movement={-3}\r\n                            total=\"17\"\r\n                            label=\"Closed Today\"\r\n                        />\r\n                    </Grid.Col>\r\n                    <Grid.Col width={6} sm={4} lg={2}>\r\n                        <StatsCard layout={1} movement={9} total=\"7\" label=\"New Replies\" />\r\n                    </Grid.Col>\r\n                    <Grid.Col width={6} sm={4} lg={2}>\r\n                        <StatsCard\r\n                            layout={1}\r\n                            movement={3}\r\n                            total=\"27.3k\"\r\n                            label=\"Followers\"\r\n                        />\r\n                    </Grid.Col>\r\n                    <Grid.Col width={6} sm={4} lg={2}>\r\n                        <StatsCard\r\n                            layout={1}\r\n                            movement={-2}\r\n                            total=\"$95\"\r\n                            label=\"Daily earnings\"\r\n                        />\r\n                    </Grid.Col>\r\n                    <Grid.Col width={6} sm={4} lg={2}>\r\n                        <StatsCard layout={1} movement={-1} total=\"621\" label=\"Products\" />\r\n                    </Grid.Col>\r\n                    <Grid.Col lg={6}>\r\n                        <Card>\r\n                            <Card.Header>\r\n                                <Card.Title>Development Activity</Card.Title>\r\n                            </Card.Header>\r\n                            <C3Chart\r\n                                style={{ height: \"10rem\" }}\r\n                                data={{\r\n                                    columns: [\r\n                                        // each columns data\r\n                                        [\"data1\", 0, 5, 1, 2, 7, 5, 6, 8, 24, 7, 12, 5, 6, 3, 2, 2, 6, 30, 10, 10, 15, 14, 47, 65, 55,],\r\n                                    ],\r\n                                    type: \"area\", // default type of chart\r\n                                    groups: [[\"data1\", \"data2\", \"data3\"]],\r\n                                    colors: {\r\n                                        data1: colors[\"blue\"],\r\n                                    },\r\n                                    names: {\r\n                                        // name of each serie\r\n                                        data1: \"Purchases\",\r\n                                    },\r\n                                }}\r\n                                axis={{\r\n                                    y: {\r\n                                        padding: {\r\n                                            bottom: 0,\r\n                                        },\r\n                                        show: false,\r\n                                        tick: {\r\n                                            outer: false,\r\n                                        },\r\n                                    },\r\n                                    x: {\r\n                                        padding: {\r\n                                            left: 0,\r\n                                            right: 0,\r\n                                        },\r\n                                        show: false,\r\n                                    },\r\n                                }}\r\n                                legend={{\r\n                                    position: \"inset\",\r\n                                    padding: 0,\r\n                                    inset: {\r\n                                        anchor: \"top-left\",\r\n                                        x: 20,\r\n                                        y: 8,\r\n                                        step: 10,\r\n                                    },\r\n                                }}\r\n                                tooltip={{\r\n                                    format: {\r\n                                        title: function (x) {\r\n                                            return \"\";\r\n                                        },\r\n                                    },\r\n                                }}\r\n                                padding={{\r\n                                    bottom: 0,\r\n                                    left: -1,\r\n                                    right: -1,\r\n                                }}\r\n                                point={{\r\n                                    show: false,\r\n                                }}\r\n                            />\r\n                            <Table\r\n                                cards={true}\r\n                                striped={true}\r\n                                responsive={true}\r\n                                className=\"table-vcenter\"\r\n                            >\r\n                                <Table.Header>\r\n                                    <Table.Row>\r\n                                        <Table.ColHeader colSpan={2}>User</Table.ColHeader>\r\n                                        <Table.ColHeader>Commit</Table.ColHeader>\r\n                                        <Table.ColHeader>Date</Table.ColHeader>\r\n                                        <Table.ColHeader />\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Col className=\"w-1\">\r\n                                            <Avatar imageURL=\"./demo/faces/male/9.jpg\" />\r\n                                        </Table.Col>\r\n                                        <Table.Col>Ronald Bradley</Table.Col>\r\n                                        <Table.Col>Initial commit</Table.Col>\r\n                                        <Table.Col className=\"text-nowrap\">May 6, 2018</Table.Col>\r\n                                        <Table.Col className=\"w-1\">\r\n                                            <Icon link={true} name=\"trash\" />\r\n                                        </Table.Col>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Col>\r\n                                            <Avatar>BM</Avatar>\r\n                                        </Table.Col>\r\n                                        <Table.Col>Russell Gibson</Table.Col>\r\n                                        <Table.Col>Main structure</Table.Col>\r\n                                        <Table.Col className=\"text-nowrap\">\r\n                                            April 22, 2018\r\n                    </Table.Col>\r\n                                        <Table.Col>\r\n                                            <Icon link={true} name=\"trash\" />\r\n                                        </Table.Col>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Col>\r\n                                            <Avatar imageURL=\"./demo/faces/female/1.jpg\" />\r\n                                        </Table.Col>\r\n                                        <Table.Col>Beverly Armstrong</Table.Col>\r\n                                        <Table.Col>Left sidebar adjustments</Table.Col>\r\n                                        <Table.Col className=\"text-nowrap\">\r\n                                            April 15, 2018\r\n                    </Table.Col>\r\n                                        <Table.Col>\r\n                                            <Icon link={true} name=\"trash\" />\r\n                                        </Table.Col>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Col>\r\n                                            <Avatar imageURL=\"./demo/faces/male/4.jpg\" />\r\n                                        </Table.Col>\r\n                                        <Table.Col>Bobby Knight</Table.Col>\r\n                                        <Table.Col>Topbar dropdown style</Table.Col>\r\n                                        <Table.Col className=\"text-nowrap\">April 8, 2018</Table.Col>\r\n                                        <Table.Col>\r\n                                            <Icon link={true} name=\"trash\" />\r\n                                        </Table.Col>\r\n                                    </Table.Row>\r\n                                    <Table.Row>\r\n                                        <Table.Col>\r\n                                            <Avatar imageURL=\"./demo/faces/female/11.jpg\" />\r\n                                        </Table.Col>\r\n                                        <Table.Col>Sharon Wells</Table.Col>\r\n                                        <Table.Col>Fixes #625</Table.Col>\r\n                                        <Table.Col className=\"text-nowrap\">April 9, 2018</Table.Col>\r\n                                        <Table.Col>\r\n                                            <Icon link={true} name=\"trash\" />\r\n                                        </Table.Col>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                        </Card>\r\n                    </Grid.Col>\r\n\r\n                    <Grid.Col md={6}>\r\n                        <Alert type=\"primary\">\r\n                            <Alert.Link\r\n                                href={\r\n                                    process.env.NODE_ENV === \"production\"\r\n                                        ? \"https://tabler.github.io/tabler-react/documentation\"\r\n                                        : \"/documentation\"\r\n                                }\r\n                            >\r\n                                Read our documentation\r\n              </Alert.Link>{\" \"}\r\n              with code samples.\r\n            </Alert>\r\n                        <Grid.Row>\r\n                            <Grid.Col sm={6}>\r\n                                <Card>\r\n                                    <Card.Header>\r\n                                        <Card.Title>Chart title</Card.Title>\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        <C3Chart\r\n                                            style={{ height: \"12rem\" }}\r\n                                            data={{\r\n                                                columns: [\r\n                                                    // each columns data\r\n                                                    [\"data1\", 63],\r\n                                                    [\"data2\", 37],\r\n                                                ],\r\n                                                type: \"donut\", // default type of chart\r\n                                                colors: {\r\n                                                    data1: colors[\"green\"],\r\n                                                    data2: colors[\"green-light\"],\r\n                                                },\r\n                                                names: {\r\n                                                    // name of each serie\r\n                                                    data1: \"Maximum\",\r\n                                                    data2: \"Minimum\",\r\n                                                },\r\n                                            }}\r\n                                            legend={{\r\n                                                show: false, //hide legend\r\n                                            }}\r\n                                            padding={{\r\n                                                bottom: 0,\r\n                                                top: 0,\r\n                                            }}\r\n                                        />\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Grid.Col>\r\n                            <Grid.Col sm={6}>\r\n                                <Card>\r\n                                    <Card.Header>\r\n                                        <Card.Title>Chart title</Card.Title>\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        <C3Chart\r\n                                            style={{ height: \"12rem\" }}\r\n                                            data={{\r\n                                                columns: [\r\n                                                    // each columns data\r\n                                                    [\"data1\", 63],\r\n                                                    [\"data2\", 44],\r\n                                                    [\"data3\", 12],\r\n                                                    [\"data4\", 14],\r\n                                                ],\r\n                                                type: \"pie\", // default type of chart\r\n                                                colors: {\r\n                                                    data1: colors[\"blue-darker\"],\r\n                                                    data2: colors[\"blue\"],\r\n                                                    data3: colors[\"blue-light\"],\r\n                                                    data4: colors[\"blue-lighter\"],\r\n                                                },\r\n                                                names: {\r\n                                                    // name of each serie\r\n                                                    data1: \"A\",\r\n                                                    data2: \"B\",\r\n                                                    data3: \"C\",\r\n                                                    data4: \"D\",\r\n                                                },\r\n                                            }}\r\n                                            legend={{\r\n                                                show: false, //hide legend\r\n                                            }}\r\n                                            padding={{\r\n                                                bottom: 0,\r\n                                                top: 0,\r\n                                            }}\r\n                                        />\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Grid.Col>\r\n                            <Grid.Col sm={6}>\r\n                                <ProgressCard\r\n                                    header=\"New feedback\"\r\n                                    content=\"62\"\r\n                                    progressColor=\"red\"\r\n                                    progressWidth={28}\r\n                                />\r\n                            </Grid.Col>\r\n                            <Grid.Col sm={6}>\r\n                                <ProgressCard\r\n                                    header=\"Today profit\"\r\n                                    content=\"$652\"\r\n                                    progressColor=\"green\"\r\n                                    progressWidth={84}\r\n                                />\r\n                            </Grid.Col>\r\n                            <Grid.Col sm={6}>\r\n                                <ProgressCard\r\n                                    header=\"Users online\"\r\n                                    content=\"76\"\r\n                                    progressColor=\"yellow\"\r\n                                    progressWidth={34}\r\n                                />\r\n                            </Grid.Col>\r\n                        </Grid.Row>\r\n                    </Grid.Col>\r\n                    <Grid.Col sm={6} lg={3}>\r\n                        <StampCard\r\n                            color=\"blue\"\r\n                            icon=\"dollar-sign\"\r\n                            header={\r\n                                <a href=\"#\">\r\n                                    132 <small>Sales</small>\r\n                                </a>\r\n                            }\r\n                            footer={\"12 waiting payments\"}\r\n                        />\r\n                    </Grid.Col>\r\n                    <Grid.Col sm={6} lg={3}>\r\n                        <StampCard\r\n                            color=\"green\"\r\n                            icon=\"shopping-cart\"\r\n                            header={\r\n                                <a href=\"#\">\r\n                                    78 <small>Orders</small>\r\n                                </a>\r\n                            }\r\n                            footer={\"32 shipped\"}\r\n                        />\r\n                    </Grid.Col>\r\n                    <Grid.Col sm={6} lg={3}>\r\n                        <StampCard\r\n                            color=\"red\"\r\n                            icon=\"users\"\r\n                            header={\r\n                                <a href=\"#\">\r\n                                    1,352 <small>Members</small>\r\n                                </a>\r\n                            }\r\n                            footer={\"163 registered today\"}\r\n                        />\r\n                    </Grid.Col>\r\n                    <Grid.Col sm={6} lg={3}>\r\n                        <StampCard\r\n                            color=\"yellow\"\r\n                            icon=\"message-square\"\r\n                            header={\r\n                                <a href=\"#\">\r\n                                    132 <small>Comments</small>\r\n                                </a>\r\n                            }\r\n                            footer={\"16 waiting\"}\r\n                        />\r\n                    </Grid.Col>\r\n                </Grid.Row>\r\n                <Grid.Row cards deck>\r\n                    <Grid.Col width={12}>\r\n                        <Card>\r\n                            <Table\r\n                                responsive\r\n                                highlightRowOnHover\r\n                                hasOutline\r\n                                verticalAlign=\"center\"\r\n                                cards\r\n                                className=\"text-nowrap\"\r\n                            >\r\n                                <Table.Header>\r\n                                    <Table.Row>\r\n                                        <Table.ColHeader alignContent=\"center\" className=\"w-1\">\r\n                                            <i className=\"icon-people\" />\r\n                                        </Table.ColHeader>\r\n                                        <Table.ColHeader>User</Table.ColHeader>\r\n                                        <Table.ColHeader>Usage</Table.ColHeader>\r\n                                        <Table.ColHeader alignContent=\"center\">\r\n                                            Payment\r\n                    </Table.ColHeader>\r\n                                        <Table.ColHeader>Activity</Table.ColHeader>\r\n                                        <Table.ColHeader alignContent=\"center\">\r\n                                            Satisfaction\r\n                    </Table.ColHeader>\r\n                                        <Table.ColHeader alignContent=\"center\">\r\n                                            <i className=\"icon-settings\" />\r\n                                        </Table.ColHeader>\r\n                                    </Table.Row>\r\n                                </Table.Header>\r\n                                <Table.Body>\r\n                                    <Table.Row>\r\n                                        <Table.Col alignContent=\"center\">\r\n                                            <Avatar\r\n                                                imageURL=\"demo/faces/female/26.jpg\"\r\n                                                className=\"d-block\"\r\n                                                status=\"green\"\r\n                                            />\r\n                                        </Table.Col>\r\n                                        <Table.Col>\r\n                                            <div>Elizabeth Martin</div>\r\n                                            <Text size=\"sm\" muted>\r\n                                                Registered: Mar 19, 2018\r\n                      </Text>\r\n                                        </Table.Col>\r\n                                        <Table.Col>\r\n                                            <div className=\"clearfix\">\r\n                                                <div className=\"float-left\">\r\n                                                    <strong>42%</strong>\r\n                                                </div>\r\n                                                <div className=\"float-right\">\r\n                                                    <Text.Small muted>\r\n                                                        Jun 11, 2015 - Jul 10, 2015\r\n                          </Text.Small>\r\n                                                </div>\r\n                                            </div>\r\n                                            <Progress size=\"xs\">\r\n                                                <Progress.Bar color=\"yellow\" width={42} />\r\n                                            </Progress>\r\n                                        </Table.Col>\r\n                                        <Table.Col alignContent=\"center\">\r\n                                            <Icon payment name=\"visa\" />\r\n                                        </Table.Col>\r\n                                        <Table.Col>\r\n                                            <Text size=\"sm\" muted>\r\n                                                Last login\r\n                      </Text>\r\n                                            <div>4 minutes ago</div>\r\n                                        </Table.Col>\r\n                                        <Table.Col alignContent=\"center\">42%</Table.Col>\r\n                                        <Table.Col alignContent=\"center\">\r\n                                            <Dropdown\r\n                                                trigger={\r\n                                                    <Dropdown.Trigger\r\n                                                        icon=\"more-vertical\"\r\n                                                        toggle={false}\r\n                                                    />\r\n                                                }\r\n                                                position=\"right\"\r\n                                                items={\r\n                                                    <React.Fragment>\r\n                                                        <Dropdown.Item icon=\"tag\">Action </Dropdown.Item>\r\n                                                        <Dropdown.Item icon=\"edit-2\">\r\n                                                            Another action{\" \"}\r\n                                                        </Dropdown.Item>\r\n                                                        <Dropdown.Item icon=\"message-square\">\r\n                                                            Something else here\r\n                            </Dropdown.Item>\r\n                                                        <Dropdown.ItemDivider />\r\n                                                        <Dropdown.Item icon=\"link\">\r\n                                                            {\" \"}\r\n                              Separated link\r\n                            </Dropdown.Item>\r\n                                                    </React.Fragment>\r\n                                                }\r\n                                            />\r\n                                        </Table.Col>\r\n                                    </Table.Row>\r\n                                </Table.Body>\r\n                            </Table>\r\n                        </Card>\r\n                    </Grid.Col>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Grid.Col sm={6} lg={4}>\r\n                        <Card title=\"Browser Stats\">\r\n                            <Table className=\"card-table\">\r\n                                <Table.Row>\r\n                                    <Table.Col>\r\n                                        <Icon prefix=\"fa\" name=\"chrome\" className=\"text-muted\" />\r\n                                    </Table.Col>\r\n                                    <Table.Col>Google Chrome</Table.Col>\r\n                                    <Table.Col className=\"text-right\">\r\n                                        <Text RootComponent=\"span\" muted>\r\n                                            23%\r\n                    </Text>\r\n                                    </Table.Col>\r\n                                </Table.Row>\r\n                            </Table>\r\n                        </Card>\r\n                    </Grid.Col>\r\n                    <Grid.Col sm={6} lg={4}>\r\n                        <Card title=\"Projects\">\r\n                            <Table cards>\r\n                                <Table.Row>\r\n                                    <Table.Col>Admin Template</Table.Col>\r\n                                    <Table.Col alignContent=\"right\">\r\n                                        <Badge color=\"default\">65%</Badge>\r\n                                    </Table.Col>\r\n                                </Table.Row>\r\n                            </Table>\r\n                        </Card>\r\n                    </Grid.Col>\r\n                    <Grid.Col md={6} lg={4}>\r\n                        <Card title=\"Members\">\r\n                            <Card.Body>\r\n                                <ul className=\"list-unstyled list-separated\">\r\n                                    <li className=\"list-separated-item\">\r\n                                        <Grid.Row className=\"align-items-center\">\r\n                                            <Grid.Col auto>\r\n                                                <Avatar\r\n                                                    size=\"md\"\r\n                                                    className=\"d-block\"\r\n                                                    imageURL=\"demo/faces/female/12.jpg\"\r\n                                                />\r\n                                            </Grid.Col>\r\n                                            <Grid.Col>\r\n                                                <div>\r\n                                                    <a className=\"text-inherit\" href=\"#\">\r\n                                                        Amanda Hunt\r\n                          </a>\r\n                                                </div>\r\n                                                <Text.Small muted className=\"d-block item-except h-1x\">\r\n                                                    amanda_hunt@example.com\r\n                        </Text.Small>\r\n                                            </Grid.Col>\r\n                                            <Grid.Col auto>\r\n                                                <Dropdown\r\n                                                    trigger={\r\n                                                        <Dropdown.Trigger\r\n                                                            icon=\"more-vertical\"\r\n                                                            toggle={false}\r\n                                                        />\r\n                                                    }\r\n                                                    position=\"right\"\r\n                                                    items={\r\n                                                        <React.Fragment>\r\n                                                            <Dropdown.Item icon=\"tag\">Action </Dropdown.Item>\r\n                                                            <Dropdown.Item icon=\"edit-2\">\r\n                                                                {\" \"}\r\n                                Another action{\" \"}\r\n                                                            </Dropdown.Item>\r\n                                                            <Dropdown.Item icon=\"message-square\">\r\n                                                                {\" \"}\r\n                                Something else here\r\n                              </Dropdown.Item>\r\n                                                            <Dropdown.ItemDivider />\r\n                                                            <Dropdown.Item icon=\"link\">\r\n                                                                {\" \"}\r\n                                Separated link\r\n                              </Dropdown.Item>\r\n                                                        </React.Fragment>\r\n                                                    }\r\n                                                />\r\n                                            </Grid.Col>\r\n                                        </Grid.Row>\r\n                                    </li>\r\n                                </ul>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Grid.Col>\r\n                    <Grid.Col md={6} lg={12}>\r\n                        <Grid.Row>\r\n                            <Grid.Col sm={6} lg={3}>\r\n                                <StatsCard\r\n                                    layout={2}\r\n                                    movement={5}\r\n                                    total=\"423\"\r\n                                    label=\"Users online\"\r\n                                    chart={\r\n                                        <C3Chart\r\n                                            style={{ height: \"100%\" }}\r\n                                            padding={{\r\n                                                bottom: -10,\r\n                                                left: -1,\r\n                                                right: -1,\r\n                                            }}\r\n                                            data={{\r\n                                                names: {\r\n                                                    data1: \"Users online\",\r\n                                                },\r\n                                                columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\r\n                                                type: \"area\",\r\n                                            }}\r\n                                            legend={{\r\n                                                show: false,\r\n                                            }}\r\n                                            transition={{\r\n                                                duration: 0,\r\n                                            }}\r\n                                            point={{\r\n                                                show: false,\r\n                                            }}\r\n                                            tooltip={{\r\n                                                format: {\r\n                                                    title: function (x) {\r\n                                                        return \"\";\r\n                                                    },\r\n                                                },\r\n                                            }}\r\n                                            axis={{\r\n                                                y: {\r\n                                                    padding: {\r\n                                                        bottom: 0,\r\n                                                    },\r\n                                                    show: false,\r\n                                                    tick: {\r\n                                                        outer: false,\r\n                                                    },\r\n                                                },\r\n                                                x: {\r\n                                                    padding: {\r\n                                                        left: 0,\r\n                                                        right: 0,\r\n                                                    },\r\n                                                    show: false,\r\n                                                },\r\n                                            }}\r\n                                            color={{\r\n                                                pattern: [\"#467fcf\"],\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                />\r\n                            </Grid.Col>\r\n                            <Grid.Col sm={6} lg={3}>\r\n                                <StatsCard\r\n                                    layout={2}\r\n                                    movement={-3}\r\n                                    total=\"423\"\r\n                                    label=\"Users online\"\r\n                                    chart={\r\n                                        <C3Chart\r\n                                            style={{ height: \"100%\" }}\r\n                                            padding={{\r\n                                                bottom: -10,\r\n                                                left: -1,\r\n                                                right: -1,\r\n                                            }}\r\n                                            data={{\r\n                                                names: {\r\n                                                    data1: \"Users online\",\r\n                                                },\r\n                                                columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\r\n                                                type: \"area\",\r\n                                            }}\r\n                                            legend={{\r\n                                                show: false,\r\n                                            }}\r\n                                            transition={{\r\n                                                duration: 0,\r\n                                            }}\r\n                                            point={{\r\n                                                show: false,\r\n                                            }}\r\n                                            tooltip={{\r\n                                                format: {\r\n                                                    title: function (x) {\r\n                                                        return \"\";\r\n                                                    },\r\n                                                },\r\n                                            }}\r\n                                            axis={{\r\n                                                y: {\r\n                                                    padding: {\r\n                                                        bottom: 0,\r\n                                                    },\r\n                                                    show: false,\r\n                                                    tick: {\r\n                                                        outer: false,\r\n                                                    },\r\n                                                },\r\n                                                x: {\r\n                                                    padding: {\r\n                                                        left: 0,\r\n                                                        right: 0,\r\n                                                    },\r\n                                                    show: false,\r\n                                                },\r\n                                            }}\r\n                                            color={{\r\n                                                pattern: [\"#e74c3c\"],\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                />\r\n                            </Grid.Col>\r\n                            <Grid.Col sm={6} lg={3}>\r\n                                <StatsCard\r\n                                    layout={2}\r\n                                    movement={-3}\r\n                                    total=\"423\"\r\n                                    label=\"Users online\"\r\n                                    chart={\r\n                                        <C3Chart\r\n                                            style={{ height: \"100%\" }}\r\n                                            padding={{\r\n                                                bottom: -10,\r\n                                                left: -1,\r\n                                                right: -1,\r\n                                            }}\r\n                                            data={{\r\n                                                names: {\r\n                                                    data1: \"Users online\",\r\n                                                },\r\n                                                columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\r\n                                                type: \"area\",\r\n                                            }}\r\n                                            legend={{\r\n                                                show: false,\r\n                                            }}\r\n                                            transition={{\r\n                                                duration: 0,\r\n                                            }}\r\n                                            point={{\r\n                                                show: false,\r\n                                            }}\r\n                                            tooltip={{\r\n                                                format: {\r\n                                                    title: function (x) {\r\n                                                        return \"\";\r\n                                                    },\r\n                                                },\r\n                                            }}\r\n                                            axis={{\r\n                                                y: {\r\n                                                    padding: {\r\n                                                        bottom: 0,\r\n                                                    },\r\n                                                    show: false,\r\n                                                    tick: {\r\n                                                        outer: false,\r\n                                                    },\r\n                                                },\r\n                                                x: {\r\n                                                    padding: {\r\n                                                        left: 0,\r\n                                                        right: 0,\r\n                                                    },\r\n                                                    show: false,\r\n                                                },\r\n                                            }}\r\n                                            color={{\r\n                                                pattern: [\"#5eba00\"],\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                />\r\n                            </Grid.Col>\r\n                            <Grid.Col sm={6} lg={3}>\r\n                                <StatsCard\r\n                                    layout={2}\r\n                                    movement={9}\r\n                                    total=\"423\"\r\n                                    label=\"Users online\"\r\n                                    chart={\r\n                                        <C3Chart\r\n                                            style={{ height: \"100%\" }}\r\n                                            padding={{\r\n                                                bottom: -10,\r\n                                                left: -1,\r\n                                                right: -1,\r\n                                            }}\r\n                                            data={{\r\n                                                names: {\r\n                                                    data1: \"Users online\",\r\n                                                },\r\n                                                columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\r\n                                                type: \"area\",\r\n                                            }}\r\n                                            legend={{\r\n                                                show: false,\r\n                                            }}\r\n                                            transition={{\r\n                                                duration: 0,\r\n                                            }}\r\n                                            point={{\r\n                                                show: false,\r\n                                            }}\r\n                                            tooltip={{\r\n                                                format: {\r\n                                                    title: function (x) {\r\n                                                        return \"\";\r\n                                                    },\r\n                                                },\r\n                                            }}\r\n                                            axis={{\r\n                                                y: {\r\n                                                    padding: {\r\n                                                        bottom: 0,\r\n                                                    },\r\n                                                    show: false,\r\n                                                    tick: {\r\n                                                        outer: false,\r\n                                                    },\r\n                                                },\r\n                                                x: {\r\n                                                    padding: {\r\n                                                        left: 0,\r\n                                                        right: 0,\r\n                                                    },\r\n                                                    show: false,\r\n                                                },\r\n                                            }}\r\n                                            color={{\r\n                                                pattern: [\"#f1c40f\"],\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                />\r\n                            </Grid.Col>\r\n                        </Grid.Row>\r\n                    </Grid.Col>\r\n                    <Grid.Col width={12}>\r\n                        <Card title=\"Invoices\">\r\n                            <Table\r\n                                responsive\r\n                                className=\"card-table table-vcenter text-nowrap\"\r\n                                headerItems={[\r\n                                    { content: \"No.\", className: \"w-1\" },\r\n                                    { content: \"Invoice Subject\" },\r\n                                    { content: \"Client\" },\r\n                                    { content: \"VAT No.\" },\r\n                                    { content: \"Created\" },\r\n                                    { content: \"Status\" },\r\n                                    { content: \"Price\" },\r\n                                    { content: null },\r\n                                    { content: null },\r\n                                ]}\r\n                                bodyItems={[\r\n                                    {\r\n                                        key: \"1\",\r\n                                        item: [\r\n                                            {\r\n                                                content: (\r\n                                                    <Text RootComponent=\"span\" muted>\r\n                                                        001401\r\n                                                    </Text>\r\n                                                ),\r\n                                            },\r\n                                            {\r\n                                                content: (\r\n                                                    <a href=\"invoice.html\" className=\"text-inherit\">\r\n                                                        Design Works\r\n                                                    </a>\r\n                                                ),\r\n                                            },\r\n                                            { content: \"Carlson Limited\" },\r\n                                            { content: \"87956621\" },\r\n                                            { content: \"15 Dec 2017\" },\r\n                                            {\r\n                                                content: (\r\n                                                    <React.Fragment>\r\n                                                        <span className=\"status-icon bg-success\" /> Paid\r\n                                                    </React.Fragment>\r\n                                                ),\r\n                                            },\r\n                                            { content: \"$887\" },\r\n                                            {\r\n                                                alignContent: \"right\",\r\n                                                content: (\r\n                                                    <React.Fragment>\r\n                                                        <Button size=\"sm\" color=\"secondary\">\r\n                                                            Manage\r\n                            </Button>\r\n                                                        <div className=\"dropdown\">\r\n                                                            <Button\r\n                                                                color=\"secondary\"\r\n                                                                size=\"sm\"\r\n                                                                isDropdownToggle\r\n                                                            >\r\n                                                                Actions\r\n                              </Button>\r\n                                                        </div>\r\n                                                    </React.Fragment>\r\n                                                ),\r\n                                            },\r\n                                            { content: <Icon link name=\"edit\" /> },\r\n                                        ],\r\n                                    },\r\n                                ]}\r\n                            />\r\n                        </Card>\r\n                    </Grid.Col>\r\n                </Grid.Row>\r\n            </Page.Content>)\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authReducer }) {\r\n    return {\r\n        authReducer\r\n    }\r\n}\r\n\r\nexport const AnalyticsContainer = connect(\r\n    mapStateToProps\r\n)(AnalyticsPage);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../../../styles/raleway-font.css\";\r\nimport \"../../../styles/style.css\";\r\nimport \"../../../fonts/material-design-iconic-font/css/material-design-iconic-font.min.css\";\r\n\r\nclass SetUpPage extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <div className=\"page-content\">\r\n                <div className=\"wizard-v1-content\">\r\n                    <div className=\"wizard-form\">\r\n                        <form className=\"form-register\" id=\"form-register\" action=\"#\" method=\"post\" novalidate=\"novalidate\">\r\n                            <div id=\"form-total\" role=\"application\" className=\"wizard clearfix\">\r\n                                <div className=\"steps clearfix\">\r\n                                    <ul role=\"tablist\">\r\n                                        <li role=\"tab\" className=\"first current\" aria-disabled=\"false\" aria-selected=\"true\">\r\n                                            <a id=\"form-total-t-0\" href=\"#form-total-h-0\" aria-controls=\"form-total-p-0\">\r\n                                                <span className=\"current-info audible\"> </span>\r\n                                                <div className=\"title\">\r\n                                                    <span className=\"step-icon\">\r\n                                                        <i className=\"zmdi zmdi-account\"></i>\r\n                                                    </span>\r\n                                                    <span className=\"step-number\">Bước 1</span>\r\n                                                    <span className=\"step-text\">Chọn thông tin địa phương</span>\r\n                                                </div></a></li>\r\n                                        <li role=\"tab\" className=\"done\" aria-disabled=\"false\" aria-selected=\"false\">\r\n                                            <a id=\"form-total-t-1\" href=\"#form-total-h-1\" aria-controls=\"form-total-p-1\">\r\n                                                <div className=\"title\">\r\n                                                    <span className=\"step-icon\">\r\n                                                        <i className=\"zmdi zmdi-card\"></i></span>\r\n                                                    <span className=\"step-number\">Bước 2</span>\r\n                                                    <span className=\"step-text\">Thiết lập từ khóa</span>\r\n                                                </div></a></li>\r\n                                        <li role=\"tab\" className=\"last done\" aria-disabled=\"false\" aria-selected=\"false\">\r\n                                            <a id=\"form-total-t-2\" href=\"#form-total-h-2\" aria-controls=\"form-total-p-2\">\r\n                                                <div className=\"title\">\r\n                                                    <span className=\"step-icon\">\r\n                                                        <i className=\"zmdi zmdi-receipt\"></i></span>\r\n                                                    <span className=\"step-number\">Bước 3</span>\r\n                                                    <span className=\"step-text\">Thiết lập nguồn tin tức</span>\r\n                                                </div></a></li></ul></div>\r\n                                <div className=\"content clearfix\">\r\n                                    {/*  <!-- SECTION 1 --> */}\r\n                                    <h2 id=\"form-total-h-0\" tabindex=\"-1\" className=\"title current\">\r\n                                        <span className=\"step-icon\"><i className=\"zmdi zmdi-account\"></i></span>\r\n                                        <span className=\"step-number\">Bước 1</span>\r\n                                        <span className=\"step-text\">Chọn thông tin địa phương</span>\r\n                                    </h2>\r\n                                    <section id=\"form-total-p-0\" role=\"tabpanel\" aria-labelledby=\"form-total-h-0\" className=\"body current\" aria-hidden=\"false\">\r\n                                        <div className=\"inner\">\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-holder form-holder-2\">\r\n                                                    <label for=\"username\">Username*</label>\r\n                                                    <input type=\"text\" placeholder=\"Username\" className=\"form-control valid\" id=\"username\" name=\"username\" required=\"\" aria-required=\"true\" aria-invalid=\"false\"></input>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-holder form-holder-2\">\r\n                                                    <label for=\"email\">Email Address*</label>\r\n                                                    <input type=\"email\" placeholder=\"Your Email\" className=\"form-control valid\" id=\"email\" name=\"email\" required=\"\" pattern=\"[^@]+@[^@]+.[a-zA-Z]{2,6}\" aria-required=\"true\" aria-invalid=\"false\"></input>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-holder\">\r\n                                                    <label for=\"password\">Password*</label>\r\n                                                    <input type=\"password\" placeholder=\"Password\" className=\"form-control valid validate-equalTo-blur\" id=\"password\" name=\"password\" required=\"\" aria-required=\"true\" aria-invalid=\"false\"></input>\r\n                                                </div>\r\n                                                <div className=\"form-holder\">\r\n                                                    <label for=\"confirm_password\">Confirm Password*</label>\r\n                                                    <input type=\"password\" placeholder=\"Confirm Password\" className=\"form-control valid\" id=\"confirm_password\" name=\"confirm_password\" required=\"\" aria-required=\"true\" aria-invalid=\"false\"></input>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </section>\r\n                                    {/*  <!-- SECTION 2 --> */}\r\n                                    <h2 id=\"form-total-h-1\" tabindex=\"-1\" className=\"title\">\r\n                                        <span className=\"step-icon\"><i className=\"zmdi zmdi-card\"></i></span>\r\n                                        <span className=\"step-number\">Step 2</span>\r\n                                        <span className=\"step-text\">Payment Infomation</span>\r\n                                    </h2>\r\n                                    <section id=\"form-total-p-1\" role=\"tabpanel\" aria-labelledby=\"form-total-h-1\" className=\"body\" aria-hidden=\"true\" style={{ display: \"none\" }}>\r\n                                        <div className=\"inner\">\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-holder form-holder-2\">\r\n                                                    <label for=\"card-type\">Card Type</label>\r\n                                                    <select name=\"card-type\" id=\"card-type\" className=\"form-control\">\r\n                                                        <option value=\"\" disabled=\"\" selected=\"\">Select Credit Card Type</option>\r\n                                                        <option value=\"Business Credit Cards\">Business Credit Cards</option>\r\n                                                        <option value=\"Limited Purpose Cards\">Limited Purpose Cards</option>\r\n                                                        <option value=\"Prepaid Cards\">Prepaid Cards</option>\r\n                                                        <option value=\"Charge Cards\">Charge Cards</option>\r\n                                                        <option value=\"Student Credit Cards\">Student Credit Cards</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row\">\r\n                                                <div className=\"form-holder form-holder-3\">\r\n                                                    <label for=\"card-number\">Card Number</label>\r\n                                                    <input type=\"text\" name=\"card-number\" className=\"card-number\" id=\"card-number\" placeholder=\"ex: 489050625008xxxx\"></input>\r\n                                                </div>\r\n                                                <div className=\"form-holder\">\r\n                                                    <label for=\"cvc\">CVC</label>\r\n                                                    <input type=\"text\" name=\"cvc\" className=\"cvc\" id=\"cvc\" placeholder=\"xxx\"></input>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-row form-row-2\">\r\n                                                <div className=\"form-holder\">\r\n                                                    <label for=\"month\">Expiry Month</label>\r\n                                                    <select name=\"month\" id=\"month\" className=\"form-control\">\r\n                                                        <option value=\"\" disabled=\"\" selected=\"\">Expiry Month</option>\r\n                                                        <option value=\"January\">January</option>\r\n                                                        <option value=\"February\">February</option>\r\n                                                        <option value=\"March\">March</option>\r\n                                                        <option value=\"February\">February</option>\r\n                                                        <option value=\"April\">April</option>\r\n                                                        <option value=\"May\">May</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                                <div className=\"form-holder\">\r\n                                                    <label for=\"year\">Expiry Year</label>\r\n                                                    <select name=\"year\" id=\"year\" className=\"form-control\">\r\n                                                        <option value=\"\" disabled=\"\" selected=\"\">Expiry Year</option>\r\n                                                        <option value=\"2018\">2018</option>\r\n                                                        <option value=\"2017\">2017</option>\r\n                                                        <option value=\"2016\">2016</option>\r\n                                                        <option value=\"2015\">2015</option>\r\n                                                        <option value=\"2014\">2014</option>\r\n                                                        <option value=\"2013\">2013</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </section>\r\n                                    {/*  <!-- SECTION 3 --> */}\r\n                                    <h2 id=\"form-total-h-2\" tabindex=\"-1\" className=\"title\">\r\n                                        <span className=\"step-icon\"><i className=\"zmdi zmdi-receipt\"></i></span>\r\n                                        <span className=\"step-number\">Step 3</span>\r\n                                        <span className=\"step-text\">Confirm Your Details</span>\r\n                                    </h2>\r\n                                    <section id=\"form-total-p-2\" role=\"tabpanel\" aria-labelledby=\"form-total-h-2\" className=\"body\" aria-hidden=\"true\" style={{ display: \"none\" }}>\r\n                                        <div className=\"inner\">\r\n                                            <h3>Comfirm Details</h3>\r\n                                            <div className=\"form-row table-responsive\">\r\n                                                <table className=\"table\">\r\n                                                    <tbody>\r\n                                                        <tr className=\"space-row\">\r\n                                                            <th>Username:</th>\r\n                                                            <td id=\"username-val\">thaoltt1</td>\r\n                                                        </tr>\r\n                                                        <tr className=\"space-row\">\r\n                                                            <th>Email Address:</th>\r\n                                                            <td id=\"email-val\">thao.ltt@phongvu.vn</td>\r\n                                                        </tr>\r\n                                                        <tr className=\"space-row\">\r\n                                                            <th>Card Type:</th>\r\n                                                            <td id=\"card-type-val\"></td>\r\n                                                        </tr>\r\n                                                        <tr className=\"space-row\">\r\n                                                            <th>Card Number:</th>\r\n                                                            <td id=\"card-number-val\"></td>\r\n                                                        </tr>\r\n                                                        <tr className=\"space-row\">\r\n                                                            <th>CVC:</th>\r\n                                                            <td id=\"cvc-val\"></td>\r\n                                                        </tr>\r\n                                                        <tr className=\"space-row\">\r\n                                                            <th>Expiry Month:</th>\r\n                                                            <td id=\"month-val\"></td>\r\n                                                        </tr>\r\n                                                        <tr className=\"space-row\">\r\n                                                            <th>Expiry Year:</th>\r\n                                                            <td id=\"year-val\"></td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>\r\n                                        </div>\r\n                                    </section>\r\n                                </div><div className=\"actions clearfix\"><ul role=\"menu\" aria-label=\"Pagination\"><li className=\"disabled\" aria-disabled=\"true\"><a href=\"#previous\" role=\"menuitem\">Back</a></li><li aria-hidden=\"false\" aria-disabled=\"false\"><a href=\"#next\" role=\"menuitem\"><i className=\"zmdi zmdi-arrow-right\"></i></a></li><li aria-hidden=\"true\" style={{ display: 'none' }}><a href=\"#finish\" role=\"menuitem\"><i className=\"zmdi zmdi-arrow-right\"></i></a></li></ul></div></div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authReducer }) {\r\n    return {\r\n        authReducer\r\n    }\r\n}\r\n\r\nexport const SetUpContainer = connect(\r\n    mapStateToProps\r\n)(SetUpPage);","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport {\r\n    Page,\r\n    Site\r\n} from \"tabler-react\";\r\nimport { AnalyticsContainer } from \"./AnalyticsPage\";\r\nimport { SetUpContainer } from \"./setup/SetUpPage\";\r\n\r\nclass DashboardPage extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n                <AnalyticsContainer />\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ }) {\r\n    return {};\r\n}\r\n\r\nexport const DashboardContainer = connect(\r\n    mapStateToProps\r\n)(DashboardPage);","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Page, Form, Button, Grid, Card } from \"tabler-react\";\r\n\r\nclass SettingPage extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <Page.Content title=\"Thiết lập\">\r\n                <Page.Card title=\"Địa phương\">\r\n                    <Form.Group label=\"Tên hiển thị\">\r\n                        <Grid.Row >\r\n                            <Grid.Col lg={4} md={6} width={12}>\r\n\r\n                                <Form.InputGroup>\r\n                                    <Form.Input\r\n                                        disabled\r\n                                        name=\"location-name\"\r\n                                        value=\"Quận 9\"\r\n                                    />\r\n                                </Form.InputGroup>\r\n                            </Grid.Col>\r\n\r\n                        </Grid.Row>\r\n\r\n                    </Form.Group>\r\n                    <Form.Group label=\"Chi tiết đơn vị hành chính\">\r\n                        <Grid.Row>\r\n                            <Grid.Col lg={4} md={6} width={12} className=\"py-2\"><Form.InputGroup>\r\n                                <Form.InputGroupPrepend>\r\n                                    <Form.InputGroupText>Tỉnh</Form.InputGroupText>\r\n                                </Form.InputGroupPrepend>\r\n                                <Form.Select>\r\n                                    <option>Thành Phố Hồ Chí Minh</option>\r\n                                    <option>Germany</option>\r\n                                </Form.Select>\r\n                            </Form.InputGroup></Grid.Col>\r\n                            <Grid.Col lg={4} md={6} width={12} className=\"py-2\"><Form.InputGroup>\r\n                                <Form.InputGroupPrepend>\r\n                                    <Form.InputGroupText>Quận/Huyện</Form.InputGroupText>\r\n                                </Form.InputGroupPrepend>\r\n                                <Form.Select>\r\n                                    <option>Quận 9</option>\r\n                                    <option>Germany</option>\r\n                                </Form.Select>\r\n                            </Form.InputGroup></Grid.Col>\r\n                            <Grid.Col lg={4} md={12} className=\"py-2\">\r\n                                <Button color=\"primary\" className=\"ml-auto\">Lưu lại</Button>\r\n                            </Grid.Col>\r\n                        </Grid.Row>\r\n\r\n                    </Form.Group>\r\n                </Page.Card>\r\n                <Page.Card title=\"Từ khóa\">\r\n                    <Form.Group label=\"Mặc định\">\r\n                        <Form.SelectGroup pills canSelectMultiple className=\"py-4\">\r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"HTML\"\r\n                                value=\"HTML\"\r\n                                checked\r\n                            />\r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"CSS\"\r\n                                value=\"CSS\"\r\n                                checked\r\n                            />\r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"PHP\"\r\n                                value=\"PHP\"\r\n                                checked\r\n                            />\r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"JavaScript\"\r\n                                value=\"JavaScript\"\r\n                                checked\r\n                            />\r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"Python\"\r\n                                value=\"Python\"\r\n                                checked\r\n                            />\r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"Ruby\"\r\n                                value=\"Ruby\"\r\n                                checked\r\n                            />\r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"C++\"\r\n                                value=\"C++\"\r\n                                checked\r\n                            />\r\n                        </Form.SelectGroup>\r\n                    </Form.Group>\r\n                    <Form.Group label=\"Được thêm vào\">\r\n                        <Form.SelectGroup pills canSelectMultiple className=\"py-4\">\r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"HTML\"\r\n                                value=\"HTML\"\r\n                                checked\r\n                            />\r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"CSS\"\r\n                                value=\"CSS\"\r\n                                checked\r\n                            />\r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"PHP\"\r\n                                value=\"PHP\"\r\n                                checked\r\n                            />\r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"JavaScript\"\r\n                                value=\"JavaScript\"\r\n                                checked\r\n                            />\r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"Python\"\r\n                                value=\"Python\"\r\n                                checked\r\n                            />\r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"Ruby\"\r\n                                value=\"Ruby\"\r\n                                checked\r\n                            />\r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"C++\"\r\n                                value=\"C++\"\r\n                                checked\r\n                            />\r\n                        </Form.SelectGroup>\r\n                        <React.Fragment className=\"py-4\">\r\n                            <Button color=\"primary\" className=\"ml-auto\">Lưu lại</Button>\r\n                        </React.Fragment>\r\n                    </Form.Group>\r\n                </Page.Card>\r\n                <Page.Card title=\"Nguồn tin tức\">\r\n                    <Form.Group label=\"Các nguồn tin bị loại bỏ\">\r\n                    <Form.SelectGroup pills canSelectMultiple className=\"py-4\">\r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"Báo Cần Thơ\"\r\n                                value=\"HTML\"\r\n                                checked\r\n                            />\r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"Báo Đồng Nai\"\r\n                                value=\"CSS\"\r\n                                checked\r\n                            />\r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"Báo Pháp Luật Việt Nam\"\r\n                                value=\"PHP\"\r\n                                checked = {true}\r\n                            />\r\n                            \r\n                            <Form.SelectGroupItem\r\n                                name=\"language\"\r\n                                label=\"vnexpress.net\"\r\n                                value=\"C++\"\r\n                             \r\n                            />\r\n                        </Form.SelectGroup>\r\n                        <React.Fragment className=\"py-4\">\r\n                            <Button color=\"primary\" className=\"ml-auto\">Lưu lại</Button>\r\n                        </React.Fragment>\r\n                    </Form.Group>\r\n                </Page.Card>\r\n                <Page.Card title=\"Triển khai (Deploy)\">\r\n                    <Form.Group label=\"Thay đổi sẽ được tự động triển khai sau một khoảng thời gian chờ. Bạn cũng có thể tiến hành triển khai ngay\">\r\n                            <Button color=\"primary\" className=\"ml-auto my-5\">Triển khai ngay</Button>\r\n                    </Form.Group>\r\n                </Page.Card>\r\n            </Page.Content>)\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ authReducer }) {\r\n    return {\r\n        authReducer\r\n    }\r\n}\r\n\r\nexport const SettingContainer = connect(\r\n    mapStateToProps\r\n)(SettingPage);","import Error404Page from \"pages/NotFound\";\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport {\r\n    Page,\r\n    Site\r\n} from \"tabler-react\";\r\nimport { AnalyticsContainer } from \"./AnalyticsPage\";\r\nimport { DashboardContainer } from \"./DashboardPage\";\r\nimport { SettingContainer } from \"./SettingPage\";\r\nimport { SetUpContainer } from \"./setup/SetUpPage\";\r\n\r\nclass ManagementPage extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n            <Switch>\r\n                <Route path='/management/analytics' component={AnalyticsContainer} />\r\n\r\n                {/* Setup Page */}\r\n                <Route path='/management/setup' component={SetUpContainer} />\r\n\r\n                <Route path='/management/setting' component={SettingContainer}/>\r\n\r\n                {/* Dashboard page */}\r\n                <Route exact path='/management/' component={DashboardContainer} />\r\n\r\n              {/*   <Route exact path='/management/' component={Error404Page} /> */}\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({ }) {\r\n    return {};\r\n}\r\n\r\nexport const ManagementContainer = connect(\r\n    mapStateToProps\r\n)(ManagementPage);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { SiteWrapperContainer } from \"components/SiteWrapper.react\";\r\nimport { TrendingFeedsContainer } from \"./TrendingFeedsPage\";\r\nimport { HeadlinesFeedsContainer } from \"./HeadlinesFeedsPage\";\r\nimport { OverviewContainer } from \"./management/OverviewPage\";\r\nimport MapsContainer from \"./MapPage\";\r\nimport NotFound from './NotFound'\r\nimport { DashboardContainer } from \"./management/DashboardPage\";\r\nimport { ManagementContainer } from \"./management/ManagementPage\";\r\n\r\n\r\nconst { Route, HashRouter, Switch } = require(\"react-router-dom\");\r\n\r\nclass HeaderFooterWrapperPage extends React.PureComponent {\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const { siteWrapperReducer, authReducer, match } = this.props;\r\n\r\n        const showFooter = true;\r\n        let user = authReducer && authReducer.authData && authReducer.authData.user ? authReducer.authData.user : undefined;\r\n        return (\r\n            <SiteWrapperContainer showFooter={siteWrapperReducer && siteWrapperReducer.showFooter} currentUser={user}>\r\n                <Switch>\r\n\r\n                    {/* Trendings Page */}\r\n                    <Route exact path='/trendings' component={TrendingFeedsContainer} />\r\n\r\n                    {/* Management Page */}\r\n                    <Route path='/management' component={ManagementContainer} />\r\n\r\n                    <Route exact path='/maps' component={MapsContainer} />\r\n\r\n                    {/* Headlines page */}\r\n                    <Route exact path={[`${match.url}/`, `${match.url}/headlines`]} component={HeadlinesFeedsContainer} />\r\n\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n\r\n            </SiteWrapperContainer>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction mapStateToProps({ authReducer, siteWrapperReducer }) {\r\n    return { authReducer, siteWrapperReducer };\r\n}\r\n\r\nexport const HeaderFooterWrapperContainer = connect(\r\n    mapStateToProps\r\n)(HeaderFooterWrapperPage);","// @flow\r\n\r\nimport * as React from \"react\";\r\n\r\n/**\r\n * Returns an object of fields with values set based on the touched and error values\r\n * If a value is both touched and has a non-empty error string it is returned as the fields value\r\n */\r\nfunction touchedErrors(\r\n  touched: { [string]: boolean } = {},\r\n  errors: { [string]: string } = {},\r\n  fields: Array<string> = []\r\n): { [string]: string } {\r\n  return fields.reduce(\r\n    (acc, cur) =>\r\n      Object.assign(acc, {\r\n        [cur]: touched && touched[cur] && errors ? errors[cur] : \"\",\r\n      }),\r\n    {}\r\n  );\r\n}\r\n\r\n/**\r\n * A HOC that modifies the errors propso that it only returns errors if the the field\r\n * has also been touched\r\n * First takes an array of the field names, followed by the component\r\n */\r\nfunction withTouchedErrors(fields: Array<string> = []) {\r\n  return function withComponent<A: { +touched?: *, +errors?: * }>(\r\n    Component: React.ComponentType<A>\r\n  ): React.ComponentType<A> {\r\n    return function WithTouchedErrors(props: A) {\r\n      const errors = touchedErrors(props.touched, props.errors, fields);\r\n      return <Component {...props} errors={errors} />;\r\n    };\r\n  };\r\n}\r\n\r\nexport default withTouchedErrors;","//@flow\r\nconst strings = {\r\n  title: \"Login to your account\",\r\n  buttonText: \"Login\",\r\n  emailLabel: \"Email\",\r\n  emailPlaceholder: \"Enter email\",\r\n  passwordLabel: \"Password\",\r\n  passwordPlaceholder: \"Password\",\r\n};\r\n\r\nexport default strings;\r\n","import * as React from \"react\";\r\n\r\nimport { FormCard, FormTextInput, StandaloneFormPage } from \"tabler-react\";\r\nimport withTouchedErrors from \"../../util/withTouchedErrors.react\";\r\n\r\nimport defaultStrings from \"./LoginFormStrings\";\r\n\r\n/**\r\n * A login page\r\n * Can be easily wrapped with form libraries like formik and redux-form\r\n */\r\nfunction LoginForm(props) {\r\n  const {\r\n    action,\r\n    method,\r\n    onSubmit,\r\n    onChange,\r\n    onBlur,\r\n    values,\r\n    strings = {},\r\n    errors,\r\n    message\r\n  } = props;\r\n\r\n  return (\r\n    <StandaloneFormPage imageURL={\"./images/local_news.svg\"}>\r\n      <FormCard\r\n        buttonText={strings.buttonText || defaultStrings.buttonText}\r\n        title={strings.title || defaultStrings.title}\r\n        onSubmit={onSubmit}\r\n        action={action}\r\n        method={method}\r\n      >\r\n        <FormTextInput\r\n          name=\"email\"\r\n          label={strings.emailLabel || defaultStrings.emailLabel}\r\n          placeholder={\r\n            strings.emailPlaceholder || defaultStrings.emailPlaceholder\r\n          }\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.email}\r\n          error={errors && errors.email}\r\n        />\r\n        <FormTextInput\r\n          name=\"password\"\r\n          type=\"password\"\r\n          label={strings.passwordLabel || defaultStrings.passwordLabel}\r\n          placeholder={\r\n            strings.passwordPlaceholder || defaultStrings.passwordPlaceholder\r\n          }\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.password}\r\n          error={errors && errors.password}\r\n        />\r\n        {message && <span className=\"invalid-message\">{message}</span>}\r\n      </FormCard>\r\n\r\n    </StandaloneFormPage>\r\n  );\r\n}\r\n\r\nconst LoginPageWithTouchedErrors = withTouchedErrors(\r\n  [\"email\", \"password\"]\r\n)(LoginForm);\r\n\r\nexport default LoginPageWithTouchedErrors;\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Formik } from \"formik\";\r\nimport { postUserLogin } from '../actions/AuthAction';\r\nimport LoginForm from '../components/Form/LoginForm';\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { dispatch, isFetching, authData } = this.props;\r\n    const strings = isFetching ? { buttonText: \"Please wait\" } : {};\r\n\r\n    if (authData) {\r\n      if (authData.success) {\r\n        return <Redirect to=\"/\" />\r\n      }\r\n    }\r\n    const message = (authData && authData.success === false) ? (authData.message || \"Something went wrong\") : undefined\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n        }}\r\n        validate={values => {\r\n          // same as above, but feel free to move this into a class method now.\r\n          let errors = {};\r\n          if (!values.email) {\r\n            errors.email = \"Required\";\r\n          } else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n          ) {\r\n            errors.email = \"Invalid email address\";\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n        onSubmit={(\r\n          values,\r\n          { setSubmitting, setErrors /* setValues and other goodies */ }\r\n        ) => {\r\n          if (!isFetching)\r\n            dispatch(postUserLogin(values))\r\n          // alert(\"Done!\");\r\n        }}\r\n        render={({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          strings,\r\n          isSubmitting\r\n        }) => (\r\n\r\n          <LoginForm\r\n            onSubmit={handleSubmit}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            values={values}\r\n            errors={errors}\r\n            touched={touched}\r\n            message={message}\r\n          >\r\n          </LoginForm>\r\n\r\n        )}\r\n\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps({ authReducer }) {\r\n  return { authReducer };\r\n}\r\n\r\nexport const LoginContainer = connect(\r\n  mapStateToProps\r\n)(LoginPage)\r\n","const strings = {\r\n    title: \"Create New Account\",\r\n    buttonText: \"Create Account\",\r\n    usernameLabel: \"Username\",\r\n    usernamePlaceholder: \"Enter username\",\r\n    nameLabel: \"Name\",\r\n    namePlaceholder: \"Enter name\",\r\n    emailLabel: \"Email Address\",\r\n    emailPlaceholder: \"Enter email\",\r\n    passwordLabel: \"Password\",\r\n    passwordPlaceholder: \"Password\",\r\n    termsLabel: \"Agree to the terms and policy\",\r\n  };\r\n  \r\n  export default strings;\r\n","import * as React from \"react\";\r\n\r\nimport {\r\n  FormCard,\r\n  FormTextInput,\r\n  FormCheckboxInput,\r\n  StandaloneFormPage\r\n} from \"tabler-react\";\r\nimport withTouchedErrors from \"../../util/withTouchedErrors.react\";\r\n\r\nimport defaultStrings from \"./RegisterFormStrings\";\r\n// import type { stringTypes } from \"./RegisterPage.strings\";\r\n\r\nimport { FormEvents, FocusEvents } from \"tabler-react\";\r\n\r\n\r\n/**\r\n * A register page\r\n * Can be easily wrapped with form libraries like formik and redux-form\r\n */\r\nfunction RegisterForm(props) {\r\n  const {\r\n    action,\r\n    method,\r\n    onSubmit,\r\n    onChange,\r\n    onBlur,\r\n    values,\r\n    strings = {},\r\n    errors,\r\n  } = props;\r\n\r\n  return (\r\n    <StandaloneFormPage imageURL={\"./images/local_news.svg\"}>\r\n\r\n\r\n      <FormCard\r\n        buttonText={strings.buttonText || defaultStrings.buttonText}\r\n        title={strings.title || defaultStrings.title}\r\n        onSubmit={onSubmit}\r\n        action={action}\r\n        method={method}\r\n      >\r\n        <FormTextInput\r\n          name=\"name\"\r\n          label={strings.nameLabel || defaultStrings.nameLabel}\r\n          placeholder={\r\n            strings.namePlaceholder || defaultStrings.namePlaceholder\r\n          }\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.name}\r\n          error={errors && errors.name}\r\n        />\r\n        <FormTextInput\r\n          name=\"email\"\r\n          label={strings.emailLabel || defaultStrings.emailLabel}\r\n          placeholder={\r\n            strings.emailPlaceholder || defaultStrings.emailPlaceholder\r\n          }\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.email}\r\n          error={errors && errors.email}\r\n        />\r\n        <FormTextInput\r\n          name=\"username\"\r\n          label={strings.usernamePlaceholder || defaultStrings.usernameLabel}\r\n          placeholder={\r\n            strings.usernamePlaceholder || defaultStrings.usernamePlaceholder\r\n          }\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.username}\r\n          error={errors && errors.username}\r\n        />\r\n\r\n        <FormTextInput\r\n          name=\"password\"\r\n          type=\"password\"\r\n          label={strings.passwordLabel || defaultStrings.passwordLabel}\r\n          placeholder={\r\n            strings.passwordPlaceholder || defaultStrings.passwordPlaceholder\r\n          }\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.password}\r\n          error={errors && errors.password}\r\n        />\r\n        <FormCheckboxInput\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.terms}\r\n          name=\"terms\"\r\n          label={strings.termsLabel || defaultStrings.termsLabel}\r\n        />\r\n      </FormCard>\r\n    </StandaloneFormPage>\r\n  );\r\n}\r\n\r\nconst RegisterPageWithTouchedErrors = withTouchedErrors(\r\n  [\"name\", \"email\", \"email\", \"password\", \"terms\"]\r\n)(RegisterForm);\r\n\r\nexport default RegisterPageWithTouchedErrors;","import * as React from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport RegisterForm from \"../components/Form/RegisterForm\";\r\nimport { postUserRegister } from '../actions/AuthAction';\r\nclass RegisterPage extends React.Component {\r\n  render() {\r\n    const { dispatch, isFetching, authData } = this.props;\r\n    const strings = isFetching ? { buttonText: \"Please wait\" } : {};\r\n\r\n    if (authData && authData.user && authData.user.email) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n          name: \"\",\r\n          terms: false,\r\n          username: \"\"\r\n        }}\r\n        validate={values => {\r\n          // same as above, but feel free to move this into a class method now.\r\n          let errors = {};\r\n          if (!values.email) {\r\n            errors.email = \"Required\";\r\n          } else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n          ) {\r\n            errors.email = \"Invalid email address\";\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={(\r\n          values,\r\n          { setSubmitting, setErrors /* setValues and other goodies */ }\r\n        ) => {\r\n          if (!isFetching)\r\n            dispatch(postUserRegister(values))\r\n          // alert(\"Done!\");\r\n        }}\r\n        render={({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          strings,\r\n          isSubmitting,\r\n        }) => (\r\n          <RegisterForm\r\n            onSubmit={handleSubmit}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            values={values}\r\n            errors={errors}\r\n            touched={touched}\r\n          />\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps({ authReducers }) {\r\n  return authReducers;\r\n}\r\n\r\nexport const RegisterContainer = connect(\r\n  mapStateToProps\r\n)(RegisterPage)","\r\nimport * as React from \"react\";\r\nimport \"bootstrap\";\r\nimport \"tabler-react/dist/Tabler.css\";\r\nimport \"./App.css\";\r\nimport \"./Placeholder.css\";\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport rootReducer from \"./reducers/rootReducers\";\r\n\r\nimport ViewDetailRedirect from \"./components/ViewDetailRedirect\";\r\nimport { HeaderFooterWrapperContainer } from \"pages/HeaderFooterWrapperPage\";\r\nimport { LoginContainer } from \"pages/LoginPage\";\r\nimport { RegisterContainer } from \"pages/RegisterPage\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(applyMiddleware(thunk)));\r\n\r\nfunction App(props) {\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path='/login' component={LoginContainer} />\r\n            <Route exact path='/register' component={RegisterContainer} />\r\n            <Route exact path=\"/detail/:id\" component={ViewDetailRedirect} />\r\n            <Route path='/' component={HeaderFooterWrapperContainer} />\r\n\r\n          </Switch>\r\n\r\n        </Router>\r\n      </Provider>\r\n    </React.StrictMode>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { Route, Router, Switch } from 'react-router-dom';\r\n\r\nimport App from \"./App.react\";\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nif(rootElement) {\r\n  ReactDOM.render(<App/>, rootElement);\r\n} else {\r\n  throw new Error(\"Could not find root element to mount to!\");\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}