{"version":3,"sources":["serviceWorker.js","util/AuthUtil.js","actions/AuthAction.js","util/withTouchedErrors.react.js","components/Form/LoginFormStrings.js","components/Form/LoginForm.js","pages/LoginPage.js","containers/LoginContainer.js","components/Form/RegisterFormStrings.js","components/Form/RegisterForm.js","pages/RegisterPage.js","containers/RegisterContainer.js","constants/ActionTypes.js","util/ApiUtil.js","actions/TrendingFeedsAction.js","reducers/trendingFeedsReducer.js","actions/HeadlinesFeedsAction.js","reducers/headlinesFeedsReducer.js","reducers/authReducers.js","reducers/rootReducers.js","util/ImageUtil.js","util/CommonUtil.js","components/base/site/AliLogo.js","components/base/site/AliHeader.js","components/base/site/InnerSiteWrapper.react.js","components/SiteWrapper.react.js","pages/TrendingFeedsPage.js","containers/TrendingFeedsContainer.js","components/HeadlineFeed/SubHeadlineFeed.js","components/HeadlineFeed/HeadlineFeed.js","pages/HeadlinesFeedsPage.js","containers/HeadlinesFeedsContainer.js","components/ViewDetailRedirect.js","pages/NotFound.js","pages/DashboardPage.js","pages/Map.js","App.v2.react.js","index.js"],"names":["Boolean","window","location","hostname","match","jwtDecode","token","decoded","jwt_decode","error","RECEIVE_LOGIN","RECEIVE_REGISTER","REQUEST_LOGIN","REQUEST_REGISTER","REQUEST_SAVED_USER","RECEIVE_SAVED_USER","REQUEST_LOGOUT","RECEIVE_LOGOUT","postUserLogin","user","dispatch","requestLogin","axios","post","process","email","password","then","res","data","success","localStorage","setItem","split","receiveLogin","console","log","message","receiveRegister","catch","err","response","type","requestRegister","userObj","payload","requestLogout","receiveLogout","touchedErrors","touched","errors","fields","reduce","acc","cur","Object","assign","withTouchedErrors","Component","props","strings","title","buttonText","emailLabel","emailPlaceholder","passwordLabel","passwordPlaceholder","LoginPageWithTouchedErrors","action","method","onSubmit","onChange","onBlur","values","imageURL","defaultStrings","name","label","placeholder","value","className","LoginPage","this","isFetching","authData","to","undefined","initialValues","validate","test","setSubmitting","setErrors","render","handleChange","handleBlur","handleSubmit","isSubmitting","React","LoginContainer","connect","authReducers","Login","usernameLabel","usernamePlaceholder","nameLabel","namePlaceholder","termsLabel","RegisterPageWithTouchedErrors","username","terms","RegisterPage","formData","RegisterContainer","SHOW_NEWS_DETAIL","baseUrl","loadDefaultApi","endPoint","a","loadApi","url","get","status","REQUEST_NEWS_RELOAD","RECEIVE_NEWS_RELOAD","REQUEST_NEWS_LOAD_MORE","RECEIVE_NEWS_LOAD_MORE","fetchNewsList","page","req","list","receiveNewsListLoadMore","receiveNewsListReload","initalState","hasMore","getItem","initialState","isSuccess","rootReducer","combineReducers","trendingFeedsReducer","state","length","headlinesFeedsReducer","sourceLogo","image","sourceLogos","findSourceLogo","logos","find","element","momentFromNow","dateTime","moment","locale","fromNow","AliLogo","href","src","alt","style","fontSize","description","displayName","AliHeader","children","align","notificationsTrayFromProps","notificationsTray","accountDropdownFromProps","accountDropdown","navItems","onMenuToggleClick","Notification","Tray","AccountDropdown","onClick","InnerSiteWrapper","collapseMobileMenu","handleCollapseMobileMenu","setState","s","headerProps","navProps","footerProps","routerContextComponentType","headerPropsWithToggleClick","header","navPropsWithCollapse","collapse","nav","Site","Nav","footer","Footer","Main","navBarItems","icon","LinkComponent","withRouter","NavLink","useExact","SiteWrapper","notificationsObjects","unread","avatarURL","time","currentUser","actionLogout","removeItem","unreadCount","v","showFooter","copyright","markAllAsRead","map","setTimeout","options","badge","active","role","isDivider","itemsObjects","RouterContextProvider","TrendingFeedsPage","loadMoreData","newsList","endOfPage","body","mainNews","moreNews","i","item","push","Col","width","imgSrc","thumbnail","imgAlt","summary","profileHref","source","postHref","authorName","avatarImgSrc","date","publicationDate","iconName","lg","md","Row","xl","aside","calendar","class","backgroundColor","backgroundClip","border","borderRadius","boxShadow","Content","cards","deck","Header","dataLength","next","loader","TrendingFeeds","SubHeadlineFeed","imageUrl","sourceName","sourceImageUrl","sourceUrl","sourceBaseUrl","subs","ListItem","Body","target","rel","HeadlineFeed","classes","cn","GroupItem","Heading","List","Sub","HeadlinesFeedsPage","feeds","items","slice","headline","shift","height","overflow","HeadlinesFeeds","ViewDetailRedirect","id","params","result","_asyncRequest","Error404Page","subtitle","details","DashboardPage","AnyReactComponent","text","SimpleMap","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","zoom","lat","lng","defaultProps","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","exact","path","component","GoogleMap","NotFound","rootElement","document","getElementById","Error","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.def9f9fb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\n// var baseUrl = 'http://localhost:4000/api'\r\nvar baseUrl = process.env.REACT_APP_API_URL\r\n\r\nclass AppUtil {\r\n    async loadApi(endPoint) {\r\n    return axios.get(baseUrl + endPoint)\r\n    .then(res => res.data)\r\n    .catch(error => {\r\n        error.status = (error.response && error.response.status) || 500;\r\n        throw error;\r\n    });\r\n}\r\n}\r\n\r\nexport const jwtDecode=(token) => {\r\n    let decoded;\r\n    if(token) {\r\n        try {\r\n            decoded = jwt_decode(token);\r\n        } catch(error) {}\r\n    }\r\n    return decoded;\r\n}\r\n\r\nexport default AppUtil","import axios from 'axios';\r\nimport { jwtDecode } from '../util/AuthUtil';\r\n\r\nexport const RECEIVE_LOGIN = \"RECEIVE_LOGIN\";\r\nexport const RECEIVE_REGISTER = \"RECEIVE_REGISTER\";\r\n\r\nexport const REQUEST_LOGIN = \"REQUEST_LOGIN\";\r\nexport const REQUEST_REGISTER = \"REQUEST_REGISTER\";\r\n\r\nexport const REQUEST_SAVED_USER = \"REQUEST_SAVED_USER\";\r\nexport const RECEIVE_SAVED_USER = \"RECEIVE_SAVED_USER\";\r\n\r\nexport const REQUEST_LOGOUT = \"REQUEST_LOGOUT\";\r\nexport const RECEIVE_LOGOUT = \"RECEIVE_LOGOUT\";\r\n\r\n\r\nexport const postUserLogin = user => {\r\n  return dispatch => {\r\n    dispatch(requestLogin())\r\n    return axios.post(process.env.REACT_APP_BASE_URL + \"/auth/login\", { email: user.email, password: user.password })\r\n      .then(res => {\r\n        let data = res.data\r\n        if (!data) return;\r\n        if (!data.success) {\r\n          console.log(data.message);\r\n          dispatch(receiveRegister({message: data.message}))\r\n        } else {\r\n          localStorage.setItem(\"token\", data.token.split(\" \")[1])\r\n          dispatch(receiveLogin(data))\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        if (err && err.response && err.response.data) {\r\n          dispatch(receiveLogin(err.response.data))\r\n        } else {\r\n          dispatch(receiveLogin({ message: err.message }))\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport const postUserRegister = formData => {\r\n  return dispatch => {\r\n    dispatch(requestRegister())\r\n    var user = {\r\n      username: formData.username,\r\n      password: formData.password,\r\n      email: formData.email,\r\n      name: formData.name\r\n    }\r\n    return axios.post(process.env.REACT_APP_BASE_URL + \"/auth/register\", user)\r\n      .then(res => {\r\n        let data = res.data\r\n        if (!data) return;\r\n        if (!data.success) {\r\n          console.log(data.message);\r\n          dispatch(receiveRegister({message: data.message}))\r\n        } else {\r\n          localStorage.setItem(\"token\", data.token)\r\n          dispatch(receiveRegister(data))\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        if (err && err.response && err.response.data) {\r\n          dispatch(receiveRegister(err.response.data))\r\n        } else {\r\n          dispatch(receiveRegister({ message: err.message }))\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport const loadSavedUser = () => {\r\n  return dispatch => {\r\n\r\n    dispatch(requestSavedUser())\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    var user = jwtDecode(token);\r\n    dispatch(receiveSavedUser(user))\r\n\r\n  }\r\n}\r\n\r\nexport const LogoutUser = () => {\r\n  return dispatch => {\r\n    dispatch(requestLogout())\r\n    localStorage.removeItem(\"token\");\r\n    dispatch(receiveLogout())\r\n\r\n\r\n  }\r\n}\r\n\r\nconst requestLogin = () => ({\r\n  type: REQUEST_LOGIN\r\n})\r\n\r\nconst requestRegister = () => ({\r\n  type: RECEIVE_REGISTER\r\n})\r\n\r\nconst receiveLogin = userObj => ({\r\n  type: RECEIVE_LOGIN,\r\n  payload: userObj\r\n})\r\n\r\nconst receiveRegister = userObj => ({\r\n  type: RECEIVE_LOGIN,\r\n  payload: userObj\r\n})\r\n\r\nconst requestSavedUser = () => ({\r\n  type: REQUEST_SAVED_USER\r\n})\r\n\r\nconst receiveSavedUser = userObj => ({\r\n  type: RECEIVE_SAVED_USER,\r\n  payload: userObj\r\n})\r\n\r\n\r\nconst requestLogout = () => ({\r\n  type: REQUEST_LOGOUT,\r\n\r\n})\r\n\r\nconst receiveLogout = () => ({\r\n  type: RECEIVE_LOGOUT,\r\n\r\n})","// @flow\r\n\r\nimport * as React from \"react\";\r\n\r\n/**\r\n * Returns an object of fields with values set based on the touched and error values\r\n * If a value is both touched and has a non-empty error string it is returned as the fields value\r\n */\r\nfunction touchedErrors(\r\n  touched: { [string]: boolean } = {},\r\n  errors: { [string]: string } = {},\r\n  fields: Array<string> = []\r\n): { [string]: string } {\r\n  return fields.reduce(\r\n    (acc, cur) =>\r\n      Object.assign(acc, {\r\n        [cur]: touched && touched[cur] && errors ? errors[cur] : \"\",\r\n      }),\r\n    {}\r\n  );\r\n}\r\n\r\n/**\r\n * A HOC that modifies the errors propso that it only returns errors if the the field\r\n * has also been touched\r\n * First takes an array of the field names, followed by the component\r\n */\r\nfunction withTouchedErrors(fields: Array<string> = []) {\r\n  return function withComponent<A: { +touched?: *, +errors?: * }>(\r\n    Component: React.ComponentType<A>\r\n  ): React.ComponentType<A> {\r\n    return function WithTouchedErrors(props: A) {\r\n      const errors = touchedErrors(props.touched, props.errors, fields);\r\n      return <Component {...props} errors={errors} />;\r\n    };\r\n  };\r\n}\r\n\r\nexport default withTouchedErrors;","//@flow\r\nconst strings = {\r\n  title: \"Login to your account\",\r\n  buttonText: \"Login\",\r\n  emailLabel: \"Email\",\r\n  emailPlaceholder: \"Enter email\",\r\n  passwordLabel: \"Password\",\r\n  passwordPlaceholder: \"Password\",\r\n};\r\n\r\nexport default strings;\r\n","import * as React from \"react\";\r\n\r\nimport { FormCard, FormTextInput, StandaloneFormPage } from \"tabler-react\";\r\nimport withTouchedErrors from \"../../util/withTouchedErrors.react\";\r\n\r\nimport defaultStrings from \"./LoginFormStrings\";\r\n\r\n/**\r\n * A login page\r\n * Can be easily wrapped with form libraries like formik and redux-form\r\n */\r\nfunction LoginForm(props) {\r\n  const {\r\n    action,\r\n    method,\r\n    onSubmit,\r\n    onChange,\r\n    onBlur,\r\n    values,\r\n    strings = {},\r\n    errors,\r\n    message\r\n  } = props;\r\n\r\n  return (\r\n    <StandaloneFormPage imageURL={\"./images/local_news.svg\"}>\r\n      <FormCard\r\n        buttonText={strings.buttonText || defaultStrings.buttonText}\r\n        title={strings.title || defaultStrings.title}\r\n        onSubmit={onSubmit}\r\n        action={action}\r\n        method={method}\r\n      >\r\n        <FormTextInput\r\n          name=\"email\"\r\n          label={strings.emailLabel || defaultStrings.emailLabel}\r\n          placeholder={\r\n            strings.emailPlaceholder || defaultStrings.emailPlaceholder\r\n          }\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.email}\r\n          error={errors && errors.email}\r\n        />\r\n        <FormTextInput\r\n          name=\"password\"\r\n          type=\"password\"\r\n          label={strings.passwordLabel || defaultStrings.passwordLabel}\r\n          placeholder={\r\n            strings.passwordPlaceholder || defaultStrings.passwordPlaceholder\r\n          }\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.password}\r\n          error={errors && errors.password}\r\n        />\r\n        {message && <span className=\"invalid-message\">{message}</span>}\r\n      </FormCard>\r\n\r\n    </StandaloneFormPage>\r\n  );\r\n}\r\n\r\nconst LoginPageWithTouchedErrors = withTouchedErrors(\r\n  [\"email\", \"password\"]\r\n)(LoginForm);\r\n\r\nexport default LoginPageWithTouchedErrors;\r\n","import * as React from \"react\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport { Formik } from \"formik\";\r\nimport { postUserLogin } from '../actions/AuthAction';\r\nimport LoginForm from '../components/Form/LoginForm';\r\n\r\nexport default class LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const {dispatch, isFetching, authData } = this.props;\r\n    const strings = isFetching ? {buttonText : \"Please wait\"}: {};\r\n    \r\n    if(authData) {\r\n      if(authData.success){\r\n        return <Redirect to=\"/\" />\r\n      }\r\n    }\r\n    const message= (authData && authData.success === false) ? (authData.message || \"Something went wrong\") : undefined\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n        }}\r\n        validate={values => {\r\n          // same as above, but feel free to move this into a class method now.\r\n          let errors = {};\r\n          if (!values.email) {\r\n            errors.email = \"Required\";\r\n          } else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n          ) {\r\n            errors.email = \"Invalid email address\";\r\n          }\r\n    \r\n          return errors;\r\n        }}\r\n        onSubmit={(\r\n          values,\r\n          { setSubmitting, setErrors /* setValues and other goodies */ }\r\n        ) => {\r\n          if(!isFetching)\r\n            dispatch(postUserLogin(values))\r\n          // alert(\"Done!\");\r\n        }}\r\n        render={({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          strings,\r\n          isSubmitting\r\n        }) => (\r\n\r\n            <LoginForm\r\n              onSubmit={handleSubmit}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              values={values}\r\n              errors={errors}\r\n              touched={touched}\r\n              message={message}\r\n              >\r\n              </LoginForm>\r\n          \r\n          )}\r\n\r\n      />\r\n    );\r\n  }\r\n}","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { postUserLogin } from '../actions/AuthAction';\r\nimport Login from \"../pages/LoginPage\";\r\n\r\nfunction mapStateToProps({authReducers}) {\r\n    return authReducers;\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postUserLogin: userInfo => dispatch(postUserLogin(userInfo))\r\n  });\r\n  \r\nconst LoginContainer = connect(\r\n    mapStateToProps\r\n)(Login)\r\nexport default LoginContainer","const strings = {\r\n    title: \"Create New Account\",\r\n    buttonText: \"Create Account\",\r\n    usernameLabel: \"Username\",\r\n    usernamePlaceholder: \"Enter username\",\r\n    nameLabel: \"Name\",\r\n    namePlaceholder: \"Enter name\",\r\n    emailLabel: \"Email Address\",\r\n    emailPlaceholder: \"Enter email\",\r\n    passwordLabel: \"Password\",\r\n    passwordPlaceholder: \"Password\",\r\n    termsLabel: \"Agree to the terms and policy\",\r\n  };\r\n  \r\n  export default strings;\r\n","import * as React from \"react\";\r\n\r\nimport {\r\n  FormCard,\r\n  FormTextInput,\r\n  FormCheckboxInput,\r\n  StandaloneFormPage\r\n} from \"tabler-react\";\r\nimport withTouchedErrors from \"../../util/withTouchedErrors.react\";\r\n\r\nimport defaultStrings from \"./RegisterFormStrings\";\r\n// import type { stringTypes } from \"./RegisterPage.strings\";\r\n\r\nimport { FormEvents, FocusEvents } from \"tabler-react\";\r\n\r\n\r\n/**\r\n * A register page\r\n * Can be easily wrapped with form libraries like formik and redux-form\r\n */\r\nfunction RegisterForm(props) {\r\n  const {\r\n    action,\r\n    method,\r\n    onSubmit,\r\n    onChange,\r\n    onBlur,\r\n    values,\r\n    strings = {},\r\n    errors,\r\n  } = props;\r\n\r\n  return (\r\n    <StandaloneFormPage imageURL={\"./images/local_news.svg\"}>\r\n\r\n\r\n      <FormCard\r\n        buttonText={strings.buttonText || defaultStrings.buttonText}\r\n        title={strings.title || defaultStrings.title}\r\n        onSubmit={onSubmit}\r\n        action={action}\r\n        method={method}\r\n      >\r\n        <FormTextInput\r\n          name=\"name\"\r\n          label={strings.nameLabel || defaultStrings.nameLabel}\r\n          placeholder={\r\n            strings.namePlaceholder || defaultStrings.namePlaceholder\r\n          }\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.name}\r\n          error={errors && errors.name}\r\n        />\r\n        <FormTextInput\r\n          name=\"email\"\r\n          label={strings.emailLabel || defaultStrings.emailLabel}\r\n          placeholder={\r\n            strings.emailPlaceholder || defaultStrings.emailPlaceholder\r\n          }\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.email}\r\n          error={errors && errors.email}\r\n        />\r\n        <FormTextInput\r\n          name=\"username\"\r\n          label={strings.usernamePlaceholder || defaultStrings.usernameLabel}\r\n          placeholder={\r\n            strings.usernamePlaceholder || defaultStrings.usernamePlaceholder\r\n          }\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.username}\r\n          error={errors && errors.username}\r\n        />\r\n\r\n        <FormTextInput\r\n          name=\"password\"\r\n          type=\"password\"\r\n          label={strings.passwordLabel || defaultStrings.passwordLabel}\r\n          placeholder={\r\n            strings.passwordPlaceholder || defaultStrings.passwordPlaceholder\r\n          }\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.password}\r\n          error={errors && errors.password}\r\n        />\r\n        <FormCheckboxInput\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          value={values && values.terms}\r\n          name=\"terms\"\r\n          label={strings.termsLabel || defaultStrings.termsLabel}\r\n        />\r\n      </FormCard>\r\n    </StandaloneFormPage>\r\n  );\r\n}\r\n\r\nconst RegisterPageWithTouchedErrors = withTouchedErrors(\r\n  [\"name\", \"email\", \"email\", \"password\", \"terms\"]\r\n)(RegisterForm);\r\n\r\nexport default RegisterPageWithTouchedErrors;","import * as React from \"react\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport { Formik } from \"formik\";\r\nimport RegisterForm from \"../components/Form/RegisterForm\";\r\nimport { postUserRegister } from '../actions/AuthAction';\r\n\r\nexport default class RegisterPage extends React.Component {\r\n  render() {\r\n    const {dispatch, isFetching, authData } = this.props;\r\n    const strings = isFetching ? {buttonText : \"Please wait\"}: {};\r\n    \r\n    if(authData && authData.user && authData.user.email) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n          name: \"\",\r\n          terms: false,\r\n          username: \"\"\r\n        }}\r\n        validate={values => {\r\n          // same as above, but feel free to move this into a class method now.\r\n          let errors = {};\r\n          if (!values.email) {\r\n            errors.email = \"Required\";\r\n          } else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n          ) {\r\n            errors.email = \"Invalid email address\";\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={(\r\n          values,\r\n          { setSubmitting, setErrors /* setValues and other goodies */ }\r\n        ) => {\r\n          if(!isFetching)\r\n         dispatch(postUserRegister(values))\r\n          // alert(\"Done!\");\r\n        }}\r\n        render={({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          strings,\r\n          isSubmitting,\r\n        }) => (\r\n            <RegisterForm\r\n              onSubmit={handleSubmit}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              values={values}\r\n              errors={errors}\r\n              touched={touched}\r\n            />\r\n          )}\r\n      />\r\n    );\r\n  }\r\n}","import { connect } from \"react-redux\";\r\nimport RegisterPage from \"../pages/RegisterPage\";\r\n\r\n\r\nfunction mapStateToProps({authReducers}) {\r\n    return authReducers;\r\n}\r\n\r\nconst RegisterContainer = connect(\r\n    mapStateToProps\r\n)(RegisterPage)\r\n\r\nexport default  RegisterContainer\r\n\r\n\r\n","export const SHOW_NEWS_DETAIL = \"SHOW_NEWS_DETAIL\"\r\n","import axios from 'axios';\r\n\r\n// var baseUrl = 'http://localhost:4000/api'\r\nvar baseUrl = process.env.REACT_APP_API_URL\r\n\r\nexport async function loadDefaultApi(endPoint) {\r\n    return await loadApi(baseUrl + endPoint);\r\n}\r\n\r\nexport async function loadApi(url) {\r\n    return axios.get(url)\r\n        .then(res => res.data)\r\n        .catch(error => {\r\n            error.status = (error.response && error.response.status) || 500;\r\n            throw error;\r\n        });\r\n}","import { dispatch} from \"react-redux\";\r\n\r\nimport * as types from '../constants/ActionTypes';\r\n\r\nimport { loadApi, loadDefaultApi } from \"../util/ApiUtil\";\r\n\r\n\r\nexport const REQUEST_NEWS_RELOAD = \"REQUEST_NEWS_RELOAD_TRENDING\";\r\nexport const RECEIVE_NEWS_RELOAD = \"RECEIVE_NEWS_RELOAD_TRENDING\";\r\n\r\nexport const REQUEST_NEWS_LOAD_MORE = \"REQUEST_NEWS_LOAD_MORE_TRENDING\";\r\nexport const RECEIVE_NEWS_LOAD_MORE = \"RECEIVE_NEWS_LOAD_MORE_TRENDING\";\r\n\r\n\r\nfunction requestNewsListReload() {\r\n    return {\r\n        type: REQUEST_NEWS_RELOAD\r\n    }\r\n}\r\n\r\nfunction requestNewsListLoadMore() {\r\n    return {\r\n        type: REQUEST_NEWS_LOAD_MORE\r\n    }\r\n}\r\n\r\nfunction receiveNewsListReload(list = []) {\r\n    return {\r\n        type: RECEIVE_NEWS_RELOAD,\r\n        list\r\n    }\r\n}\r\n\r\nfunction receiveNewsListLoadMore(list = [], page = 1) {\r\n    return {\r\n        type: RECEIVE_NEWS_LOAD_MORE,\r\n        list,\r\n        page\r\n    }\r\n}\r\n\r\nexport function loadNewsDetail(id) {\r\n    return {\r\n        type: types.SHOW_NEWS_DETAIL,\r\n        id\r\n    }\r\n}\r\n\r\nexport function fetchNewsList(page) {\r\n    if (!page|| page === 0) {\r\n        return dispatch => {\r\n            dispatch(requestNewsListReload())\r\n            return loadDefaultApi(\"/news\").then(req => dispatch(receiveNewsListReload(req)));\r\n        }\r\n    } else {\r\n        return dispatch => {\r\n            dispatch(requestNewsListLoadMore())\r\n            return loadDefaultApi(\"/news?page=\"+(page+1)).then(req => dispatch(receiveNewsListLoadMore(req, page+1)));\r\n        }\r\n    }\r\n}\r\n\r\n","import { SHOW_NEWS_DETAIL } from '../constants/ActionTypes';\r\nimport { RECEIVE_NEWS_LOAD_MORE, RECEIVE_NEWS_RELOAD, REQUEST_NEWS_LOAD_MORE, REQUEST_NEWS_RELOAD } from \"../actions/TrendingFeedsAction\";\r\n\r\nconst initalState = {\r\n    list: [],\r\n    page: 1,\r\n    isFetching: false,\r\n    hasMore: true\r\n}\r\n\r\nexport default function trendingFeedsReducer(state = initalState, action) {\r\n    console.log(action.type)\r\n\r\n    switch (action.type) {\r\n            case RECEIVE_NEWS_RELOAD:\r\n                return {\r\n                    ...state,\r\n                    isFetching: false,\r\n                    page: 1,\r\n                    hasMore: action.list && action.list.length > 0,\r\n                    list: [...action.list]\r\n                }\r\n                \r\n            case RECEIVE_NEWS_LOAD_MORE:\r\n                console.log(\"state: \");\r\n                console.log(state);\r\n                console.log(\"list: \");\r\n                console.log(action.list);\r\n                return {\r\n                    ...state,\r\n                    isFetching: false,\r\n                    page: state.page + 1,\r\n                    hasMore: action.list && action.list.length > 0,\r\n                    list: [...state.list, ...action.list]\r\n                }\r\n\r\n            case REQUEST_NEWS_LOAD_MORE:\r\n            case REQUEST_NEWS_RELOAD:\r\n                return Object.assign({}, state, {\r\n                    isFetching: true\r\n                })\r\n                \r\n        case SHOW_NEWS_DETAIL:\r\n        default:\r\n            return state;\r\n                \r\n    }\r\n}","import { dispatch} from \"react-redux\";\r\n\r\nimport * as types from '../constants/ActionTypes';\r\n\r\nimport { loadApi, loadDefaultApi } from \"../util/ApiUtil\";\r\n\r\n\r\nexport const REQUEST_NEWS_RELOAD = \"REQUEST_NEWS_RELOAD_HEADLINES\";\r\nexport const RECEIVE_NEWS_RELOAD = \"RECEIVE_NEWS_RELOAD_HEADLINES\";\r\n\r\nexport const REQUEST_NEWS_LOAD_MORE = \"REQUEST_NEWS_LOAD_MORE_HEADLINES\";\r\nexport const RECEIVE_NEWS_LOAD_MORE = \"RECEIVE_NEWS_LOAD_MORE_HEADLINES\";\r\n\r\n\r\nfunction requestNewsListReload() {\r\n    return {\r\n        type: REQUEST_NEWS_RELOAD\r\n    }\r\n}\r\n\r\nfunction requestNewsListLoadMore() {\r\n    return {\r\n        type: REQUEST_NEWS_LOAD_MORE\r\n    }\r\n}\r\n\r\nfunction receiveNewsListReload(list = []) {\r\n    return {\r\n        type: RECEIVE_NEWS_RELOAD,\r\n        list\r\n    }\r\n}\r\n\r\nfunction receiveNewsListLoadMore(list = [], page = 1) {\r\n    return {\r\n        type: RECEIVE_NEWS_LOAD_MORE,\r\n        list,\r\n        page\r\n    }\r\n}\r\n\r\nexport function loadNewsDetail(id) {\r\n    return {\r\n        type: types.SHOW_NEWS_DETAIL,\r\n        id\r\n    }\r\n}\r\n\r\nexport function fetchNewsList(page) {\r\n    if (!page|| page == 0) {\r\n        return dispatch => {\r\n            dispatch(requestNewsListReload())\r\n            return loadDefaultApi(\"/news/feed/similarity\").then(req => dispatch(receiveNewsListReload(req)));\r\n        }\r\n    } else {\r\n        return dispatch => {\r\n            dispatch(requestNewsListLoadMore())\r\n            return loadDefaultApi(\"/news/feed/similarity?page=\"+(page+1)).then(req => dispatch(receiveNewsListLoadMore(req, page+1)));\r\n        }\r\n    }\r\n}\r\n\r\n","import { SHOW_NEWS_DETAIL } from '../constants/ActionTypes';\r\nimport { RECEIVE_NEWS_LOAD_MORE, RECEIVE_NEWS_RELOAD, REQUEST_NEWS_LOAD_MORE, REQUEST_NEWS_RELOAD } from \"../actions/HeadlinesFeedsAction\";\r\n\r\nconst initalState = {\r\n    list: [],\r\n    page: 1,\r\n    isFetching: false,\r\n    hasMore: true\r\n}\r\n\r\nexport default function headlinesFeedsReducer(state = initalState, action) {\r\n    console.log(action.type)\r\n\r\n    switch (action.type) {\r\n            case RECEIVE_NEWS_RELOAD:\r\n                return {\r\n                    ...state,\r\n                    isFetching: false,\r\n                    page: 1,\r\n                    hasMore: action.list && action.list.length > 0,\r\n                    list: [...action.list]\r\n                }\r\n                \r\n            case RECEIVE_NEWS_LOAD_MORE:\r\n                console.log(\"state: \");\r\n                console.log(state);\r\n                console.log(\"list: \");\r\n                console.log(action.list);\r\n                return {\r\n                    ...state,\r\n                    isFetching: false,\r\n                    page: state.page + 1,\r\n                    hasMore: action.list && action.list.length > 0,\r\n                    list: [...state.list, ...action.list]\r\n                }\r\n\r\n            case REQUEST_NEWS_LOAD_MORE:\r\n            case REQUEST_NEWS_RELOAD:\r\n                return Object.assign({}, state, {\r\n                    isFetching: true\r\n                })\r\n                \r\n        case SHOW_NEWS_DETAIL:\r\n        default:\r\n            return state;\r\n                \r\n    }\r\n}","import { REQUEST_LOGIN, REQUEST_REGISTER, RECEIVE_LOGIN, RECEIVE_REGISTER, REQUEST_SAVED_USER, RECEIVE_SAVED_USER, REQUEST_LOGOUT, RECEIVE_LOGOUT } from '../actions/AuthAction'\r\nimport { jwtDecode } from '../util/AuthUtil';\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nlet user = jwtDecode(token);\r\n\r\nconst initialState = {\r\n  authData:   user && user.name && user.email && user.username ?{user } : undefined,\r\n  isSuccess: true,\r\n  isFetching: false,\r\n}\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case REQUEST_LOGIN:\r\n    case REQUEST_REGISTER:\r\n      return { ...state, isFetching: true }\r\n    case RECEIVE_LOGIN:\r\n      return { ...state, isFetching: false, authData: action.payload }\r\n    case RECEIVE_REGISTER:\r\n      return { ...state, isFetching: false, authData: action.payload }\r\n    case RECEIVE_SAVED_USER:\r\n      const authData = action.payload ? { user: action.payload } : state.authData;\r\n      return { ...state, isFetching: false, authData: authData }\r\n    case REQUEST_SAVED_USER:\r\n      return state;\r\n    case RECEIVE_LOGOUT:\r\n      state.authData = null\r\n      state.isSuccess = false\r\n      return state;\r\n    case REQUEST_LOGOUT:\r\n      state.authData = null\r\n      state.isSuccess = false\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport trendingFeedsReducer from './trendingFeedsReducer';\r\nimport headlinesFeedsReducer from './headlinesFeedsReducer';\r\nimport authReducers from './authReducers';\r\n\r\nconst rootReducer = combineReducers({\r\n    trendingFeedsReducer,\r\n    headlinesFeedsReducer,\r\n    authReducers\r\n});\r\n\r\nexport default rootReducer;","\r\nfunction sourceLogo(name, image) {\r\n    return { name, image: \"/images/source_logos/\" + image };\r\n}\r\nconst sourceLogos = [\r\n    sourceLogo(\"tuoitre.vn\", \"tuoi_tre.webp\"),\r\n    sourceLogo(\"vnexpress.net\",\"vnexpress.webp\"),\r\n    sourceLogo(\"plo.vn\", \"phap_luat_online.webp\"),\r\n    sourceLogo(\"zingnews.vn\", \"zing.webp\"),\r\n    sourceLogo(\"vtc.vn\", \"vtc.webp\"),\r\n    sourceLogo(\"baotintuc.vn\", \"tin_tuc.jpg\"),\r\n    sourceLogo(\"nguoidothi.net.vn\", \"nguoi_do_thi.jpg\"),\r\n    sourceLogo(\"baophapluat.vn\", \"phap_luat_viet_nam.webp\"),\r\n    sourceLogo(\"vietnamplus.vn\", \"viet_nam_plus.jpg\"),\r\n    sourceLogo(\"thanhnien.vn\",\"thanhnien2.png\"),\r\n    sourceLogo(\"dantri.com.vn\",\"dantri.png\"),\r\n    sourceLogo(\"nld.com.vn\",\"nguoilaodong.jpg\"),\r\n    sourceLogo(\"anninhthudo.vn\",\"anninhthudo.png\"),\r\n    sourceLogo(\"baogiaothong.vn\",\"baogiaothong.png\"),\r\n    sourceLogo(\"vietnamnet.vn\",\"vietnamnet.png\"),\r\n    sourceLogo(\"tienphong.vn\",\"tienphong.png\")\r\n]\r\n\r\nconst defaultLogo = \"/images/source_logos/rss.jpg\";\r\n\r\nexport function findSourceLogo(name) {\r\n    const logos = sourceLogos.find(element => element.name === name);\r\n    if (logos) {\r\n        return logos.image\r\n    } else {\r\n        return defaultLogo;\r\n    }\r\n}","import moment from \"moment\";\r\nimport \"moment/locale/vi\";\r\n\r\nexport function momentCalendar(dateTime) {\r\n   return moment(dateTime).locale(\"vi\").calendar();\r\n}\r\n\r\nexport function momentFromNow(dateTime) {\r\n   return moment(dateTime).locale(\"vi\").fromNow();\r\n}","import { string } from \"prop-types\";\r\n// @flow\r\nimport * as React from \"react\";\r\n\r\ntype Props = {|\r\n+href?: string,\r\n+src?: string,\r\n+alt?: string,\r\n+title?: string,\r\n+description?: string\r\n|};\r\n\r\nconst AliLogo = (props: Props): React.Node => (\r\n    <a className=\"header-brand nav-link pr-0 leading-none\" href={props.href}>\r\n        <img src={props.src} className=\"header-brand-img\" alt={props.alt} />\r\n        <span className=\"m1-2 d-none d-lg-block\">\r\n            <span className=\"text-default font-weight-bold\">\r\n                {props.title}\r\n            </span>\r\n            <small className=\"text-blue d-block mt-1 dt\" style={{fontSize: \"1rem\"}}>\r\n                {props.description}\r\n            </small>\r\n        </span>\r\n    </a>\r\n)\r\n\r\nAliLogo.displayName=\"AliLogo\";\r\nexport default AliLogo;","import * as React from \"react\";\r\nimport AliLogo from \"./AliLogo\";\r\nimport {AccountDropdown, Container, Notification} from \"tabler-react\";\r\n\r\nconst AliHeader = ({\r\n    children,\r\n    href,\r\n    align,\r\n    imageURL,\r\n    alt,\r\n    title,\r\n    description,\r\n    notificationsTray: notificationsTrayFromProps,\r\n    accountDropdown: accountDropdownFromProps,\r\n    navItems,\r\n    onMenuToggleClick,\r\n})  => {\r\n\r\nconst notificationsTray = notificationsTrayFromProps && \r\nReact.createElement(Notification.Tray, notificationsTrayFromProps);\r\n\r\nconst accountDropdown = accountDropdownFromProps && \r\nReact.createElement(AccountDropdown, accountDropdownFromProps);\r\n\r\n    return (\r\n        <div className=\"header py-4\">\r\n            <Container className={align}>\r\n                <div className=\"d-flex\">\r\n                   {children || (\r\n                   <React.Fragment>\r\n                    <AliLogo href={href} alt={alt} src={imageURL} title={title} description={description} />\r\n                    <div className=\"d-flex order-lg-2 ml-auto\">\r\n                        {navItems}\r\n                        {notificationsTray}\r\n                        {accountDropdown}\r\n                    </div>\r\n                    <a className=\"header-toggler d-lg-none ml-3 ml-lg-0\">\r\n                        <span className=\"header-toggler-icon\"\r\n                        onClick={onMenuToggleClick}/>\r\n                        <span className=\"header-toggler-icon\"/>\r\n                    </a>\r\n                        </React.Fragment>\r\n                   )}\r\n                   </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nAliHeader.displayName= \"Ali.Header\"\r\nexport default AliHeader;","import * as React from \"react\";\r\nimport { Page, Site, Nav } from \"tabler-react\";\r\n\r\nimport AliHeader from \"./AliHeader\";\r\n\r\n\r\nclass InnerSiteWrapper extends React.PureComponent {\r\n    static displayName = \"AliWrapper\";\r\n\r\n    state = {\r\n        collapseMobileMenu: true,\r\n    }\r\n\r\n    handleCollapseMobileMenu = () => {\r\n        this.setState(s => ({ collapseMobileMenu: !s.collapseMobileMenu }))\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            headerProps,\r\n            navProps,\r\n            footerProps,\r\n            children,\r\n            routerContextComponentType,\r\n        } = this.props;\r\n\r\n        const headerPropsWithToggleClick = {\r\n            ...headerProps,\r\n            onMenuToggleClick: this.handleCollapseMobileMenu,\r\n        };\r\n\r\n        const header = React.createElement(AliHeader, headerPropsWithToggleClick);\r\n        const navPropsWithCollapse = {\r\n            ...navProps,\r\n            collapse: this.state.collapseMobileMenu,\r\n            routerContextComponentType: routerContextComponentType,\r\n        };\r\n\r\n        const nav = React.createElement(Site.Nav, navPropsWithCollapse);\r\n\r\n        const footer = React.createElement(Site.Footer, footerProps);\r\n        return (\r\n            <Page>\r\n                <Page.Main>\r\n                    {header}\r\n                    {nav}\r\n                    {children}\r\n                </Page.Main>\r\n                {footer}\r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InnerSiteWrapper;","import * as React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nimport {\r\n  RouterContextProvider,\r\n} from \"tabler-react\";\r\n\r\nimport { LogoutUser } from \"../actions/AuthAction\";\r\nimport InnerSiteWrapper from \"./base/site/InnerSiteWrapper.react\";\r\nconst navBarItems= [\r\n  {\r\n    value: \"Trang chủ\",\r\n    to: \"/\",\r\n    icon: \"home\",\r\n    LinkComponent: withRouter(NavLink),\r\n    useExact: true,\r\n  },\r\n  {\r\n    value: \"Xu hướng\",\r\n    icon: \"globe\",\r\n    to: \"/trendings\",\r\n    LinkComponent: withRouter(NavLink),\r\n    useExact: true,\r\n    /* subItems: [\r\n      {\r\n        value: \"Cards Design\",\r\n        to: \"/cards\",\r\n        LinkComponent: withRouter(NavLink),\r\n      },\r\n      { value: \"Charts\", to: \"/charts\", LinkComponent: withRouter(NavLink) },\r\n      {\r\n        value: \"Pricing Cards\",\r\n        to: \"/pricing-cards\",\r\n        LinkComponent: withRouter(NavLink),\r\n      },\r\n    ], */\r\n  }/* ,\r\n  {\r\n    value: \"Coronavirus\",\r\n    icon: \"shield\",\r\n    subItems: [\r\n      { value: \"Maps\", to: \"/maps\", LinkComponent: withRouter(NavLink) },\r\n      { value: \"Icons\", to: \"/icons\", LinkComponent: withRouter(NavLink) },\r\n      { value: \"Store\", to: \"/store\", LinkComponent: withRouter(NavLink) },\r\n      { value: \"Blog\", to: \"/blog\", LinkComponent: withRouter(NavLink) },\r\n    ],\r\n  } */\r\n];\r\n\r\n\r\nclass SiteWrapper extends React.Component {\r\n\r\n  state = {\r\n    notificationsObjects: [\r\n      {\r\n        unread: true,\r\n        avatarURL: \"demo/faces/male/41.jpg\",\r\n        message: (\r\n          <React.Fragment>\r\n            Hello1\r\n          </React.Fragment>\r\n        ),\r\n        time: \"10 minutes ago\",\r\n      },\r\n      {\r\n        unread: true,\r\n        avatarURL: \"demo/faces/female/1.jpg\",\r\n        message: (\r\n          <React.Fragment>\r\n            hello 2\r\n          </React.Fragment>\r\n        ),\r\n        time: \"1 hour ago\",\r\n      },\r\n      {\r\n        unread: false,\r\n        avatarURL: \"demo/faces/female/18.jpg\",\r\n        message: (\r\n          <React.Fragment>\r\n            hello3\r\n          </React.Fragment>\r\n        ),\r\n        time: \"2 hours ago\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    const { dispatch, currentUser } = this.props;\r\n\r\n\r\n    const actionLogout = () => {\r\n      dispatch(LogoutUser())\r\n    }\r\n\r\n\r\n    const accountDropdownPropsFunc = (user) => {\r\n      if (user) {\r\n        return {\r\n          avatarURL: \"https://s120-ava-talk.zadn.vn/4/c/d/3/0/120/09f385d32d7677e9ff00099536a7d200.jpg\",\r\n          name: user.name,\r\n          description: \"Quận 9, Tp. Hcm\",\r\n          options: [\r\n            { icon: \"user\", value: \"Profile\" },\r\n            { icon: \"settings\", value: \"Settings\" },\r\n            { icon: \"mail\", value: \"Inbox\", badge: \"6\" },\r\n            { icon: \"send\", value: \"dashboard\",active: user.role===1, to:\"/dashboard\", LinkComponent: withRouter(NavLink) },\r\n            { isDivider: true },\r\n            { icon: \"log-out\", value: <span onClick={actionLogout}>logout</span>,to:\"/\", LinkComponent: withRouter(NavLink) },\r\n          ],\r\n        };\r\n      }\r\n      else {\r\n        return {\r\n          avatarURL: \"./images/default_avatar.jpg\",\r\n          name: \"Đăng nhập\",\r\n          options: [\r\n            { icon: \"user\", value: \"Login\", to: \"/login\", LinkComponent: withRouter(NavLink) },\r\n            { isDivider: true },\r\n            { icon: \"user-plus\", value: \"Register\", to: \"/register\", LinkComponent: withRouter(NavLink) },\r\n          ]\r\n        };\r\n\r\n      }\r\n    }\r\n\r\n    const notificationsObjects = this.state.notificationsObjects || [];\r\n    const unreadCount = this.state.notificationsObjects.reduce(\r\n      (a, v) => a || v.unread,\r\n      false\r\n    );\r\n\r\n    let footerProps;\r\n    if (this.props.showFooter)\r\n      footerProps = {\r\n        /*     links: [\r\n              <a href=\"#\">First Link</a>,\r\n              <a href=\"#\">Second Link</a>,\r\n              <a href=\"#\">Third Link</a>,\r\n              <a href=\"#\">Fourth Link</a>,\r\n              <a href=\"#\">Five Link</a>,\r\n              <a href=\"#\">Sixth Link</a>,\r\n              <a href=\"#\">Seventh Link</a>,\r\n              <a href=\"#\">Eigth Link</a>,\r\n            ], */\r\n        /*  note:\r\n           \"Trang thuộc bản quyền Ali-Kit\", */\r\n        copyright: (\r\n          <React.Fragment>\r\n            Copyright © 2020\r\n            <a href=\".\"> Ali-Kit</a>\r\n          </React.Fragment>\r\n        ),\r\n        /*      nav: (\r\n               <React.Fragment>\r\n                 <Grid.Col auto={true}>\r\n                   <List className=\"list-inline list-inline-dots mb-0\">\r\n                     <List.Item className=\"list-inline-item\">\r\n                       <a href=\"./docs/index.html\">Documentation</a>\r\n                     </List.Item>\r\n                     <List.Item className=\"list-inline-item\">\r\n                       <a href=\"./faq.html\">FAQ</a>\r\n                     </List.Item>\r\n                   </List>\r\n                 </Grid.Col>\r\n               </React.Fragment>\r\n             ), */\r\n      }\r\n\r\n    return (\r\n      <InnerSiteWrapper\r\n        headerProps={{\r\n          href: \"/\",\r\n          alt: \"Tin dia phuong\",\r\n          imageURL: \"./images/local_news.svg\",\r\n          title: \"Tin địa phương\",\r\n          description: \"Quận 9\",\r\n\r\n          notificationsTray: {\r\n            notificationsObjects,\r\n            markAllAsRead: () =>\r\n              this.setState(\r\n                () => ({\r\n                  notificationsObjects: this.state.notificationsObjects.map(\r\n                    v => ({ ...v, unread: false })\r\n                  ),\r\n                }),\r\n                () =>\r\n                  setTimeout(\r\n                    () =>\r\n                      this.setState({\r\n                        notificationsObjects: this.state.notificationsObjects.map(\r\n                          v => ({ ...v, unread: true })\r\n                        ),\r\n                      }),\r\n                    5000\r\n                  )\r\n              ),\r\n            unread: unreadCount,\r\n          },\r\n          accountDropdown: accountDropdownPropsFunc(currentUser),\r\n\r\n        }}\r\n        navProps={{ itemsObjects: navBarItems }}\r\n        routerContextComponentType={withRouter(RouterContextProvider)}\r\n        footerProps={footerProps}>\r\n        {this.props.children}\r\n      </InnerSiteWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SiteWrapper;","import * as React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { fetchNewsList } from '../actions/TrendingFeedsAction';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { findSourceLogo } from '../util/ImageUtil';\r\nimport { momentCalendar, momentFromNow } from '../util/CommonUtil';\r\n\r\nimport {\r\n  Page,\r\n  Grid,\r\n  BlogCard,\r\n} from \"tabler-react\";\r\n\r\nimport SiteWrapper from \"../components/SiteWrapper.react\";\r\n\r\nexport default class TrendingFeedsPage extends React.Component {\r\n  componentDidMount() {\r\n    const dispatch = this.props.dispatch;\r\n    dispatch(fetchNewsList());\r\n  }\r\n\r\n  loadMoreData = () => {\r\n    const dispatch = this.props.dispatch;\r\n    let page = 1;\r\n    if (this.props && this.props.page) {\r\n      page = this.props.page;\r\n    }\r\n\r\n    if (page < 1) {\r\n      page = 1;\r\n    }\r\n    dispatch(fetchNewsList(page));\r\n  }\r\n\r\n  render() {\r\n    const newsList = [...this.props.list];\r\n    console.log(newsList);\r\n\r\n    const mainNews = [];\r\n    const moreNews = [];\r\n    if (newsList.length === 0) {\r\n      /* there are no item in response list */\r\n    } else if (newsList.length <= 7) {\r\n      /* no more than 7 items */\r\n      for (var i = 0; i < newsList.length; i++) {\r\n        let item = newsList[i];\r\n        mainNews.push(\r\n          <Grid.Col width={12}>\r\n            <BlogCard\r\n              imgSrc={item.thumbnail}\r\n              imgAlt={item.summary}\r\n              title={item.title}\r\n              description={item.summary}\r\n              profileHref={item.source.baseUrl}\r\n              postHref={item.source.url}\r\n              authorName={item.source.displayName}\r\n              avatarImgSrc={findSourceLogo(item.source.name)}\r\n              date={momentFromNow(item.publicationDate)}\r\n              iconName={\"arrow-right\"}\r\n            />\r\n          </Grid.Col>)\r\n      }\r\n\r\n    } else {\r\n      /* more than 7 items\r\n      \r\n      */\r\n      mainNews.push(\r\n        /* the biggest first item */\r\n        <Grid.Col width={12} lg={9} md={12}>\r\n          <BlogCard\r\n            imgSrc={newsList[0].thumbnail}\r\n            imgAlt={newsList[0].summary}\r\n            title={newsList[0].title}\r\n            description={newsList[0].summary}\r\n            postHref={newsList[0].source.url}\r\n            profileHref={newsList[0].source.baseUrl}\r\n            authorName={newsList[0].source.displayName}\r\n            avatarImgSrc={findSourceLogo(newsList[0].source.name)}\r\n            date={momentFromNow(newsList[0].publicationDate)}\r\n            iconName={\"arrow-right\"}\r\n          />\r\n        </Grid.Col>);\r\n\r\n      mainNews.push(\r\n        /* two items on the right */\r\n        <Grid.Col width={12} lg={3} md={12}>\r\n        <Grid.Row>\r\n          <Grid.Col width={12} lg={12} md={6}>\r\n          <BlogCard\r\n            imgSrc={newsList[1].thumbnail}\r\n            title={newsList[1].title}\r\n            //description={newsList[1].summary}\r\n            postHref={newsList[1].source.url}\r\n            profileHref={newsList[1].source.baseUrl}\r\n            authorName={newsList[1].source.displayName}\r\n            avatarImgSrc={findSourceLogo(newsList[1].source.name)}\r\n            date={momentFromNow(newsList[1].publicationDate)}\r\n            iconName={\"arrow-right\"}\r\n          />\r\n          </Grid.Col>\r\n          <Grid.Col width={12} lg={12} md={6}>\r\n          <BlogCard\r\n            imgSrc={newsList[2].thumbnail}\r\n            title={newsList[2].title}\r\n            //description={newsList[1].summary}\r\n            postHref={newsList[2].source.url}\r\n            profileHref={newsList[2].source.baseUrl}\r\n            authorName={newsList[2].source.displayName}\r\n            avatarImgSrc={findSourceLogo(newsList[2].source.name)}\r\n            date={momentFromNow(newsList[2].publicationDate)}\r\n            iconName={\"arrow-right\"}\r\n          />\r\n          </Grid.Col>\r\n        </Grid.Row>\r\n        </Grid.Col>\r\n        );\r\n\r\n      for (let i = 3; i < 7; i++) {\r\n        let item = newsList[i];\r\n        mainNews.push(\r\n          <Grid.Col width={12} lg={6} xl={3} md={6}>\r\n            <BlogCard\r\n              imgSrc={item.thumbnail}\r\n              // imgAlt={item.summary}\r\n              title={item.title}\r\n              description={item.summary}\r\n              postHref={item.source.url}\r\n              profileHref={item.source.baseUrl}\r\n              authorName={item.source.displayName}\r\n              avatarImgSrc={findSourceLogo(item.source.name)}\r\n              date={momentFromNow(item.publicationDate)}\r\n              iconName={\"arrow-right\"}\r\n            />\r\n          </Grid.Col>)\r\n      }\r\n\r\n      for (let i = 6; i < newsList.length; i++) {\r\n        let item = newsList[i];\r\n        moreNews.push(\r\n          <Grid.Col width={12}>\r\n            <BlogCard\r\n              aside\r\n              imgSrc={item.thumbnail}\r\n              imgAlt={item.summary}\r\n              postHref={item.source.url}\r\n              title={item.title}\r\n              description={item.summary}\r\n              profileHref={item.source.baseUrl}\r\n              authorName={item.source.displayName}\r\n              avatarImgSrc={findSourceLogo(item.source.name)}\r\n              date={momentCalendar(item.publicationDate)}\r\n              iconName={\"arrow-right\"}\r\n            />\r\n          </Grid.Col>\r\n        )\r\n      }\r\n\r\n    }\r\n\r\n    let endOfPage;\r\n    if (!this.props.hasMore && newsList.length !== 0) endOfPage =\r\n      <div class=\"col-12 d-flex justify-content-center\">\r\n        <div class=\"text-muted bold\" style={{\r\n          backgroundColor: \"transparent\",\r\n          backgroundClip: \"unset\",\r\n          border: \"0\",\r\n          borderRadius: \"0\",\r\n          boxShadow: \"none\"\r\n        }}>Oop! Hết tin rồi, quay lại sau nhé!</div>\r\n      </div>\r\n\r\n    let body;\r\n    if (newsList.length !== 0) {\r\n      body = <Page.Content title=\"Xu huớng\">\r\n        <Grid.Row cards deck>\r\n          {mainNews}\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Page.Header title={\"Tin khác\"} />\r\n          <InfiniteScroll\r\n            dataLength={newsList.length}\r\n            next={this.loadMoreData}\r\n            hasMore={this.props.hasMore}\r\n            loader={\r\n              <div class=\"col-12 d-flex justify-content-center\">\r\n                <div class=\"loader card\" style={{\r\n                  backgroundColor: \"transparent\",\r\n                  backgroundClip: \"unset\",\r\n                  border: \"0\",\r\n                  borderRadius: \"0\",\r\n                  boxShadow: \"none\"\r\n                }} />\r\n              </div>}>\r\n            {moreNews}\r\n            {endOfPage}\r\n          </InfiniteScroll>\r\n        </Grid.Row >\r\n      </Page.Content >\r\n    } else {\r\n      body = <Page.Content></Page.Content>\r\n    }\r\n\r\n    let user = this.props.authData ? this.props.authData.user : undefined;\r\n    return (\r\n      <SiteWrapper showFooter={newsList.length !== 0} currentUser={user} dispatch={this.props.dispatch}>\r\n        {body}\r\n      </SiteWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nTrendingFeedsPage.propTypes = {\r\n  list: PropTypes.array.isRequired,\r\n  dispatch: PropTypes.func.isRequired\r\n}","// @flow\r\n\r\nimport React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchNewsList } from '../actions/TrendingFeedsAction';\r\nimport TrendingFeedsPage from \"../pages/TrendingFeedsPage\";\r\n\r\n\r\nfunction mapStateToProps({trendingFeedsReducer, authReducers}) {\r\n    return {\r\n        list: trendingFeedsReducer.list,\r\n        page: trendingFeedsReducer.page,\r\n        hasMore: trendingFeedsReducer.hasMore,\r\n        ...authReducers\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFetchNewsList: (loadMore) => {\r\n            dispatch(fetchNewsList(loadMore));\r\n        }\r\n    }\r\n}\r\n\r\nexport const TrendingFeeds = connect(\r\n    mapStateToProps\r\n)(TrendingFeedsPage)","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport { Media, List } from \"tabler-react\";\r\n\r\ntype Props = {|\r\n    +children ?: React.Node,\r\n    +className ?: string,\r\n    +imageUrl ?: string,\r\n    +date ?: string,\r\n    +title ?: string,\r\n    +description ? : string,\r\n    +sourceImageUrl ?: string,\r\n    +sourceName ? : string,\r\n    +sourceUrl ?: string,\r\n    +sourceBaseUrl ?: string,\r\n    +subs: React.Node,\r\n    |};\r\n\r\nfunction SubHeadlineFeed({\r\n    className,\r\n    children,\r\n    imageUrl,\r\n    date,\r\n    title,\r\n    description,\r\n    sourceImageUrl,\r\n    sourceName,\r\n    sourceUrl,\r\n    sourceBaseUrl,\r\n    subs,\r\n}: Props): React.Node {\r\n    return (\r\n        <Media.ListItem className={className}>\r\n\r\n            <Media.Body className=\"subheadline\">\r\n                <span className=\"middle-dot-headline text-default text-bl\">⬤</span>\r\n                <span>\r\n                    <a href={sourceUrl} className=\"text-bl text-default txt-subheadline\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <strong>{title}</strong>\r\n                    </a>\r\n                    <div className=\"div-subheadline-source\">\r\n                        <a className=\"text-default text-bl txt-headline-source\" href={sourceBaseUrl}>{sourceName}</a>\r\n                        <span className=\"middle-dot-headline text-default text-bl\">⬤</span>\r\n                        <span className=\"text-default text-bl txt-headline-source\">{date}</span>\r\n                    </div>\r\n                </span>\r\n\r\n            </Media.Body>\r\n\r\n        </Media.ListItem>\r\n    );\r\n\r\n}\r\n\r\nexport default SubHeadlineFeed;","// @flow\r\n\r\nimport * as React from \"react\";\r\nimport cn from \"classnames\";\r\nimport {  Media, List } from \"tabler-react\";\r\nimport SubHeadlineFeed from \"./SubHeadlineFeed\";\r\n\r\ntype Props = {|\r\n+children ?: React.Node,\r\n    +className ?: string,\r\n    +imageUrl ?: string,\r\n    +date ?: string,\r\n    +title ?: string,\r\n    +description ? : string,\r\n    +sourceImageUrl ?: string,\r\n    +sourceName ? : string,\r\n    +sourceUrl ?: string,\r\n    +sourceBaseUrl ?: string,\r\n    +subs: React.Node,\r\n|}\r\n\r\nfunction HeadlineFeed({\r\n    className,\r\n    children,\r\n    imageUrl,\r\n    date,\r\n    title,\r\n    description,\r\n    sourceImageUrl,\r\n    sourceName,\r\n    sourceUrl,\r\n    sourceBaseUrl,\r\n    subs,\r\n}: Props): React.Node {\r\n    const classes = cn(\"py-5 no-outline\", className);\r\n    return (\r\n        <List.GroupItem className={classes}>\r\n            <Media>\r\n                <img src={imageUrl} href={sourceUrl} className=\"img-headline img-center-crop \" target=\"_blank\" rel=\"noopener noreferrer\" />\r\n                <Media.Body>\r\n                    <Media.Heading>\r\n                        \r\n                        <div className=\"div-headline-source\">\r\n                            <img src={sourceImageUrl} href={sourceBaseUrl} className=\"img-headline-sourcelogo\" target=\"_blank\" rel=\"noopener noreferrer\" />\r\n                            <a className=\"text-default text-bl txt-headline-source\" href={sourceBaseUrl}>{sourceName}</a>\r\n                            <span className=\"middle-dot-headline text-default text-bl\">⬤</span>\r\n                            <span className=\"text-default text-bl txt-headline-source\">{date}</span>\r\n                        <a href={sourceUrl} className=\"h4 fe fe-activity float-right text-muted\"></a>\r\n\r\n                        </div>\r\n\r\n                        <a href={sourceUrl} className=\"text-default text-bl\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <h4 class=\"headline\">{title}</h4>\r\n                        </a>\r\n                    </Media.Heading>\r\n                    <div className=\"text-description-headline\">{description}</div>\r\n                    {subs && <Media.List>{subs}</Media.List>}\r\n                </Media.Body>\r\n            </Media>\r\n        </List.GroupItem>\r\n    );\r\n}\r\n\r\n//HeadlineFeed.List = HeadlineFeedList;\r\nHeadlineFeed.Sub = SubHeadlineFeed;\r\n\r\nexport default HeadlineFeed;","import * as React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { fetchNewsList } from '../actions/HeadlinesFeedsAction';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { findSourceLogo } from '../util/ImageUtil';\r\nimport { momentFromNow } from '../util/CommonUtil';\r\n\r\nimport {\r\n  Page,\r\n  Grid,\r\n  Card,\r\n} from \"tabler-react\";\r\n\r\nimport SiteWrapper from \"../components/SiteWrapper.react\";\r\nimport HeadlineFeed from \"../components/HeadlineFeed\";\r\n\r\nexport default class HeadlinesFeedsPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(fetchNewsList());\r\n  }\r\n\r\n  loadMoreData = () => {\r\n    const { dispatch } = this.props;\r\n    let page = 1;\r\n    if (this.props && this.props.page) {\r\n      page = this.props.page;\r\n    }\r\n\r\n    if (page < 1) {\r\n      page = 1;\r\n    }\r\n    dispatch(fetchNewsList(page));\r\n  }\r\n\r\n  render() {\r\n    const newsList = [...this.props.list];\r\n    console.log(newsList);\r\n\r\n    const feeds = [];\r\n    if (newsList.length === 0) {\r\n      /* there are no item in response list */\r\n    } else {\r\n\r\n      for (var i = 0; i < newsList.length; i++) {\r\n        const items = newsList[i].data.slice(0, newsList.length > 5 ? 5 : newsList.length);\r\n        if (items.length === 0) {\r\n          break;\r\n        }\r\n        const headline = items.shift();\r\n        feeds.push(\r\n          <Grid.Col width={12}>\r\n            <Card>\r\n              <HeadlineFeed\r\n                title={headline.title}\r\n                sourceUrl={headline.source.url}\r\n                description={headline.summary}\r\n                imageUrl={headline.thumbnail}\r\n                date={momentFromNow(headline.publicationDate)}\r\n                sourceBaseUrl={headline.source.baseUrl}\r\n                sourceName={headline.source.displayName}\r\n                sourceImageUrl={findSourceLogo(headline.source.name)}\r\n                subs={items && items.length > 0 &&\r\n                  <React.Fragment>{\r\n                    items.map(item => (\r\n                      <HeadlineFeed.Sub\r\n                        title={item.title}\r\n                        sourceUrl={item.source.url}\r\n                        sourceName={item.source.displayName}\r\n                        sourceBaseUrl={item.source.baseUrl}\r\n                        sourceImageUrl={findSourceLogo(item.source.name)}\r\n                        date={momentFromNow(item.publicationDate)}\r\n                      />))\r\n                  }\r\n                  </React.Fragment>\r\n                } />\r\n\r\n            </Card>\r\n          </Grid.Col>\r\n        )\r\n      }\r\n    }\r\n\r\n    let endOfPage;\r\n    if (!this.props.hasMore && newsList.length !== 0) {\r\n      endOfPage =\r\n        <div class=\"col-12 d-flex justify-content-center\">\r\n          <div class=\"text-muted bold\" style={{\r\n            backgroundColor: \"transparent\",\r\n            backgroundClip: \"unset\",\r\n            border: \"0\",\r\n            borderRadius: \"0\",\r\n            boxShadow: \"none\"\r\n          }}>Oop! Hết tin rồi, quay lại sau nhé!</div>\r\n        </div>\r\n    }\r\n\r\n    let body;\r\n    if (newsList.length !== 0) {\r\n      body = <Page.Content title=\"Tin Chính\">\r\n        <InfiniteScroll\r\n          style={{\r\n            height: \"auto\", overflow: \"disabled\"\r\n          }}\r\n          dataLength={newsList.length}\r\n          next={this.loadMoreData}\r\n          hasMore={this.props.hasMore}\r\n          loader={\r\n            <div class=\"col-12 d-flex justify-content-center\">\r\n              <div class=\"loader card\" style={{\r\n                backgroundColor: \"transparent\",\r\n                backgroundClip: \"unset\",\r\n                border: \"0\",\r\n                borderRadius: \"0\",\r\n                boxShadow: \"none\"\r\n              }} />\r\n            </div>}>\r\n          <Grid.Row>\r\n\r\n            {feeds}\r\n          </Grid.Row>\r\n\r\n          {endOfPage}\r\n        </InfiniteScroll>\r\n      </Page.Content >\r\n    } else {\r\n      body = <Page.Content></Page.Content>\r\n    }\r\n\r\n    let user = this.props.authData ? this.props.authData.user : undefined;\r\n    return (\r\n      <SiteWrapper showFooter={newsList.length !== 0} currentUser={user} dispatch={this.props.dispatch}>\r\n        {body}\r\n      </SiteWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nHeadlinesFeedsPage.propTypes = {\r\n  list: PropTypes.array.isRequired,\r\n  dispatch: PropTypes.func.isRequired\r\n}","// @flow\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchNewsList } from '../actions/HeadlinesFeedsAction';\r\nimport HeadlinesFeedsPage from \"../pages/HeadlinesFeedsPage\";\r\n\r\n\r\nfunction mapStateToProps({headlinesFeedsReducer, authReducers}) {\r\n    return {\r\n        list: headlinesFeedsReducer.list,\r\n        page: headlinesFeedsReducer.page,\r\n        hasMore: headlinesFeedsReducer.hasMore,\r\n        ...authReducers\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFetchNewsList: (loadMore) => {\r\n            dispatch(fetchNewsList(loadMore));\r\n        }\r\n    }\r\n}\r\n\r\nexport const HeadlinesFeeds = connect(\r\n    mapStateToProps\r\n)(HeadlinesFeedsPage)","import * as React from \"react\";\r\nimport axios from 'axios'\r\nimport { Redirect } from \"react-router-dom\";\r\nexport default class ViewDetailRedirect extends React.Component {\r\n    state = {\r\n        url: null,\r\n    };\r\n\r\n    componentWillMount() {\r\n        const { id } = this.props.params.id;\r\n        axios.post(\"server\", { id }).then(\r\n            result => {\r\n                this._asyncRequest = null;\r\n                this.setState({ url: result.url });\r\n            }\r\n        ).catch((err)=>{})\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     if (this._asyncRequest) {\r\n    //         this._asyncRequest.cancel();\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        const url = this.url;\r\n        const redirectUrl =\"link\"\r\n        return <Redirect url={url||redirectUrl}></Redirect>\r\n    }\r\n    \r\n\r\n    // async render() {\r\n    //     const { id } = this.props.match.params\r\n    //     return (\r\n    //         <div>\r\n    //             {{getRedirect(id)}}\r\n    //         </div>\r\n    //     )\r\n\r\n    // }\r\n\r\n    // getRedirect = async (id)=> {\r\n    //     try {\r\n    //         let result = await axios.post(\"server\", { id })\r\n    //         if (result && result.url) {\r\n    //             return <Redirect url={result.url} />\r\n    //         }\r\n    //     }\r\n    //     catch { }\r\n    //     return <p>Redirecting to 404 page...</p>\r\n    // }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nfunction openInNewTab(url) {\r\n    var win = window.open(url, '_blank');\r\n    win.focus();\r\n}\r\n\r\n","import * as React from \"react\";\r\nimport {DefaultErrorPage} from \"tabler-react\";\r\n\r\nfunction Error404Page({\r\n    title = \"404\",\r\n    subtitle = \"Oops... You just found an error page...\",\r\n    details = \"We are sorry but the page you have requested can not be found...\",\r\n    action,\r\n}) {\r\n    return (\r\n        <DefaultErrorPage\r\n            title={title}\r\n            subtitle={subtitle}\r\n            details={details}\r\n            action={action}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Error404Page;","import * as React from \"react\";\r\nimport SiteWrapper from \"../components/SiteWrapper.react\";\r\n\r\nimport {\r\n  Page,\r\n  Site\r\n} from \"tabler-react\";\r\n\r\nexport default class DashboardPage extends React.Component{\r\n  render() {\r\n    const {\r\n        headerProps,\r\n        navProps,\r\n        footerProps,\r\n        children,\r\n        routerContextComponentType,\r\n    } = this.props;\r\n\r\n    const headerPropsWithToggleClick = {\r\n        ...headerProps,\r\n        onMenuToggleClick: this.handleCollapseMobileMenu,\r\n    };\r\n\r\n    const header = React.createElement(SiteWrapper, headerPropsWithToggleClick);\r\n    const navPropsWithCollapse = {\r\n        ...navProps,\r\n        collapse: this.state.collapseMobileMenu,\r\n        routerContextComponentType: routerContextComponentType,\r\n    };\r\n\r\n    const nav = React.createElement(Site.Nav, navPropsWithCollapse);\r\n\r\n    const footer = React.createElement(Site.Footer, footerProps);\r\n    return (\r\n        <Page>\r\n            <Page.Main>\r\n                {header}\r\n                {nav}\r\n                {children}\r\n            </Page.Main>\r\n            {footer}\r\n        </Page>\r\n    );\r\n}\r\n}\r\n\r\n// function DashboardPage() {\r\n//   return (\r\n//     <SiteWrapper>\r\n//       <Page.Content title=\"Dashboard\">\r\n//         <Grid.Row cards={true}>\r\n//           <Grid.Col width={6} sm={4} lg={2}>\r\n//             <StatsCard layout={1} movement={6} total=\"43\" label=\"New Tickets\" />\r\n//           </Grid.Col>\r\n//           <Grid.Col width={6} sm={4} lg={2}>\r\n//             <StatsCard\r\n//               layout={1}\r\n//               movement={-3}\r\n//               total=\"17\"\r\n//               label=\"Closed Today\"\r\n//             />\r\n//           </Grid.Col>\r\n//           <Grid.Col width={6} sm={4} lg={2}>\r\n//             <StatsCard layout={1} movement={9} total=\"7\" label=\"New Replies\" />\r\n//           </Grid.Col>\r\n//           <Grid.Col width={6} sm={4} lg={2}>\r\n//             <StatsCard\r\n//               layout={1}\r\n//               movement={3}\r\n//               total=\"27.3k\"\r\n//               label=\"Followers\"\r\n//             />\r\n//           </Grid.Col>\r\n//           <Grid.Col width={6} sm={4} lg={2}>\r\n//             <StatsCard\r\n//               layout={1}\r\n//               movement={-2}\r\n//               total=\"$95\"\r\n//               label=\"Daily earnings\"\r\n//             />\r\n//           </Grid.Col>\r\n//           <Grid.Col width={6} sm={4} lg={2}>\r\n//             <StatsCard layout={1} movement={-1} total=\"621\" label=\"Products\" />\r\n//           </Grid.Col>\r\n//           <Grid.Col lg={6}>\r\n//             <Card>\r\n//               <Card.Header>\r\n//                 <Card.Title>Development Activity</Card.Title>\r\n//               </Card.Header>\r\n//               <C3Chart\r\n//                 style={{ height: \"10rem\" }}\r\n//                 data={{\r\n//                   columns: [\r\n//                     // each columns data\r\n//                     [\"data1\", 0, 5, 1, 2, 7, 5, 6, 8, 24, 7, 12, 5, 6, 3, 2, 2, 6, 30, 10, 10, 15, 14, 47, 65, 55,],\r\n//                   ],\r\n//                   type: \"area\", // default type of chart\r\n//                   groups: [[\"data1\", \"data2\", \"data3\"]],\r\n//                   colors: {\r\n//                     data1: colors[\"blue\"],\r\n//                   },\r\n//                   names: {\r\n//                     // name of each serie\r\n//                     data1: \"Purchases\",\r\n//                   },\r\n//                 }}\r\n//                 axis={{\r\n//                   y: {\r\n//                     padding: {\r\n//                       bottom: 0,\r\n//                     },\r\n//                     show: false,\r\n//                     tick: {\r\n//                       outer: false,\r\n//                     },\r\n//                   },\r\n//                   x: {\r\n//                     padding: {\r\n//                       left: 0,\r\n//                       right: 0,\r\n//                     },\r\n//                     show: false,\r\n//                   },\r\n//                 }}\r\n//                 legend={{\r\n//                   position: \"inset\",\r\n//                   padding: 0,\r\n//                   inset: {\r\n//                     anchor: \"top-left\",\r\n//                     x: 20,\r\n//                     y: 8,\r\n//                     step: 10,\r\n//                   },\r\n//                 }}\r\n//                 tooltip={{\r\n//                   format: {\r\n//                     title: function (x) {\r\n//                       return \"\";\r\n//                     },\r\n//                   },\r\n//                 }}\r\n//                 padding={{\r\n//                   bottom: 0,\r\n//                   left: -1,\r\n//                   right: -1,\r\n//                 }}\r\n//                 point={{\r\n//                   show: false,\r\n//                 }}\r\n//               />\r\n//               <Table\r\n//                 cards={true}\r\n//                 striped={true}\r\n//                 responsive={true}\r\n//                 className=\"table-vcenter\"\r\n//               >\r\n//                 <Table.Header>\r\n//                   <Table.Row>\r\n//                     <Table.ColHeader colSpan={2}>User</Table.ColHeader>\r\n//                     <Table.ColHeader>Commit</Table.ColHeader>\r\n//                     <Table.ColHeader>Date</Table.ColHeader>\r\n//                     <Table.ColHeader />\r\n//                   </Table.Row>\r\n//                 </Table.Header>\r\n//                 <Table.Body>\r\n//                   <Table.Row>\r\n//                     <Table.Col className=\"w-1\">\r\n//                       <Avatar imageURL=\"./demo/faces/male/9.jpg\" />\r\n//                     </Table.Col>\r\n//                     <Table.Col>Ronald Bradley</Table.Col>\r\n//                     <Table.Col>Initial commit</Table.Col>\r\n//                     <Table.Col className=\"text-nowrap\">May 6, 2018</Table.Col>\r\n//                     <Table.Col className=\"w-1\">\r\n//                       <Icon link={true} name=\"trash\" />\r\n//                     </Table.Col>\r\n//                   </Table.Row>\r\n//                   <Table.Row>\r\n//                     <Table.Col>\r\n//                       <Avatar>BM</Avatar>\r\n//                     </Table.Col>\r\n//                     <Table.Col>Russell Gibson</Table.Col>\r\n//                     <Table.Col>Main structure</Table.Col>\r\n//                     <Table.Col className=\"text-nowrap\">\r\n//                       April 22, 2018\r\n//                     </Table.Col>\r\n//                     <Table.Col>\r\n//                       <Icon link={true} name=\"trash\" />\r\n//                     </Table.Col>\r\n//                   </Table.Row>\r\n//                   <Table.Row>\r\n//                     <Table.Col>\r\n//                       <Avatar imageURL=\"./demo/faces/female/1.jpg\" />\r\n//                     </Table.Col>\r\n//                     <Table.Col>Beverly Armstrong</Table.Col>\r\n//                     <Table.Col>Left sidebar adjustments</Table.Col>\r\n//                     <Table.Col className=\"text-nowrap\">\r\n//                       April 15, 2018\r\n//                     </Table.Col>\r\n//                     <Table.Col>\r\n//                       <Icon link={true} name=\"trash\" />\r\n//                     </Table.Col>\r\n//                   </Table.Row>\r\n//                   <Table.Row>\r\n//                     <Table.Col>\r\n//                       <Avatar imageURL=\"./demo/faces/male/4.jpg\" />\r\n//                     </Table.Col>\r\n//                     <Table.Col>Bobby Knight</Table.Col>\r\n//                     <Table.Col>Topbar dropdown style</Table.Col>\r\n//                     <Table.Col className=\"text-nowrap\">April 8, 2018</Table.Col>\r\n//                     <Table.Col>\r\n//                       <Icon link={true} name=\"trash\" />\r\n//                     </Table.Col>\r\n//                   </Table.Row>\r\n//                   <Table.Row>\r\n//                     <Table.Col>\r\n//                       <Avatar imageURL=\"./demo/faces/female/11.jpg\" />\r\n//                     </Table.Col>\r\n//                     <Table.Col>Sharon Wells</Table.Col>\r\n//                     <Table.Col>Fixes #625</Table.Col>\r\n//                     <Table.Col className=\"text-nowrap\">April 9, 2018</Table.Col>\r\n//                     <Table.Col>\r\n//                       <Icon link={true} name=\"trash\" />\r\n//                     </Table.Col>\r\n//                   </Table.Row>\r\n//                 </Table.Body>\r\n//               </Table>\r\n//             </Card>\r\n//           </Grid.Col>\r\n\r\n//           <Grid.Col md={6}>\r\n//             <Alert type=\"primary\">\r\n//               <Alert.Link\r\n//                 href={\r\n//                   process.env.NODE_ENV === \"production\"\r\n//                     ? \"https://tabler.github.io/tabler-react/documentation\"\r\n//                     : \"/documentation\"\r\n//                 }\r\n//               >\r\n//                 Read our documentation\r\n//               </Alert.Link>{\" \"}\r\n//               with code samples.\r\n//             </Alert>\r\n//             <Grid.Row>\r\n//               <Grid.Col sm={6}>\r\n//                 <Card>\r\n//                   <Card.Header>\r\n//                     <Card.Title>Chart title</Card.Title>\r\n//                   </Card.Header>\r\n//                   <Card.Body>\r\n//                     <C3Chart\r\n//                       style={{ height: \"12rem\" }}\r\n//                       data={{\r\n//                         columns: [\r\n//                           // each columns data\r\n//                           [\"data1\", 63],\r\n//                           [\"data2\", 37],\r\n//                         ],\r\n//                         type: \"donut\", // default type of chart\r\n//                         colors: {\r\n//                           data1: colors[\"green\"],\r\n//                           data2: colors[\"green-light\"],\r\n//                         },\r\n//                         names: {\r\n//                           // name of each serie\r\n//                           data1: \"Maximum\",\r\n//                           data2: \"Minimum\",\r\n//                         },\r\n//                       }}\r\n//                       legend={{\r\n//                         show: false, //hide legend\r\n//                       }}\r\n//                       padding={{\r\n//                         bottom: 0,\r\n//                         top: 0,\r\n//                       }}\r\n//                     />\r\n//                   </Card.Body>\r\n//                 </Card>\r\n//               </Grid.Col>\r\n//               <Grid.Col sm={6}>\r\n//                 <Card>\r\n//                   <Card.Header>\r\n//                     <Card.Title>Chart title</Card.Title>\r\n//                   </Card.Header>\r\n//                   <Card.Body>\r\n//                     <C3Chart\r\n//                       style={{ height: \"12rem\" }}\r\n//                       data={{\r\n//                         columns: [\r\n//                           // each columns data\r\n//                           [\"data1\", 63],\r\n//                           [\"data2\", 44],\r\n//                           [\"data3\", 12],\r\n//                           [\"data4\", 14],\r\n//                         ],\r\n//                         type: \"pie\", // default type of chart\r\n//                         colors: {\r\n//                           data1: colors[\"blue-darker\"],\r\n//                           data2: colors[\"blue\"],\r\n//                           data3: colors[\"blue-light\"],\r\n//                           data4: colors[\"blue-lighter\"],\r\n//                         },\r\n//                         names: {\r\n//                           // name of each serie\r\n//                           data1: \"A\",\r\n//                           data2: \"B\",\r\n//                           data3: \"C\",\r\n//                           data4: \"D\",\r\n//                         },\r\n//                       }}\r\n//                       legend={{\r\n//                         show: false, //hide legend\r\n//                       }}\r\n//                       padding={{\r\n//                         bottom: 0,\r\n//                         top: 0,\r\n//                       }}\r\n//                     />\r\n//                   </Card.Body>\r\n//                 </Card>\r\n//               </Grid.Col>\r\n//               <Grid.Col sm={6}>\r\n//                 <ProgressCard\r\n//                   header=\"New feedback\"\r\n//                   content=\"62\"\r\n//                   progressColor=\"red\"\r\n//                   progressWidth={28}\r\n//                 />\r\n//               </Grid.Col>\r\n//               <Grid.Col sm={6}>\r\n//                 <ProgressCard\r\n//                   header=\"Today profit\"\r\n//                   content=\"$652\"\r\n//                   progressColor=\"green\"\r\n//                   progressWidth={84}\r\n//                 />\r\n//               </Grid.Col>\r\n//               <Grid.Col sm={6}>\r\n//                 <ProgressCard\r\n//                   header=\"Users online\"\r\n//                   content=\"76\"\r\n//                   progressColor=\"yellow\"\r\n//                   progressWidth={34}\r\n//                 />\r\n//               </Grid.Col>\r\n//             </Grid.Row>\r\n//           </Grid.Col>\r\n//           <Grid.Col sm={6} lg={3}>\r\n//             <StampCard\r\n//               color=\"blue\"\r\n//               icon=\"dollar-sign\"\r\n//               header={\r\n//                 <a href=\"#\">\r\n//                   132 <small>Sales</small>\r\n//                 </a>\r\n//               }\r\n//               footer={\"12 waiting payments\"}\r\n//             />\r\n//           </Grid.Col>\r\n//           <Grid.Col sm={6} lg={3}>\r\n//             <StampCard\r\n//               color=\"green\"\r\n//               icon=\"shopping-cart\"\r\n//               header={\r\n//                 <a href=\"#\">\r\n//                   78 <small>Orders</small>\r\n//                 </a>\r\n//               }\r\n//               footer={\"32 shipped\"}\r\n//             />\r\n//           </Grid.Col>\r\n//           <Grid.Col sm={6} lg={3}>\r\n//             <StampCard\r\n//               color=\"red\"\r\n//               icon=\"users\"\r\n//               header={\r\n//                 <a href=\"#\">\r\n//                   1,352 <small>Members</small>\r\n//                 </a>\r\n//               }\r\n//               footer={\"163 registered today\"}\r\n//             />\r\n//           </Grid.Col>\r\n//           <Grid.Col sm={6} lg={3}>\r\n//             <StampCard\r\n//               color=\"yellow\"\r\n//               icon=\"message-square\"\r\n//               header={\r\n//                 <a href=\"#\">\r\n//                   132 <small>Comments</small>\r\n//                 </a>\r\n//               }\r\n//               footer={\"16 waiting\"}\r\n//             />\r\n//           </Grid.Col>\r\n//         </Grid.Row>\r\n//         <Grid.Row cards deck>\r\n//           <Grid.Col width={12}>\r\n//             <Card>\r\n//               <Table\r\n//                 responsive\r\n//                 highlightRowOnHover\r\n//                 hasOutline\r\n//                 verticalAlign=\"center\"\r\n//                 cards\r\n//                 className=\"text-nowrap\"\r\n//               >\r\n//                 <Table.Header>\r\n//                   <Table.Row>\r\n//                     <Table.ColHeader alignContent=\"center\" className=\"w-1\">\r\n//                       <i className=\"icon-people\" />\r\n//                     </Table.ColHeader>\r\n//                     <Table.ColHeader>User</Table.ColHeader>\r\n//                     <Table.ColHeader>Usage</Table.ColHeader>\r\n//                     <Table.ColHeader alignContent=\"center\">\r\n//                       Payment\r\n//                     </Table.ColHeader>\r\n//                     <Table.ColHeader>Activity</Table.ColHeader>\r\n//                     <Table.ColHeader alignContent=\"center\">\r\n//                       Satisfaction\r\n//                     </Table.ColHeader>\r\n//                     <Table.ColHeader alignContent=\"center\">\r\n//                       <i className=\"icon-settings\" />\r\n//                     </Table.ColHeader>\r\n//                   </Table.Row>\r\n//                 </Table.Header>\r\n//                 <Table.Body>\r\n//                   <Table.Row>\r\n//                     <Table.Col alignContent=\"center\">\r\n//                       <Avatar\r\n//                         imageURL=\"demo/faces/female/26.jpg\"\r\n//                         className=\"d-block\"\r\n//                         status=\"green\"\r\n//                       />\r\n//                     </Table.Col>\r\n//                     <Table.Col>\r\n//                       <div>Elizabeth Martin</div>\r\n//                       <Text size=\"sm\" muted>\r\n//                         Registered: Mar 19, 2018\r\n//                       </Text>\r\n//                     </Table.Col>\r\n//                     <Table.Col>\r\n//                       <div className=\"clearfix\">\r\n//                         <div className=\"float-left\">\r\n//                           <strong>42%</strong>\r\n//                         </div>\r\n//                         <div className=\"float-right\">\r\n//                           <Text.Small muted>\r\n//                             Jun 11, 2015 - Jul 10, 2015\r\n//                           </Text.Small>\r\n//                         </div>\r\n//                       </div>\r\n//                       <Progress size=\"xs\">\r\n//                         <Progress.Bar color=\"yellow\" width={42} />\r\n//                       </Progress>\r\n//                     </Table.Col>\r\n//                     <Table.Col alignContent=\"center\">\r\n//                       <Icon payment name=\"visa\" />\r\n//                     </Table.Col>\r\n//                     <Table.Col>\r\n//                       <Text size=\"sm\" muted>\r\n//                         Last login\r\n//                       </Text>\r\n//                       <div>4 minutes ago</div>\r\n//                     </Table.Col>\r\n//                     <Table.Col alignContent=\"center\">42%</Table.Col>\r\n//                     <Table.Col alignContent=\"center\">\r\n//                       <Dropdown\r\n//                         trigger={\r\n//                           <Dropdown.Trigger\r\n//                             icon=\"more-vertical\"\r\n//                             toggle={false}\r\n//                           />\r\n//                         }\r\n//                         position=\"right\"\r\n//                         items={\r\n//                           <React.Fragment>\r\n//                             <Dropdown.Item icon=\"tag\">Action </Dropdown.Item>\r\n//                             <Dropdown.Item icon=\"edit-2\">\r\n//                               Another action{\" \"}\r\n//                             </Dropdown.Item>\r\n//                             <Dropdown.Item icon=\"message-square\">\r\n//                               Something else here\r\n//                             </Dropdown.Item>\r\n//                             <Dropdown.ItemDivider />\r\n//                             <Dropdown.Item icon=\"link\">\r\n//                               {\" \"}\r\n//                               Separated link\r\n//                             </Dropdown.Item>\r\n//                           </React.Fragment>\r\n//                         }\r\n//                       />\r\n//                     </Table.Col>\r\n//                   </Table.Row>\r\n//                 </Table.Body>\r\n//               </Table>\r\n//             </Card>\r\n//           </Grid.Col>\r\n//         </Grid.Row>\r\n//         <Grid.Row>\r\n//           <Grid.Col sm={6} lg={4}>\r\n//             <Card title=\"Browser Stats\">\r\n//               <Table className=\"card-table\">\r\n//                 <Table.Row>\r\n//                   <Table.Col>\r\n//                     <Icon prefix=\"fa\" name=\"chrome\" className=\"text-muted\" />\r\n//                   </Table.Col>\r\n//                   <Table.Col>Google Chrome</Table.Col>\r\n//                   <Table.Col className=\"text-right\">\r\n//                     <Text RootComponent=\"span\" muted>\r\n//                       23%\r\n//                     </Text>\r\n//                   </Table.Col>\r\n//                 </Table.Row>\r\n//               </Table>\r\n//             </Card>\r\n//           </Grid.Col>\r\n//           <Grid.Col sm={6} lg={4}>\r\n//             <Card title=\"Projects\">\r\n//               <Table cards>\r\n//                 <Table.Row>\r\n//                   <Table.Col>Admin Template</Table.Col>\r\n//                   <Table.Col alignContent=\"right\">\r\n//                     <Badge color=\"default\">65%</Badge>\r\n//                   </Table.Col>\r\n//                 </Table.Row>\r\n//               </Table>\r\n//             </Card>\r\n//           </Grid.Col>\r\n//           <Grid.Col md={6} lg={4}>\r\n//             <Card title=\"Members\">\r\n//               <Card.Body>\r\n//                 <ul className=\"list-unstyled list-separated\">\r\n//                   <li className=\"list-separated-item\">\r\n//                     <Grid.Row className=\"align-items-center\">\r\n//                       <Grid.Col auto>\r\n//                         <Avatar\r\n//                           size=\"md\"\r\n//                           className=\"d-block\"\r\n//                           imageURL=\"demo/faces/female/12.jpg\"\r\n//                         />\r\n//                       </Grid.Col>\r\n//                       <Grid.Col>\r\n//                         <div>\r\n//                           <a className=\"text-inherit\" href=\"#\">\r\n//                             Amanda Hunt\r\n//                           </a>\r\n//                         </div>\r\n//                         <Text.Small muted className=\"d-block item-except h-1x\">\r\n//                           amanda_hunt@example.com\r\n//                         </Text.Small>\r\n//                       </Grid.Col>\r\n//                       <Grid.Col auto>\r\n//                         <Dropdown\r\n//                           trigger={\r\n//                             <Dropdown.Trigger\r\n//                               icon=\"more-vertical\"\r\n//                               toggle={false}\r\n//                             />\r\n//                           }\r\n//                           position=\"right\"\r\n//                           items={\r\n//                             <React.Fragment>\r\n//                               <Dropdown.Item icon=\"tag\">Action </Dropdown.Item>\r\n//                               <Dropdown.Item icon=\"edit-2\">\r\n//                                 {\" \"}\r\n//                                 Another action{\" \"}\r\n//                               </Dropdown.Item>\r\n//                               <Dropdown.Item icon=\"message-square\">\r\n//                                 {\" \"}\r\n//                                 Something else here\r\n//                               </Dropdown.Item>\r\n//                               <Dropdown.ItemDivider />\r\n//                               <Dropdown.Item icon=\"link\">\r\n//                                 {\" \"}\r\n//                                 Separated link\r\n//                               </Dropdown.Item>\r\n//                             </React.Fragment>\r\n//                           }\r\n//                         />\r\n//                       </Grid.Col>\r\n//                     </Grid.Row>\r\n//                   </li>\r\n//                 </ul>\r\n//               </Card.Body>\r\n//             </Card>\r\n//           </Grid.Col>\r\n//           <Grid.Col md={6} lg={12}>\r\n//             <Grid.Row>\r\n//               <Grid.Col sm={6} lg={3}>\r\n//                 <StatsCard\r\n//                   layout={2}\r\n//                   movement={5}\r\n//                   total=\"423\"\r\n//                   label=\"Users online\"\r\n//                   chart={\r\n//                     <C3Chart\r\n//                       style={{ height: \"100%\" }}\r\n//                       padding={{\r\n//                         bottom: -10,\r\n//                         left: -1,\r\n//                         right: -1,\r\n//                       }}\r\n//                       data={{\r\n//                         names: {\r\n//                           data1: \"Users online\",\r\n//                         },\r\n//                         columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\r\n//                         type: \"area\",\r\n//                       }}\r\n//                       legend={{\r\n//                         show: false,\r\n//                       }}\r\n//                       transition={{\r\n//                         duration: 0,\r\n//                       }}\r\n//                       point={{\r\n//                         show: false,\r\n//                       }}\r\n//                       tooltip={{\r\n//                         format: {\r\n//                           title: function (x) {\r\n//                             return \"\";\r\n//                           },\r\n//                         },\r\n//                       }}\r\n//                       axis={{\r\n//                         y: {\r\n//                           padding: {\r\n//                             bottom: 0,\r\n//                           },\r\n//                           show: false,\r\n//                           tick: {\r\n//                             outer: false,\r\n//                           },\r\n//                         },\r\n//                         x: {\r\n//                           padding: {\r\n//                             left: 0,\r\n//                             right: 0,\r\n//                           },\r\n//                           show: false,\r\n//                         },\r\n//                       }}\r\n//                       color={{\r\n//                         pattern: [\"#467fcf\"],\r\n//                       }}\r\n//                     />\r\n//                   }\r\n//                 />\r\n//               </Grid.Col>\r\n//               <Grid.Col sm={6} lg={3}>\r\n//                 <StatsCard\r\n//                   layout={2}\r\n//                   movement={-3}\r\n//                   total=\"423\"\r\n//                   label=\"Users online\"\r\n//                   chart={\r\n//                     <C3Chart\r\n//                       style={{ height: \"100%\" }}\r\n//                       padding={{\r\n//                         bottom: -10,\r\n//                         left: -1,\r\n//                         right: -1,\r\n//                       }}\r\n//                       data={{\r\n//                         names: {\r\n//                           data1: \"Users online\",\r\n//                         },\r\n//                         columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\r\n//                         type: \"area\",\r\n//                       }}\r\n//                       legend={{\r\n//                         show: false,\r\n//                       }}\r\n//                       transition={{\r\n//                         duration: 0,\r\n//                       }}\r\n//                       point={{\r\n//                         show: false,\r\n//                       }}\r\n//                       tooltip={{\r\n//                         format: {\r\n//                           title: function (x) {\r\n//                             return \"\";\r\n//                           },\r\n//                         },\r\n//                       }}\r\n//                       axis={{\r\n//                         y: {\r\n//                           padding: {\r\n//                             bottom: 0,\r\n//                           },\r\n//                           show: false,\r\n//                           tick: {\r\n//                             outer: false,\r\n//                           },\r\n//                         },\r\n//                         x: {\r\n//                           padding: {\r\n//                             left: 0,\r\n//                             right: 0,\r\n//                           },\r\n//                           show: false,\r\n//                         },\r\n//                       }}\r\n//                       color={{\r\n//                         pattern: [\"#e74c3c\"],\r\n//                       }}\r\n//                     />\r\n//                   }\r\n//                 />\r\n//               </Grid.Col>\r\n//               <Grid.Col sm={6} lg={3}>\r\n//                 <StatsCard\r\n//                   layout={2}\r\n//                   movement={-3}\r\n//                   total=\"423\"\r\n//                   label=\"Users online\"\r\n//                   chart={\r\n//                     <C3Chart\r\n//                       style={{ height: \"100%\" }}\r\n//                       padding={{\r\n//                         bottom: -10,\r\n//                         left: -1,\r\n//                         right: -1,\r\n//                       }}\r\n//                       data={{\r\n//                         names: {\r\n//                           data1: \"Users online\",\r\n//                         },\r\n//                         columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\r\n//                         type: \"area\",\r\n//                       }}\r\n//                       legend={{\r\n//                         show: false,\r\n//                       }}\r\n//                       transition={{\r\n//                         duration: 0,\r\n//                       }}\r\n//                       point={{\r\n//                         show: false,\r\n//                       }}\r\n//                       tooltip={{\r\n//                         format: {\r\n//                           title: function (x) {\r\n//                             return \"\";\r\n//                           },\r\n//                         },\r\n//                       }}\r\n//                       axis={{\r\n//                         y: {\r\n//                           padding: {\r\n//                             bottom: 0,\r\n//                           },\r\n//                           show: false,\r\n//                           tick: {\r\n//                             outer: false,\r\n//                           },\r\n//                         },\r\n//                         x: {\r\n//                           padding: {\r\n//                             left: 0,\r\n//                             right: 0,\r\n//                           },\r\n//                           show: false,\r\n//                         },\r\n//                       }}\r\n//                       color={{\r\n//                         pattern: [\"#5eba00\"],\r\n//                       }}\r\n//                     />\r\n//                   }\r\n//                 />\r\n//               </Grid.Col>\r\n//               <Grid.Col sm={6} lg={3}>\r\n//                 <StatsCard\r\n//                   layout={2}\r\n//                   movement={9}\r\n//                   total=\"423\"\r\n//                   label=\"Users online\"\r\n//                   chart={\r\n//                     <C3Chart\r\n//                       style={{ height: \"100%\" }}\r\n//                       padding={{\r\n//                         bottom: -10,\r\n//                         left: -1,\r\n//                         right: -1,\r\n//                       }}\r\n//                       data={{\r\n//                         names: {\r\n//                           data1: \"Users online\",\r\n//                         },\r\n//                         columns: [[\"data1\", 30, 40, 10, 40, 12, 22, 40]],\r\n//                         type: \"area\",\r\n//                       }}\r\n//                       legend={{\r\n//                         show: false,\r\n//                       }}\r\n//                       transition={{\r\n//                         duration: 0,\r\n//                       }}\r\n//                       point={{\r\n//                         show: false,\r\n//                       }}\r\n//                       tooltip={{\r\n//                         format: {\r\n//                           title: function (x) {\r\n//                             return \"\";\r\n//                           },\r\n//                         },\r\n//                       }}\r\n//                       axis={{\r\n//                         y: {\r\n//                           padding: {\r\n//                             bottom: 0,\r\n//                           },\r\n//                           show: false,\r\n//                           tick: {\r\n//                             outer: false,\r\n//                           },\r\n//                         },\r\n//                         x: {\r\n//                           padding: {\r\n//                             left: 0,\r\n//                             right: 0,\r\n//                           },\r\n//                           show: false,\r\n//                         },\r\n//                       }}\r\n//                       color={{\r\n//                         pattern: [\"#f1c40f\"],\r\n//                       }}\r\n//                     />\r\n//                   }\r\n//                 />\r\n//               </Grid.Col>\r\n//             </Grid.Row>\r\n//           </Grid.Col>\r\n//           <Grid.Col width={12}>\r\n//             <Card title=\"Invoices\">\r\n//               <Table\r\n//                 responsive\r\n//                 className=\"card-table table-vcenter text-nowrap\"\r\n//                 headerItems={[\r\n//                   { content: \"No.\", className: \"w-1\" },\r\n//                   { content: \"Invoice Subject\" },\r\n//                   { content: \"Client\" },\r\n//                   { content: \"VAT No.\" },\r\n//                   { content: \"Created\" },\r\n//                   { content: \"Status\" },\r\n//                   { content: \"Price\" },\r\n//                   { content: null },\r\n//                   { content: null },\r\n//                 ]}\r\n//                 bodyItems={[\r\n//                   {\r\n//                     key: \"1\",\r\n//                     item: [\r\n//                       {\r\n//                         content: (\r\n//                           <Text RootComponent=\"span\" muted>\r\n//                             001401\r\n//                           </Text>\r\n//                         ),\r\n//                       },\r\n//                       {\r\n//                         content: (\r\n//                           <a href=\"invoice.html\" className=\"text-inherit\">\r\n//                             Design Works\r\n//                           </a>\r\n//                         ),\r\n//                       },\r\n//                       { content: \"Carlson Limited\" },\r\n//                       { content: \"87956621\" },\r\n//                       { content: \"15 Dec 2017\" },\r\n//                       {\r\n//                         content: (\r\n//                           <React.Fragment>\r\n//                             <span className=\"status-icon bg-success\" /> Paid\r\n//                           </React.Fragment>\r\n//                         ),\r\n//                       },\r\n//                       { content: \"$887\" },\r\n//                       {\r\n//                         alignContent: \"right\",\r\n//                         content: (\r\n//                           <React.Fragment>\r\n//                             <Button size=\"sm\" color=\"secondary\">\r\n//                               Manage\r\n//                             </Button>\r\n//                             <div className=\"dropdown\">\r\n//                               <Button\r\n//                                 color=\"secondary\"\r\n//                                 size=\"sm\"\r\n//                                 isDropdownToggle\r\n//                               >\r\n//                                 Actions\r\n//                               </Button>\r\n//                             </div>\r\n//                           </React.Fragment>\r\n//                         ),\r\n//                       },\r\n//                       { content: <Icon link name=\"edit\" /> },\r\n//                     ],\r\n//                   },\r\n//                 ]}\r\n//               />\r\n//             </Card>\r\n//           </Grid.Col>\r\n//         </Grid.Row>\r\n//       </Page.Content>\r\n//     </SiteWrapper>\r\n//   );\r\n// }\r\n\r\n// export default DashboardPage;","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n \r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n \r\nclass SimpleMap extends Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 59.95,\r\n      lng: 30.33\r\n    },\r\n    zoom: 11\r\n  };\r\n \r\n  render() {\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: '100vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: 'AIzaSyAr95iF4la1cc3iF_6xwKsmM55zEWITLAU' }}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          <AnyReactComponent\r\n            lat={10.832171 }\r\n            lng={106.776889}\r\n            text=\"Quận 9\"\r\n          />\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default SimpleMap;","import LoginContainer from \"./containers/LoginContainer\";\r\nimport RegisterContainer from \"./containers/RegisterContainer\";\r\n\r\nimport * as React from \"react\";\r\nimport \"bootstrap\";\r\nimport \"tabler-react/dist/Tabler.css\";\r\nimport \"./App.css\";\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware,compose } from 'redux';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport rootReducer from \"./reducers/rootReducers\";\r\n\r\nimport { TrendingFeeds } from \"./containers/TrendingFeedsContainer\";\r\nimport { HeadlinesFeeds } from \"./containers/HeadlinesFeedsContainer\";\r\nimport ViewDetailRedirect from \"./components/ViewDetailRedirect\";\r\nimport NotFound from './pages/NotFound'\r\nimport DashboardPage from \"./pages/DashboardPage\";\r\nimport GoogleMap from \"./pages/Map\";\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(applyMiddleware(thunk)));\r\n\r\nfunction App(props) {\r\n  \r\n  return (\r\n    <React.StrictMode>\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path='/' component={HeadlinesFeeds} />\r\n            <Route exact path='/headlines' component={HeadlinesFeeds} />\r\n            <Route exact path='/trendings' component={TrendingFeeds}/>\r\n            <Route exact path='/login' component={LoginContainer} />\r\n            <Route exact path='/register' component={RegisterContainer} />\r\n            <Route exact path='/map' component={GoogleMap} />\r\n            <Route exact path={[\"/management/dashboard\",'/management']} component={DashboardPage}>\r\n            </Route>\r\n            <Route exact path=\"/detail/:id\" component={ViewDetailRedirect} />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n          \r\n        </Router>\r\n      </Provider>\r\n    </React.StrictMode>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { Route, Router, Switch } from 'react-router-dom';\r\n\r\nimport AppV2 from \"./App.v2.react\";\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nif(rootElement) {\r\n  ReactDOM.render(<AppV2/>, rootElement);\r\n} else {\r\n  throw new Error(\"Could not find root element to mount to!\");\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}